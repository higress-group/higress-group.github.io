---
import { Button } from "@serverless-cd/goat-ui";
import { Icon } from "@astrojs/starlight/components";
---

<div class="lg:sl-flex two-column-content-wrapper">
  {
    Astro.props.toc && (
      <aside class="right-sidebar-container">
        <div class="right-sidebar">
          <slot name="right-sidebar" />
        </div>
      </aside>
    )
  }
  <div class="main-pane">
    <div id="back-btn" class="pt-12 pl-6">
      <Button
        variant="secondary"
        target="_self"
        class="rounded-3xl"
      >
        <Icon name="left-arrow" class="text-lg align-middle" />
        <span>BACK</span>
      </Button>
    </div>
    <slot />
  </div>
</div>

<style is:global>
  .two-column-content-wrapper {
    .main-pane {
      isolation: isolate;
    }

    @media (min-width: 72rem) {
      .right-sidebar-container {
        order: 2;
        position: relative;
        width: calc(
          var(--sl-sidebar-width) +
            (100% - var(--sl-content-width) - var(--sl-sidebar-width)) / 2
        );
      }

      .right-sidebar {
        position: fixed;
        top: 0;
        border-inline-start: 1px solid var(--sl-color-gray-6);
        padding-top: var(--sl-nav-height);
        width: 100%;
        height: 100vh;
        overflow-y: auto;
        scrollbar-width: none;
      }

      .main-pane {
        width: 100%;
      }

      [data-has-sidebar][data-has-toc] .main-pane {
        --sl-content-margin-inline: auto 0;

        order: 1;
        width: calc(
          var(--sl-content-width) +
            (100% - var(--sl-content-width) - var(--sl-sidebar-width)) / 2
        );
      }
    }
  }
</style>

<script>
  function addBackBtnClick (){
  const url = new URL(window.location.href);
  let source = url.searchParams.get("source");
  if(source) {
    source = source.replace(/_/g, "/");
  };
  const backBtn: HTMLAnchorElement = document.querySelector("#back-btn a");
  if(backBtn){
    backBtn.onclick = (e) => {
      e.preventDefault();
      const params = new URLSearchParams(window.location.search);
      params.delete("source")

      let newPathname = ""
      if (source && source !== 'undefined') {
          newPathname = `/${source}/`;
      } else {
          newPathname = '/';
      }
      console.log("======backbtn")
      const newUrl = `${newPathname}${params.toString() ? `?${params.toString()}` : ''}`;

      window.location.href = newUrl; 
    };
  }
  
}
document.addEventListener("astro:page-load",addBackBtnClick);
document.addEventListener("DOMContentLoaded", addBackBtnClick)
</script>