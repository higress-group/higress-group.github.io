---
import { useTranslations } from "@i18n/util";
import Button from "@components/common/Button.astro";
import { SOLUTION_LIST } from "@/constant";
import Right from '../icon/Right.astro';

const t = useTranslations(Astro);
---

<span class="card-solution-wrapper">
  <card-solution class="card-solution block bg-neutral mb-4 mt-9">
    <div class="bottom-solutions-card flex items-center justify-center h-fit">
      <div
        class="solution-container h-[31.75rem] w-full flex flex-nowrap justify-start"
      >
        {
          SOLUTION_LIST.map((item, index) => {
            const { src, checked } = item;
            return (
              <>
                <input
                  type="radio"
                  name="silder"
                  id={`c${index}`}
                  checked={checked}
                />
                <label
                  for={`c${index}`}
                  input-id={`c${index}`}
                  class="solutions-card overflow-hidden flex flex-col justify-between cursor-pointer rounded-2xl mx-2"
                >
                  <div class="px-16 relative">
                    <div class="right_arrow absolute top-1/2 left-1.5 opacity-1"><Right/></div>
                    <div class="main-title text-sm text-base-100 mt-[1.25rem] tracking-[0.15em] text-center opacity-0 tracking-wider">
                      {t("home.solutions.about")}
                    </div>
                    <div class="user_introduce flex justify-between h-full mt-12 opacity-0">
                      <div class="">
                        <div class="w-[489px] h-[177px] mb-24 text-secondary text-[20px] leading-9">
                          {item.introduce}
                        </div>
                        <div class="flex text-secondary">
                          <img src={item.logo} class="w-auto h-12 object-contain mr-4">
                          <div class='text-lg'>
                            <p class="font-medium">{item.user}</p>
                            <p class="font-light">{item.userInfo}</p>
                          </div>
                        </div>
                      </div>
                      <div>
                        <div class="right-container w-auto h-[236px] flex flex-col justify-around py-11 px-9">
                          <p class="text-6xl text-secondary ">
                            <span class='text-[100px]'>{item.speed}</span>
                            <span>{item.unit}</span></p>
                          {item.speedDes&& item.speedDes.map((des)=>(
                            <p class='text-lg font-light text-secondary'>{des}</p>
                          ))}
                        </div>
                        <div class="button ml-16 mb-[3.75rem] mt-11">
                          <Button size="large" class="rounded-3xl text-xs w-[156px]" href={src} target="_blank">
                            {t("home.solutions.action")}
                          </Button>
                        </div>
                      </div>
                    </div>
                  </div>
                </label>
              </>
            );
          })
        }
      </div>
    </div>

    <div class="mobile-bottom-solutions-card w-full flex flex-col hidden p-[1.5rem]">
      {
        SOLUTION_LIST.map((item, index) => {
          const { src, introduce } = item;
          return (
            <div class="solutions-mobile-card mx-auto h-[14rem] overflow-hidden flex flex-col justify-between cursor-pointer p-4 rounded-3xl">
              <div class="flex align-center flex-nowrap w-full">
                <div class="mx-auto text-xs font-normal text-secondary tracking-wider">
                  {t("home.solutions.about")}
                </div>
              </div>
              <div class="w-full text-secondary text-base line-clamp-2">{introduce}</div>
              <div class="button mx-auto">
                <Button class="rounded-3xl" href={src} target="_blank">
                  {t("home.solutions.action")}
                </Button>
              </div>
            </div>
          );
        })
      }
    </div>
  </card-solution>
</span>

<script>
  class HomeSolutionCard extends HTMLElement {
    cardSolution: Element | null = null;
    currentInputid: string;
    flag: boolean;
    constructor() {
      super();
      // 初始化时不要访问 DOM 或设置属性
      this.currentInputid = "c0";
      this.flag = true;
      // 由于在 constructor 中无法访问 DOM，所以不在这里绑定事件
    }

    // 使用 connectedCallback 来设置初始化逻辑和事件监听器
    connectedCallback() {
      var _this = this;
      this.cardSolution = this.querySelector(".solution-container");
      if (this.cardSolution) {
        this.cardSolution.addEventListener("mouseover", function (e) {
          _this.selectedLabel(e);
        });
      }
    }

    selectedLabel(e) {
      var _this = this;
      // 尝试查找最近的拥有 `input-id` 属性的父级元素
      var label = e.target.closest('[input-id]');
      var inputId = label ? label.getAttribute("input-id") : null;
      if (this.flag && inputId && inputId !== this.currentInputid) {
        this.currentInputid = inputId;
        this.flag = false;
        setTimeout(function () {
          _this.flag = true;
        }, 200);
        var input = this.querySelector("input[type=radio]#" + inputId);
        if (input && !input.checked) {
          input.checked = true;
        }
      }
    }
  }

  customElements.define("card-solution", HomeSolutionCard);
</script>

<style is:global>
  .card-solution-wrapper {
    .bottom-solutions-card {
      width: 85.125rem;
    }
    .solutions-card {
      /* 默认宽度 */
      width: 9.75rem;
      background-size: cover;
      transition: 0.6s cubic-bezier(0.28, -0.03, 0, 0.99);
      /* box-shadow: 0px 10px 30px -5px rgba(0, 0, 0, 0.8); */
      background-size: cover;
      background-position: center;
    }
    .right-container{
      background-color: rgba(255, 255, 255, 0.1);
      span{
        font-family: 'Roboto';
      }
    }
    .solution-container > .solutions-card:first-of-type {
      margin-left: 0;
    }
    .solution-container > .solutions-card:last-of-type {
      margin-right: 0;
    }
    @keyframes showcontent {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    @keyframes hidecontent {
      from {
        opacity: 1;
      }
      to {
        opacity: 0;
      }
    }
    input {
      display: none;
    }
    input:checked + label {
      flex: 1;
      animation: zoom_animation 5s 0.6s infinite;
    }
    input:checked + label .main-title {
      animation: showcontent 0.3s ease-in-out 0.3s 1 forwards;
    }
    
    input:checked + label .user_introduce {
      animation: showcontent 0.3s ease-in-out 0.3s 1 forwards;
    }

    input:checked + label .right_arrow {
      animation: hidecontent 0.3s ease-in-out 0.3s 1 forwards;
    }

    .solutions-card[for="c0"] {
      background-image: url("https://img.alicdn.com/imgextra/i4/O1CN01ty7hGn1byAGtOvH32_!!6000000003533-0-tps-2720-1814.jpg");
    }
    .solutions-card[for="c1"] {
      background-image: url("https://img.alicdn.com/imgextra/i2/O1CN01PwKlbo1HDdirw4APl_!!6000000000724-0-tps-2688-1792.jpg");
    }
    .solutions-card[for="c2"] {
      background-image: url("https://img.alicdn.com/imgextra/i4/O1CN01DMaqDl1ZSu0LLU8Px_!!6000000003194-0-tps-2688-1792.jpg");
    }

    @keyframes zoom_animation {
      0% {
        background-size: 100% cover;
      }
      5% {
        background-size: 100% auto;
      }
      50% {
        background-size: 140% auto;
      }
      100% {
        background-size: 100% auto;
      }
    }

    /* 小于50rem  小于 800px */
    @media (max-width: 50rem) {
      .card-solution {
        width: 100%;
      }
      .top-title {
        margin-top: 2.5rem;
        margin-bottom: 2.5rem;
      }
      .top-title .title {
        font-size: 1.125rem; /* 18px */
        line-height: 1.75rem; /* 28px */
      }
      .bottom-solutions-card {
        width: 100%;
        display: none !important;
      }
      .mobile-bottom-solutions-card {
        display: block !important;
      }
      .solutions-mobile-card {
        background-size: cover;
        background-image: url("https://img.alicdn.com/imgextra/i1/O1CN017UPiCy1xJmqGNV93n_!!6000000006423-2-tps-1688-1016.png");
      }
      .mobile-bottom-solutions-card > .solutions-mobile-card:first-of-type {
        margin-bottom: 1rem;
      }
      .mobile-bottom-solutions-card > .solutions-mobile-card:nth-child(2) {
        margin-bottom: 1rem;
      }
      .mobile-bottom-solutions-card > .solutions-mobile-card:nth-child(3) {
        margin-bottom: 1rem;
      }
    }


    @media (min-width: 50rem) and (max-width: 86rem) {
      && {
        width: 100%;
      }
      .card-solution {
        width: 100%;
      }
      .bottom-solutions-card {
        width: 100%;
      }
      .solution-container {
        width: 100%;
      }
      input:checked + label {
        flex: 1;
      }
    }
  }
</style>
