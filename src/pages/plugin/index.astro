---
import BaseLayout from "@layouts/BaseLayout.astro";
import PluginIntroduce from "@components/plugin/PluginIntroduce.astro";
import PluginHub from "@components/plugin/PluginHub/index";
import CloudFooter from "@components/common/Footer.astro";
import { isChinese } from "@i18n/util";
import { useTranslations } from "@i18n/util";
const t = useTranslations(Astro);
const ifzh = isChinese(Astro);
import { getCollection } from "astro:content";

const Functionality = {
  ai: {
    description: "AI",
    children: 
    [
      { key: 'api-consumer', label: '大模型API消费' },
      { key: 'api-dev', label: '大模型API开发' },
      { key: 'api-o11y', label: '大模型API观测' },
      { key: 'api-provider', label: '大模型API供应' },
      { key: 'others', label: '其他工具' },
    ]
  },
  authentication: { description: "认证" },
  transformation: { description: "转换" },
  traffic: { description: "流量" },
  security: { description: "安全" },
};

const lang = ifzh ? "zh-cn" : "en";

// 拿到插件的文档
const posts = await getCollection("docs", (item) => {
  return item.slug.includes(`latest/${lang}/plugin`);
});

const generateLink = (slug) => {
  const arr = slug.split("/" + lang);
  return (lang ==='en' ? "/en" : "") + "/docs/" + arr.join("") + "/?source=plugin";
}

const dataSource = posts
  .map((item) => {
    // 从 item.id 中提取可能的 key
    const match = item.id.match(/plugins\/(.*?)\/[^\/]+\.md$/);

    const key = match && match[1]
      ? match[1].indexOf('/') !== -1
        ? match[1].split('/')[0] // 匹配并提取 key
        : match[1]
      : "";
    const childKey = key==='ai'? match[1].split('/')[1] : "";
    const functionality = Functionality[key];
    // 查找ai 副标题
    const secondaryTitle = (functionality?.children && functionality.children.find(child => child.key === childKey)?.label) || '';
    return {
      Img: "",
      Title: item.data.title,
      Tiers: "企业版",
      Des: item.data.description,
      Link: generateLink(item.slug),
      SecondaryTitle: secondaryTitle,
      Functionality: functionality?.description || "",
      SupportBy: "Higress",
      GithubHigressUrl:
        item.data.githubHigressUrl ||
        `https://github.com/alibaba/higress/tree/main/plugins/wasm-go/extensions/${item.slug.split("/").pop()}`,
    };
  })
  .filter((item) => item.Functionality)
  .sort((a, b) => {
    // 将“大模型API供应”（key: ai，childKey: api-provider）放在最前面
    if (a.SecondaryTitle === "大模型API供应") return -1;
    if (b.SecondaryTitle === "大模型API供应") return 1;
    return 0; // 默认不改变顺序
  });
---

<BaseLayout title={t("plugin.title")} description={t("plugin.description")}>
  <PluginIntroduce />
  <PluginHub client:load dataSource={dataSource} />
  <CloudFooter />
</BaseLayout>
