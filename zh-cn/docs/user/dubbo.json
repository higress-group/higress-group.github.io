{
  "filename": "dubbo.md",
  "__html": "<h1>实现 Dubbo 服务发现和路由</h1>\n<p>Higress提供了从HTTP协议到Dubbo协议进行转换的功能，用户通过配置协议转换，可以将一个Dubbo服务以HTTP接口暴露出来，从而用HTTP请求实现对Dubbo接口的调用。本文将通过示例来介绍如何用Higress配置HTTP到Dubbo的协议转换。</p>\n<h2>前提条件</h2>\n<p>Higress目前支持的Dubbo框架的版本为2.x。若您使用Dubbo3.0，要求使用dubbo协议（目前暂不支持Triple协议）。</p>\n<hr>\n<p>假设我们有如下一个Dubbo服务，并指定了该服务的version为“1.0.0”，group为“dev”，下面我们将介绍如何为该服务配置协议转换。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.alibaba.nacos.example.dubbo.service;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DemoService</span> </span>{\n    <span class=\"hljs-function\">String <span class=\"hljs-title\">sayName</span><span class=\"hljs-params\">(String name)</span></span>;\n}\n</code></pre>\n<h2>为Dubbo服务配置路由</h2>\n<h3>方法一：通过Dubbo服务的Ip和port实现Dubbo服务发现和路由</h3>\n<ol>\n<li>创建以下ServiceEntry资源，其中指定了Dubbo服务的Ip与端口号：</li>\n</ol>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.istio.io/v1beta1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceEntry</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">dubbo</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">higress-system</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">endpoints:</span>\n  <span class=\"hljs-comment\"># 此处更换为自己dubbo服务的ip</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">address:</span> <span class=\"hljs-string\">xxx.xxx.xxx.xxx</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-attr\">http:</span> <span class=\"hljs-number\">20880</span>\n  <span class=\"hljs-attr\">hosts:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">dubbo.static</span>\n  <span class=\"hljs-attr\">location:</span> <span class=\"hljs-string\">MESH_EXTERNAL</span>\n  <span class=\"hljs-attr\">ports:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span>\n    <span class=\"hljs-attr\">number:</span> <span class=\"hljs-number\">20880</span>\n    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">HTTP</span>\n  <span class=\"hljs-attr\">resolution:</span> <span class=\"hljs-string\">STATIC</span>\n</code></pre>\n<ol start=\"2\">\n<li>创建以下VirtualService资源，为Dubbo服务创建一条名为test的路由</li>\n</ol>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.istio.io/v1beta1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">VirtualService</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">global</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">higress-system</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">gateways:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">higress-system/global</span>\n  <span class=\"hljs-attr\">hosts:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">'*'</span>\n  <span class=\"hljs-attr\">http:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">match:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">ignoreUriCase:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">uri:</span>\n        <span class=\"hljs-attr\">prefix:</span> <span class=\"hljs-string\">/dubbo</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test</span>\n    <span class=\"hljs-attr\">route:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">destination:</span>\n        <span class=\"hljs-attr\">host:</span> <span class=\"hljs-string\">dubbo.static</span>\n        <span class=\"hljs-attr\">port:</span>\n          <span class=\"hljs-attr\">number:</span> <span class=\"hljs-number\">20880</span>\n</code></pre>\n<h3>方法二：通过对接Nacos/Zookeeper注册中心实现Dubbo服务发现和路由</h3>\n<p>TBD</p>\n<h2>通过EnvoyFilter配置HTTP到Dubbo协议转换规则</h2>\n<p>在为Dubbo服务创建了路由之后，需要配置具体的协议转换规则。Higress通过Envoy的HTTP Filter实现从HTTP协议到Dubbo协议的转换，本示例通过创建如下EnvoyFilter资源来对协议转换规则进行配置。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.istio.io/v1alpha3</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">EnvoyFilter</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http-dubbo-transcoder-test</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">higress-system</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">configPatches:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">applyTo:</span> <span class=\"hljs-string\">HTTP_FILTER</span>\n    <span class=\"hljs-attr\">match:</span>\n      <span class=\"hljs-attr\">context:</span> <span class=\"hljs-string\">GATEWAY</span>\n      <span class=\"hljs-attr\">listener:</span>\n        <span class=\"hljs-attr\">filterChain:</span>\n          <span class=\"hljs-attr\">filter:</span>\n            <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">envoy.filters.network.http_connection_manager</span>\n            <span class=\"hljs-attr\">subFilter:</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">envoy.filters.http.router</span>\n    <span class=\"hljs-attr\">patch:</span>\n      <span class=\"hljs-attr\">operation:</span> <span class=\"hljs-string\">INSERT_BEFORE</span>\n      <span class=\"hljs-attr\">value:</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">envoy.filters.http.http_dubbo_transcoder</span>\n        <span class=\"hljs-attr\">typed_config:</span>\n          <span class=\"hljs-string\">'@type'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-string\">type.googleapis.com/udpa.type.v1.TypedStruct</span>\n          <span class=\"hljs-attr\">type_url:</span> <span class=\"hljs-string\">type.googleapis.com/envoy.extensions.filters.http.http_dubbo_transcoder.v3.HttpDubboTranscoder</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">applyTo:</span> <span class=\"hljs-string\">HTTP_ROUTE</span>\n    <span class=\"hljs-attr\">match:</span>\n      <span class=\"hljs-attr\">context:</span> <span class=\"hljs-string\">GATEWAY</span>\n      <span class=\"hljs-attr\">routeConfiguration:</span>\n        <span class=\"hljs-attr\">vhost:</span>\n          <span class=\"hljs-attr\">route:</span>\n            <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test</span>\n    <span class=\"hljs-attr\">patch:</span>\n      <span class=\"hljs-attr\">operation:</span> <span class=\"hljs-string\">MERGE</span>\n      <span class=\"hljs-attr\">value:</span>\n        <span class=\"hljs-attr\">route:</span>\n          <span class=\"hljs-attr\">upgrade_configs:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">connect_config:</span>\n              <span class=\"hljs-attr\">allow_post:</span> <span class=\"hljs-literal\">true</span>\n            <span class=\"hljs-attr\">upgrade_type:</span> <span class=\"hljs-string\">CONNECT</span>\n        <span class=\"hljs-attr\">typed_per_filter_config:</span>\n          <span class=\"hljs-attr\">envoy.filters.http.http_dubbo_transcoder:</span>\n            <span class=\"hljs-string\">'@type'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-string\">type.googleapis.com/udpa.type.v1.TypedStruct</span>\n            <span class=\"hljs-attr\">type_url:</span> <span class=\"hljs-string\">type.googleapis.com/envoy.extensions.filters.http.http_dubbo_transcoder.v3.HttpDubboTranscoder</span>\n            <span class=\"hljs-attr\">value:</span>\n              <span class=\"hljs-attr\">request_validation_options:</span>\n                <span class=\"hljs-attr\">reject_unknown_method:</span> <span class=\"hljs-literal\">true</span>\n                <span class=\"hljs-attr\">reject_unknown_query_parameters:</span> <span class=\"hljs-literal\">true</span>\n              <span class=\"hljs-attr\">services_mapping:</span>\n              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">group:</span> <span class=\"hljs-string\">dev</span>\n                <span class=\"hljs-attr\">method_mapping:</span>\n                <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sayName</span>\n                  <span class=\"hljs-attr\">parameter_mapping:</span>\n                  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">extract_key:</span> <span class=\"hljs-string\">p</span>\n                    <span class=\"hljs-attr\">extract_key_spec:</span> <span class=\"hljs-string\">ALL_QUERY_PARAMETER</span>\n                    <span class=\"hljs-attr\">mapping_type:</span> <span class=\"hljs-string\">java.lang.String</span>\n                  <span class=\"hljs-attr\">passthrough_setting:</span>\n                    <span class=\"hljs-attr\">passthrough_all_headers:</span> <span class=\"hljs-literal\">true</span>\n                  <span class=\"hljs-attr\">path_matcher:</span>\n                    <span class=\"hljs-attr\">match_http_method_spec:</span> <span class=\"hljs-string\">ALL_GET</span>\n                    <span class=\"hljs-attr\">match_pattern:</span> <span class=\"hljs-string\">/dubbo/hello</span>\n                <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">com.alibaba.nacos.example.dubbo.service.DemoService</span>\n                <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span>\n              <span class=\"hljs-attr\">url_unescape_spec:</span> <span class=\"hljs-string\">ALL_CHARACTERS_EXCEPT_RESERVED</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">applyTo:</span> <span class=\"hljs-string\">CLUSTER</span>\n    <span class=\"hljs-attr\">match:</span>\n      <span class=\"hljs-attr\">cluster:</span>\n        <span class=\"hljs-attr\">service:</span> <span class=\"hljs-string\">dubbo.static</span>\n      <span class=\"hljs-attr\">context:</span> <span class=\"hljs-string\">GATEWAY</span>\n    <span class=\"hljs-attr\">patch:</span>\n      <span class=\"hljs-attr\">operation:</span> <span class=\"hljs-string\">MERGE</span>\n      <span class=\"hljs-attr\">value:</span>\n        <span class=\"hljs-attr\">upstream_config:</span>\n          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">envoy.upstreams.http.dubbo_tcp</span>\n          <span class=\"hljs-attr\">typed_config:</span>\n            <span class=\"hljs-string\">'@type'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-string\">type.googleapis.com/udpa.type.v1.TypedStruct</span>\n            <span class=\"hljs-attr\">type_url:</span> <span class=\"hljs-string\">type.googleapis.com/envoy.extensions.upstreams.http.dubbo_tcp.v3.DubboTcpConnectionPoolProto</span>\n</code></pre>\n<h2>通过HTTP请求调用Dubbo服务</h2>\n<p>完成以上配置后，通过curl命令调用sayName方法进行验证：</p>\n<pre><code class=\"language-bash\">curl <span class=\"hljs-string\">\"localhost/dubbo/hello?p=higress\"</span> \n{<span class=\"hljs-string\">\"result\"</span>:<span class=\"hljs-string\">\"Service [name :demoService , port : 20880] sayName(\\\"higress\\\") : Hello,higress\"</span>}\n</code></pre>\n<h2>Filter配置参考</h2>\n<h3>HttpDubboTranscoder</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url_unescape_spec</td>\n<td>enum</td>\n<td>URL unescaping policy</td>\n<td>可选值：<br> - ALL_CHARACTERS_EXCEPT_RESERVED<br>- ALL_CHARACTERS_EXCEPT_SLASH<br>- ALL_CHARACTERS</td>\n</tr>\n<tr>\n<td>request_validation_options</td>\n<td>RequestValidateOptions</td>\n<td>请求验证选项</td>\n<td></td>\n</tr>\n<tr>\n<td>services_mapping</td>\n<td>list of DubboServiceMapping</td>\n<td>每一项对应了一条映射规则</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.RequestValidateOptions</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reject_unknown_query_parameters</td>\n<td>bool</td>\n<td>对于无法成功映射query parameters的请求是否直接拒绝</td>\n</tr>\n<tr>\n<td>reject_unknown_method</td>\n<td>bool</td>\n<td>对于无法映射为dubbo服务的请求是否直接拒绝</td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.DubboServiceMapping</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>dubbo服务名</td>\n<td>例如：&quot;com.alibaba.nacos.example.dubbo.service.DemoService&quot;</td>\n</tr>\n<tr>\n<td>version</td>\n<td>string</td>\n<td>dubbo服务的版本</td>\n<td>例如：&quot;1.0.0&quot;</td>\n</tr>\n<tr>\n<td>group</td>\n<td>string</td>\n<td>dubbo服务的分组</td>\n<td>例如：&quot;dev&quot;</td>\n</tr>\n<tr>\n<td>method_mapping</td>\n<td>list of DubboMethodMapping</td>\n<td>每一项对应了指定dubbo服务中的某个方法的映射规则</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.DubboMethodMapping</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>方法名</td>\n<td>例：&quot;sayName&quot;</td>\n</tr>\n<tr>\n<td>path_matcher</td>\n<td>PathMatcher</td>\n<td>方法匹配规则</td>\n<td></td>\n</tr>\n<tr>\n<td>parameter_mapping</td>\n<td>lis of ParameterMapping</td>\n<td>每一项对应一个参数映射规则</td>\n<td></td>\n</tr>\n<tr>\n<td>passthrough_setting</td>\n<td>PassthroughSetting</td>\n<td>指定Header透传规则</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.DubboMethodMapping.PathMatcher</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>match_pattern</td>\n<td>string</td>\n<td>方法的匹配路径｜例如：&quot;/dubbo/hello&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>match_http_method_spec</td>\n<td>enum</td>\n<td>方法匹配的HTTP Method</td>\n<td>可选值：<br>-ALL_GET<br>- ALL_POST<br>- ALL_PUT<br>- ALL_DELETE<br>- ALL_PATCH</td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.DubboMethodMapping.ParameterMapping</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>extract_key_spec</td>\n<td>enum</td>\n<td>参数提取位置</td>\n<td>可选值：<br>- ALL_QUERY_PARAMETER<br>- ALL_HEADER<br>- ALL_PATH<br>- ALL_BODY</td>\n</tr>\n<tr>\n<td>extract_key</td>\n<td>string</td>\n<td>参数提取的key</td>\n<td>例：my_param</td>\n</tr>\n<tr>\n<td>mapping_type</td>\n<td>string</td>\n<td>参数在dubbo服务中的类型</td>\n<td>例：&quot;java.lang.String&quot;</td>\n</tr>\n</tbody>\n</table>\n<h3>HttpDubboTranscoder.DubboMethodMapping.PassthroughSetting</h3>\n<p>配置HTTP Header透传规则，被透传的Header会被放在Dubbo调用的attachment中传给dubbo服务</p>\n<p>注：Header的透传规则，此项配置为one of类型，下面两个字段选其一</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>passthrough_all_headers</td>\n<td>bool</td>\n<td>透传所有Header</td>\n</tr>\n<tr>\n<td>passthrough_headers</td>\n<td>list of string</td>\n<td>透传指定Header，每一项指定了Header中的一个key</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/zh-cn/docs/user/dubbo.html",
  "meta": {
    "title": "实现 Dubbo 服务发现和路由",
    "keywords": "Dubbo,discovery",
    "description": "实现 Dubbo 服务发现和路由"
  }
}