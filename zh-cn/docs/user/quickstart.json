{
  "filename": "quickstart.md",
  "__html": "<h1>快速开始</h1>\n<h2>在标准 K8s 集群中使用</h2>\n<h3>第一步：安装 Istio</h3>\n<h4>选项1. 安装 Higress Istio（推荐）</h4>\n<p>安装后，<code>istiod</code> 需要等待 Higress 完成部署完成，才会处于就绪状态。</p>\n<pre><code class=\"language-bash\">kubectl create ns istio-system\nhelm install istio -n istio-system oci://higress-registry.cn-hangzhou.cr.aliyuncs.com/charts/istio\n</code></pre>\n<h4>选项2. 安装标准版 Istio</h4>\n<p>请参考<a href=\"../ops/deploy-by-helm.md\">安装部署文档</a>了解详情</p>\n<h3>第二步：安装 Higress</h3>\n<h4>Helm 安装命令</h4>\n<pre><code class=\"language-bash\">kubectl create ns higress-system\nhelm install higress -n higress-system  oci://higress-registry.cn-hangzhou.cr.aliyuncs.com/charts/higress\n</code></pre>\n<h3>第三步：创建并测试 Ingress 路由</h3>\n<p>假设在 default 命名空间下已经部署了一个 test service，服务端口为 80 ，则创建下面这个 K8s Ingress</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.k8s.io/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Ingress</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">simple-example</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">rules:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">host:</span> <span class=\"hljs-string\">foo.bar.com</span>\n    <span class=\"hljs-attr\">http:</span>\n      <span class=\"hljs-attr\">paths:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/foo</span>\n        <span class=\"hljs-attr\">pathType:</span> <span class=\"hljs-string\">Prefix</span>\n        <span class=\"hljs-attr\">backend:</span>\n          <span class=\"hljs-attr\">service:</span>\n            <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test</span>\n            <span class=\"hljs-attr\">port:</span>\n              <span class=\"hljs-attr\">number:</span> <span class=\"hljs-number\">80</span>\n</code></pre>\n<p>测试能访问到该服务：</p>\n<pre><code class=\"language-bash\">curl <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(kubectl get svc -n higress-system higress-gateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')</span>\"</span>/foo -H <span class=\"hljs-string\">'host: foo.bar.com'</span>\n</code></pre>\n<h2>在本地环境中使用</h2>\n<h3>第一步、 安装 kubectl &amp; kind</h3>\n<p><strong>MacOS：</strong></p>\n<pre><code class=\"language-bash\">curl -Lo ./kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\n<span class=\"hljs-comment\"># for Intel Macs</span>\n[ $(uname -m) = x86_64 ]&amp;&amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-darwin-amd64\n<span class=\"hljs-comment\"># for M1 / ARM Macs</span>\n[ $(uname -m) = arm64 ] &amp;&amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-darwin-arm64\nchmod +x ./kind ./kubectl\nmv ./kind ./kubectl /some-dir-in-your-PATH/\n</code></pre>\n<p><strong>Windows 中使用 PowerShell:</strong></p>\n<pre><code class=\"language-bash\">curl.exe -Lo kubectl.exe https://storage.googleapis.com/kubernetes-release/release/$(curl.exe -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/windows/amd64/kubectl.exe\ncurl.exe -Lo kind-windows-amd64.exe https://kind.sigs.k8s.io/dl/v0.17.0/kind-windows-amd64\nMove-Item .\\kind-windows-amd64.exe c:\\some-dir-in-your-PATH\\kind.exe\nMove-Item .\\kubectl.exe c:\\some-dir-in-your-PATH\\kubectl.exe\n</code></pre>\n<p><strong>Linux:</strong></p>\n<pre><code class=\"language-bash\">curl -Lo ./kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\ncurl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64\nchmod +x ./kind ./kubectl\nsudo mv ./kind ./kubectl /usr/<span class=\"hljs-built_in\">local</span>/bin/kind\n</code></pre>\n<h3>第二步、 创建并启用 kind</h3>\n<p>首先创建一个集群配置文件: <code>cluster.conf</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># cluster.conf</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Cluster</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">kind.x-k8s.io/v1alpha4</span>\n<span class=\"hljs-attr\">nodes:</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">role:</span> <span class=\"hljs-string\">control-plane</span>\n  <span class=\"hljs-attr\">kubeadmConfigPatches:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">|\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress-ready=true\"\n</span>  <span class=\"hljs-attr\">extraPortMappings:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">80</span>\n    <span class=\"hljs-attr\">hostPort:</span> <span class=\"hljs-number\">80</span>\n    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">443</span>\n    <span class=\"hljs-attr\">hostPort:</span> <span class=\"hljs-number\">443</span>\n    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span>\n</code></pre>\n<p>Mac &amp; Linux 系统执行:</p>\n<pre><code class=\"language-bash\">kind create cluster --name higress --config=cluster.conf\nkubectl config use-context kind-higress\n</code></pre>\n<p>Windows 系统执行:</p>\n<pre><code class=\"language-bash\">kind.exe create cluster --name higress --config=cluster.conf\nkubectl.exe config use-context kind-higress\n</code></pre>\n<h3>第三步、 安装 istio &amp; higress</h3>\n<pre><code class=\"language-bash\">kubectl create ns istio-system\nhelm install istio -n istio-system oci://higress-registry.cn-hangzhou.cr.aliyuncs.com/charts/istio-local\nkubectl create ns higress-system\nhelm install higress -n higress-system oci://higress-registry.cn-hangzhou.cr.aliyuncs.com/charts/higress-local\n</code></pre>\n<h3>第四步、 创建 Ingress 资源并测试</h3>\n<pre><code class=\"language-bash\">kubectl apply -f https://kind.sigs.k8s.io/examples/ingress/usage.yaml\n</code></pre>\n<p>测试 Ingress 生效：</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># should output \"foo\"</span>\ncurl localhost/foo\n<span class=\"hljs-comment\"># should output \"bar\"</span>\ncurl localhost/bar\n</code></pre>\n",
  "link": "/zh-cn/docs/user/quickstart.html",
  "meta": {
    "title": "Higress 快速开始",
    "keywords": "Higress",
    "description": "Higress 快速开始."
  }
}