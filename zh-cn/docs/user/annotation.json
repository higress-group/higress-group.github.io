{
  "filename": "annotation.md",
  "__html": "<h1>Ingress Annotaion 配置说明</h1>\n<p>标准的K8s Ingress资源只能处理简单场景下的HTTP(S)流量路由，无法处理流量切分，超时重试，Header控制和跨域等问题。因此，不同的Ingress Controller利用自定义的Ingress Annotation增强Ingress能力。常见的Nginx Ingress Controller引入了100多个Annotation对Ingress在流量治理和安全防护上进行了扩展实现。目前，Higress已经全面兼容了大部分Nginx Ingress Annotation，方便用户从Nginx Ingress无缝迁移至Higress，本文主要介绍Higress关于Ingress Annotation的配置说明。</p>\n<h2>Ingress Annotation</h2>\n<h3>特殊说明</h3>\n<h4>Annotation Key 前缀</h4>\n<p>以下出现的Nginx Ingress Annotation都已被Higress支持，您可以根据使用习惯继续使用Nginx Ingress的Annotation前缀<code>nginx.ingress.kubernetes.io</code>，或者使用Higress Ingress的Annotation前缀<code>higress.io</code>，两者是等价的。</p>\n<h4>作用域说明</h4>\n<ul>\n<li>Ingress：作用域为Ingress的Annotation的作用范围仅限当前Ingress上定义的路由规则。</li>\n<li>域名：作用域为域名的Annotation，其作用范围为所有Ingress上出现的相同Host。</li>\n<li>服务：作用域为服务的Annotation，其作用范围为所有Ingress上出现的相同Service。</li>\n</ul>\n<h3>流量治理</h3>\n<h4>灰度发布</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary\">nginx.ingress.kubernetes.io/canary</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>开启或关闭灰度发布</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-by-header\">nginx.ingress.kubernetes.io/canary-by-header</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>基于Request Header Key 流量切分</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-by-header-value\">nginx.ingress.kubernetes.io/canary-by-header-value</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>基于Request Header Value 流量切分，Value为精确匹配</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-by-header-pattern\">nginx.ingress.kubernetes.io/canary-by-header-pattern</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>基于Request Header Value 流量切分，Value为正则匹配</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-by-cookie\">nginx.ingress.kubernetes.io/canary-by-cookie</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>基于Request Cookie Key 流量切分</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-weight\">nginx.ingress.kubernetes.io/canary-weight</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>基于权重 流量切分</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/canary-weight-total\">nginx.ingress.kubernetes.io/canary-weight-total</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>权重总和</td>\n</tr>\n</tbody>\n</table>\n<h4>Fallback（容灾）</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/default-backend\">nginx.ingress.kubernetes.io/default-backend</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>容灾服务。当Ingress定义的服务没有可用节点时，请求会自动转发该容灾服务。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/custom-http-errors\">nginx.ingress.kubernetes.io/custom-http-errors</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>该注解和<code>default-backend</code>一起工作。当后端服务返回指定HTTP响应码，原始请求会被再次转发至容灾服务。<br> &gt; 注意：转发至容灾服务时，请求的Path会被重写为/，该行为与ingress-nginx保持一致</td>\n</tr>\n</tbody>\n</table>\n<h4>重写</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/rewrite-target\">nginx.ingress.kubernetes.io/rewrite-target</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>将Ingress定义的原path重写为指定目标，支持Group Capture.</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/upstream-vhost\">nginx.ingress.kubernetes.io/upstream-vhost</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>匹配Ingress定义的路由的请求在转发给后端服务时，修改头部host值为指定值。</td>\n</tr>\n</tbody>\n</table>\n<h4>重定向</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/ssl-redirect\">nginx.ingress.kubernetes.io/ssl-redirect</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>HTTP 重定向为HTTPS</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/force-ssl-redirect\">nginx.ingress.kubernetes.io/force-ssl-redirect</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>HTTP 重定向为HTTPS</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/permanent-redirect\">nginx.ingress.kubernetes.io/permanent-redirect</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>永久重定向</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/permanent-redirect-code\">nginx.ingress.kubernetes.io/permanent-redirect-code</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>永久重定向状态码</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/temporal-redirect\">nginx.ingress.kubernetes.io/temporal-redirect</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>临时重定向</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/app-root\">nginx.ingress.kubernetes.io/app-root</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>修改应用根路径，对于访问/的请求将会被重定向为设置的新路径</td>\n</tr>\n</tbody>\n</table>\n<h4>跨域</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/enable-cors\">nginx.ingress.kubernetes.io/enable-cors</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>开启或关闭跨域</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-allow-origin\">nginx.ingress.kubernetes.io/cors-allow-origin</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>允许的第三方站点</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-allow-methods\">nginx.ingress.kubernetes.io/cors-allow-methods</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>允许的请求方法，如GET、POST、PUT等</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-allow-headers\">nginx.ingress.kubernetes.io/cors-allow-headers</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>允许的请求Header</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-expose-headers\">nginx.ingress.kubernetes.io/cors-expose-headers</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>允许的暴露给浏览器的响应Header</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-allow-credentials\">nginx.ingress.kubernetes.io/cors-allow-credentials</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>是否允许携带凭证信息</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/cors-max-age\">nginx.ingress.kubernetes.io/cors-max-age</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>预检结果的最大缓存时间</td>\n</tr>\n</tbody>\n</table>\n<h4>重试</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-next-upstream-tries\">nginx.ingress.kubernetes.io/proxy-next-upstream-tries</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>请求的最大重试次数。默认3次。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-next-upstream-timeout\">nginx.ingress.kubernetes.io/proxy-next-upstream-timeout</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>请求重试的超时时间，单位秒。默认未配置超时时间。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-next-upstream\">nginx.ingress.kubernetes.io/proxy-next-upstream</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>请求重试条件，参考<a href=\"http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream</a></td>\n</tr>\n</tbody>\n</table>\n<h4>后端服务使用的协议</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/backend-protocol\">nginx.ingress.kubernetes.io/backend-protocol</a></td>\n<td>服务</td>\n<td>部分兼容。不支持AJP和FCGI</td>\n<td>指定后端服务使用的协议，默认为HTTP，支持HTTP、HTTP2、HTTPS、GRPC和GRPCS</td>\n</tr>\n</tbody>\n</table>\n<h4>负载均衡</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/load-balance\">nginx.ingress.kubernetes.io/load-balance</a></td>\n<td>服务</td>\n<td>部分兼容。不支持<code>ewma</code>算法</td>\n<td>后端服务的普通负载均衡算法。默认为round_robin。 <br>合法值如下：<br>- round_robin：基于轮询的负载均衡。<br>- least_conn：基于最小请求数的负载均衡。<br>- random：基于随机的负载均衡。<br> &gt; 注意：Higress不支持ewma算法，若配置为ewma算法，会回退到round_robin算法。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/upstream-hash-by\">nginx.ingress.kubernetes.io/upstream-hash-by</a></td>\n<td>服务</td>\n<td>部分兼容。暂不支持Nginx变量、常量的组合使用方式</td>\n<td>基于一致Hash的负载均衡算法，Higress支持以下几种形式：<br>1. Higress支持配置部分nginx变量：<br>- $request_uri：请求的Path（包括路径参数）作为Hash Key <br>- $host：请求的Host作为Hash Key<br>- remote_addr：请求的客户端IP作为Hash Key。<br>2. 基于请求header的一致性Hash。您只需配置为http_headerName。<br>3. 基于请求路径参数的一致性Hash。您只需配置为$arg_varName</td>\n</tr>\n</tbody>\n</table>\n<h4>Cookie亲和性</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/affinity\">nginx.ingress.kubernetes.io/affinity</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>亲和性种类，目前只支持cookie，默认为cookie。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/affinity-mode\">nginx.ingress.kubernetes.io/affinity-mode</a></td>\n<td>服务</td>\n<td>部分兼容。暂不支持<code>persistent</code>模式</td>\n<td>亲和性模式，云原生网关目前只支持balanced模式，默认为balanced模式。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/session-cookie-name\">nginx.ingress.kubernetes.io/session-cookie-name</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>配置指定Cookie的值作为Hash Key</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/session\">nginx.ingress.kubernetes.io/session</a></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>-cookie-path</td>\n<td>服务</td>\n<td>兼容</td>\n<td>当指定Cookie不存在，生成的Cookie的Path值，默认为/</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/session-cookie-max-age\">nginx.ingress.kubernetes.io/session-cookie-max-age</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>当指定Cookie不存在，生成的Cookie的过期时间，单位为秒，默认为Session会话级别。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/session-cookie-expires\">nginx.ingress.kubernetes.io/session-cookie-expires</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>当指定Cookie不存在，生成的Cookie的过期时间，单位为秒，默认为Session会话级别。</td>\n</tr>\n</tbody>\n</table>\n<h4>IP访问控制</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/\">nginx.ingress.kubernetes.io/</a><a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#whitelist-source-range\">whitelist-source-range</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>指定路由上的IP白名单，支持IP地址或CIDR地址块，以逗号分隔。</td>\n</tr>\n</tbody>\n</table>\n<h3>安全防护</h3>\n<h4>客户端与网关之前的通信加密</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/ssl-cipher\">nginx.ingress.kubernetes.io/ssl-cipher</a></td>\n<td>域名</td>\n<td>兼容</td>\n<td>指定tls的加密套件，可以指定多个，英文逗号分隔，仅当tls握手时采用TLSv1.0-1.2生效。<br>默认加密套件如下：<br>- ECDHE-ECDSA-AES128-GCM-SHA256<br>- ECDHE-RSA-AES128-GCM-SHA256<br>- ECDHE-ECDSA-AES128-SHA<br>- ECDHE-RSA-AES128-SHA<br>- AES128-GCM-SHA256<br>- AES128-SHA<br>- ECDHE-ECDSA-AES256-GCM-SHA384<br>- ECDHE-RSA-AES256-GCM-SHA384<br>- ECDHE-ECDSA-AES256-SHA<br>- ECDHE-RSA-AES256-SHA<br>- AES256-GCM-SHA384<br>- AES256-SHA</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/auth-tls-secret\">nginx.ingress.kubernetes.io/auth-tls-secret</a></td>\n<td>域名</td>\n<td>部分兼容。secret名字格式必须是：(该域名证书所在的secret的名字)-cacert</td>\n<td>网关使用的CA证书，用于验证MTLS握手期间，客户端提供的证书。该注解主要应用于网关需要验证客户端身份的场景。</td>\n</tr>\n</tbody>\n</table>\n<h4>网关与后端服务之间通信加密</h4>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-ssl-secret\">nginx.ingress.kubernetes.io/proxy-ssl-secret</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>网关使用的客户端证书，用于后端服务对网关进行身份认证</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-ssl-name\">nginx.ingress.kubernetes.io/proxy-ssl-name</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>TLS握手期间使用的SNI</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/proxy-ssl-server-name\">nginx.ingress.kubernetes.io/proxy-ssl-server-name</a></td>\n<td>服务</td>\n<td>兼容</td>\n<td>开启或关闭TLS握手期间使用SNI</td>\n</tr>\n</tbody>\n</table>\n<h4>安全认证</h4>\n<h5>Basic</h5>\n<table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用域</th>\n<th>支持度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/auth-type\">nginx.ingress.kubernetes.io/auth-type</a></td>\n<td>Ingress</td>\n<td>部分兼容。暂只支持Basic。</td>\n<td>认证类型</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/auth-secret\">nginx.ingress.kubernetes.io/auth-secret</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>Secret名字，格式支持<namespace>/<name>，包含被授予能够访问该Ingress上定义的路由的访问权限的用户名和密码。</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/auth-secret-type\">nginx.ingress.kubernetes.io/auth-secret-type</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>Secret内容格式。<br>- auth-file：data的key为auth；value为用户名和密码，多帐号回车分隔<br>- auth-map：data的key为用户名；value为密码</td>\n</tr>\n<tr>\n<td><a href=\"http://nginx.ingress.kubernetes.io/auth-realm\">nginx.ingress.kubernetes.io/auth-realm</a></td>\n<td>Ingress</td>\n<td>兼容</td>\n<td>保护域。相同的保护域共享用户名和密码。</td>\n</tr>\n</tbody>\n</table>\n<h2>备注</h2>\n<p>关于以上提到的Nginx Ingress Annotation的更多信息，请参阅官方文档（<a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#annotations\">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#annotations</a>）。</p>\n",
  "link": "/zh-cn/docs/user/annotation.html",
  "meta": {
    "title": "Ingress Annotaion 配置说明",
    "keywords": "Ingress",
    "description": "Higress Ingress Annotaion 配置说明。"
  }
}