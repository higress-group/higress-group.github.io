import{c as o,__tla as r}from"./astro-component.m4CCZO6J.js";import{r as l,m as v,u as E,__tla as x}from"./constant.D4Mjy2rC.js";import{__tla as y}from"./astro/assets-service.BhtN0nM5.js";let e,t,a,n,p,d,i,f=Promise.all([(()=>{try{return r}catch{}})(),(()=>{try{return x}catch{}})(),(()=>{try{return y}catch{}})()]).then(async()=>{let s;s=`<h2 id="configure-service-source">Configure Service Source</h2>
<div class="expressive-code"><link rel="stylesheet" href="/_astro/ec.1vui4.css"><script type="module" src="/_astro/ec.dy9ns.js"><\/script><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#85E89D">apiVersion</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">networking.higress.io/v1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">kind</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">McpBridge</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">metadata</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">default</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">namespace</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">higress-system</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">spec</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">registries</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Define a service source named "production"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">production</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry type is Nacos 2.x, supporting gRPC protocol</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">type</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">nacos2</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry access address, can be domain name or IP</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">domain</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">192.xxx.xx.32</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry access port, Nacos default is 8848</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">port</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">8848</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Nacos namespace ID</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">nacosNamespaceId</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Nacos service group</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">nacosGroups</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">DEFAULT_GROUP</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Define a service source named "uat"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">uat</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry type is Nacos 1.x, only supporting HTTP protocol</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">type</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">nacos</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry access address, can be domain name or IP</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">domain</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">192.xxx.xx.31</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Registry access port, Nacos default is 8848</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">port</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">8848</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Nacos namespace ID</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">nacosNamespaceId</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">98ac6df3-xxxx-xxxx-xxxx-ab98115dfde4</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># Nacos service group</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">nacosGroups</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">DEFAULT_GROUP</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="apiVersion: networking.higress.io/v1\x7Fkind: McpBridge\x7Fmetadata:\x7F  name: default\x7F  namespace: higress-system\x7Fspec:\x7F  registries:\x7F    # Define a service source named &#x22;production&#x22;\x7F  - name: production\x7F    # Registry type is Nacos 2.x, supporting gRPC protocol\x7F    type: nacos2\x7F    # Registry access address, can be domain name or IP\x7F    domain: 192.xxx.xx.32\x7F    # Registry access port, Nacos default is 8848\x7F    port: 8848\x7F    # Nacos namespace ID\x7F    nacosNamespaceId: d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358\x7F    # Nacos service group\x7F    nacosGroups:\x7F    - DEFAULT_GROUP\x7F    # Define a service source named &#x22;uat&#x22;\x7F  - name: uat\x7F    # Registry type is Nacos 1.x, only supporting HTTP protocol\x7F    type: nacos\x7F    # Registry access address, can be domain name or IP\x7F    domain: 192.xxx.xx.31\x7F    # Registry access port, Nacos default is 8848\x7F    port: 8848\x7F    # Nacos namespace ID\x7F    nacosNamespaceId: 98ac6df3-xxxx-xxxx-xxxx-ab98115dfde4\x7F    # Nacos service group\x7F    nacosGroups:\x7F    - DEFAULT_GROUP"><div></div></button></div></figure></div>
<p>Through the <a href="../mcp-bridge/" referrerpolicy="unsafe-url">McpBridge</a> resource, two service sources are configured, named \u201Cproduction\u201D and \u201Cuat\u201D. It\u2019s important to note that Higress supports both HTTP and gRPC protocols when connecting to Nacos. It is recommended to upgrade Nacos to version 2.x, so that you can specify \u201Cnacos2\u201D in the type field of the above configuration to use the gRPC protocol, which allows faster detection of service changes and consumes fewer Nacos server resources.
Based on the registries array configuration in McpBridge, Higress can easily connect to multiple and different types of service sources (Nacos/Zookeeper/Eureka/Consul/\u2026). For Nacos-type service sources, it supports configuring multiple different namespaces, enabling microservices in different namespaces to share a single gateway, reducing the resource cost of self-built microservice gateways.</p>
<h2 id="configure-ingress">Configure Ingress</h2>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#85E89D">apiVersion</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">networking.k8s.io/v1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">kind</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">Ingress</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">metadata</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">annotations</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">higress.io/destination</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">service-provider.DEFAULT-GROUP.d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358.nacos</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">demo</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">namespace</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">default</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">spec</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">rules</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">http</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">paths</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">backend</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">          </span><span style="--0:#85E89D">resource</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">            </span><span style="--0:#85E89D">apiGroup</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">networking.higress.io</span></div></div><div class="ec-line"><div class="code"><span class="indent">            </span><span style="--0:#85E89D">kind</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">McpBridge</span></div></div><div class="ec-line"><div class="code"><span class="indent">            </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">default</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">path</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">/</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">pathType</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">Prefix</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="apiVersion: networking.k8s.io/v1\x7Fkind: Ingress\x7Fmetadata:\x7F  annotations:\x7F    higress.io/destination: service-provider.DEFAULT-GROUP.d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358.nacos\x7F  name: demo\x7F  namespace: default\x7Fspec:\x7F  rules:\x7F  - http:\x7F      paths:\x7F      - backend:\x7F          resource:\x7F            apiGroup: networking.higress.io\x7F            kind: McpBridge\x7F            name: default\x7F        path: /\x7F        pathType: Prefix"><div></div></button></div></figure></div>
<p>Unlike common Ingress configurations that define a service in the backend, here the resource backend of Ingress is associated with the McpBridge that defines the service source above. And the annotation <code dir="auto">higress.io/destination</code> specifies the target service for the route.</p>
<p>For services from Nacos, the target service format is: \u201Cservice-name.service-group.namespace-id.nacos\u201D. Note that this needs to follow DNS domain format, so underscores \u2019_\u2019 in service groups are converted to hyphens \u2019-\u2018.</p>`,n={title:"Configuring Ingress to Forward to Services Registered in Nacos",keywords:["ingress","higress nacos"],description:"Configuring Ingress to Forward to Services Registered in Nacos",custom_edit_url:"https://github.com/higress-group/higress-group.github.io/blob/main/src/content/docs/latest/en/user/nacos-route.md"},a="/home/runner/work/higress-group.github.io/higress-group.github.io/src/content/docs/latest/en/user/nacos-route.md",i=void 0,d=function(){return`
# Configuring Ingress to Forward to Services Registered in Nacos


## Configure Service Source

\`\`\`yaml
apiVersion: networking.higress.io/v1
kind: McpBridge
metadata:
  name: default
  namespace: higress-system
spec:
  registries:
    # Define a service source named "production"
  - name: production
    # Registry type is Nacos 2.x, supporting gRPC protocol
    type: nacos2
    # Registry access address, can be domain name or IP
    domain: 192.xxx.xx.32
    # Registry access port, Nacos default is 8848
    port: 8848
    # Nacos namespace ID
    nacosNamespaceId: d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358
    # Nacos service group
    nacosGroups:
    - DEFAULT_GROUP
    # Define a service source named "uat"
  - name: uat
    # Registry type is Nacos 1.x, only supporting HTTP protocol
    type: nacos
    # Registry access address, can be domain name or IP
    domain: 192.xxx.xx.31
    # Registry access port, Nacos default is 8848
    port: 8848
    # Nacos namespace ID
    nacosNamespaceId: 98ac6df3-xxxx-xxxx-xxxx-ab98115dfde4
    # Nacos service group
    nacosGroups:
    - DEFAULT_GROUP
\`\`\`

Through the [McpBridge](./mcp-bridge.md) resource, two service sources are configured, named "production" and "uat". It's important to note that Higress supports both HTTP and gRPC protocols when connecting to Nacos. It is recommended to upgrade Nacos to version 2.x, so that you can specify "nacos2" in the type field of the above configuration to use the gRPC protocol, which allows faster detection of service changes and consumes fewer Nacos server resources.
Based on the registries array configuration in McpBridge, Higress can easily connect to multiple and different types of service sources (Nacos/Zookeeper/Eureka/Consul/...). For Nacos-type service sources, it supports configuring multiple different namespaces, enabling microservices in different namespaces to share a single gateway, reducing the resource cost of self-built microservice gateways.


## Configure Ingress

\`\`\`yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    higress.io/destination: service-provider.DEFAULT-GROUP.d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358.nacos
  name: demo
  namespace: default
spec:
  rules:
  - http:
      paths:
      - backend:
          resource:
            apiGroup: networking.higress.io
            kind: McpBridge
            name: default
        path: /
        pathType: Prefix
\`\`\`

Unlike common Ingress configurations that define a service in the backend, here the resource backend of Ingress is associated with the McpBridge that defines the service source above. And the annotation \`higress.io/destination\` specifies the target service for the route.

For services from Nacos, the target service format is: "service-name.service-group.namespace-id.nacos". Note that this needs to follow DNS domain format, so underscores '_' in service groups are converted to hyphens '-'.`},t=function(){return s},p=function(){return[{depth:2,slug:"configure-service-source",text:"Configure Service Source"},{depth:2,slug:"configure-ingress",text:"Configure Ingress"}]},e=o((u,g,m)=>{const{layout:h,...c}=n;return c.file=a,c.url=i,l`${v()}${E(s)}`})});export{e as Content,f as __tla,t as compiledContent,e as default,a as file,n as frontmatter,p as getHeadings,d as rawContent,i as url};
