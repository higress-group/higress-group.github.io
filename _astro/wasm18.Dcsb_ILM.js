import{c,__tla as E}from"./astro-component.m4CCZO6J.js";import{r as y,m as o,u as v,__tla as r}from"./constant.D4Mjy2rC.js";import{__tla as F}from"./astro/assets-service.BhtN0nM5.js";let n,i,a,e,t,d,p,x=Promise.all([(()=>{try{return E}catch{}})(),(()=>{try{return r}catch{}})(),(()=>{try{return F}catch{}})()]).then(async()=>{let s;s=`<p>\u672C\u7AE0\u4ECB\u7ECD\u5982\u4F55\u5728\u63D2\u4EF6\u4E2D\u8C03\u7528 Redis\u3001\u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA\u3001\u4EE5\u53CA\u5F00\u53D1\u57FA\u4E8E\u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u3002</p>
<h2 id="1-redis-\u8C03\u7528">1 Redis \u8C03\u7528</h2>
<p>Higress \u63D2\u4EF6\u7684 Go SDK \u4E2D redis_wrapper.go \u5C01\u88C5 Redis \u8C03\u7528\uFF0C \u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p>
<div class="expressive-code"><link rel="stylesheet" href="/_astro/ec.1vui4.css"><script type="module" src="/_astro/ec.dy9ns.js"><\/script><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u56DE\u8C03\u51FD\u6570</span></div></div><div class="ec-line"><div class="code"><span style="--0:#79B8FF">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisResponseCallback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">func</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">response</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">resp.Value</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u8C03\u7528\u63A5\u53E3</span></div></div><div class="ec-line"><div class="code"><span style="--0:#79B8FF">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisClient</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">interface</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u521D\u59CB\u5316\u63A5\u53E3</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Init(username,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">password</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">timeout</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">int64</span><span style="--0:#E1E4E8">) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">with</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">this</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">function,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">you</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">can</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">call</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">as</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">you</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">are</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">using</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">redis-cli</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u547D\u4EE4\u63A5\u53E3</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Command(cmds</span><span style="--0:#E1E4E8"> []interface{}, callback RedisResponseCallback) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Lua\u811A\u672C\u63A5\u53E3</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Eval(script</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">numkeys</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">int,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">keys,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">args</span><span style="--0:#E1E4E8"> []interface{}, callback RedisResponseCallback) error</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u4EE5\u4E0B\u662F</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u5404\u79CD\u547D\u4EE4\u63A5\u53E3</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Key</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Del(key</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">callback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisResponseCallback</span><span style="--0:#E1E4E8">) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Exists(key</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">callback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisResponseCallback</span><span style="--0:#E1E4E8">) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Expire(key</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">ttl</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">int,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">callback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisResponseCallback</span><span style="--0:#E1E4E8">) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">Persist(key</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">callback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisResponseCallback</span><span style="--0:#E1E4E8">) error</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">...</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisClusterClient,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u8C03\u7528\u63A5\u53E3\u5177\u4F53\u5B9E\u73B0</span></div></div><div class="ec-line"><div class="code"><span style="--0:#79B8FF">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisClusterClient[C</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Cluster]</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">struct</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">cluster</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">C</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">func</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisInit</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">cluster</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Cluster,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">username,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">password</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">string,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">timeout</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">uint32</span><span style="--0:#E1E4E8">) </span><span style="--0:#9ECBFF">error</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">proxywasm.RedisInit</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">cluster.ClusterName</span><span style="--0:#E1E4E8">(), username, password, timeout)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u771F\u6B63\u8C03\u7528</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u7684\u51FD\u6570</span></div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">func</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">RedisCall</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">cluster</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Cluster,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">respQuery</span><span style="--0:#E1E4E8"> []byte, callback RedisResponseCallback) </span><span style="--0:#9ECBFF">error</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">requestID</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">uuid.New</span><span style="--0:#E1E4E8">()</span><span style="--0:#9ECBFF">.String</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">_,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">err</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">proxywasm.DispatchRedisCall</span><span style="--0:#E1E4E8">(</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#B392F0">cluster.ClusterName</span><span style="--0:#E1E4E8">()</span><span style="--0:#B392F0">,</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#B392F0">respQuery,</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#B392F0">func(status</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">int,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">responseSize</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">int</span><span style="--0:#E1E4E8">) </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#B392F0">response,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">err</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">proxywasm.GetRedisCallResponse</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">0,</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">responseSize</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#B392F0">var</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">responseValue</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">resp.Value</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u83B7\u53D6</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Redis</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u56DE\u8C03\u7ED3\u679C</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">responseValue</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#79B8FF">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">callback</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">!=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">nil</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">         </span><span style="--0:#B392F0">//</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\u8C03\u7528\u56DE\u8C03\u51FD\u6570</span></div></div><div class="ec-line"><div class="code"><span class="indent">               </span><span style="--0:#B392F0">callback(responseValue</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">})</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#79B8FF">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">err</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="// Redis \u56DE\u8C03\u51FD\u6570\x7Ftype RedisResponseCallback func(response resp.Value)\x7F\x7F// Redis \u8C03\u7528\u63A5\u53E3\x7Ftype RedisClient interface {\x7F  // \u521D\u59CB\u5316\u63A5\u53E3\x7F  Init(username, password string, timeout int64) error\x7F  // with this function, you can call redis as if you are using redis-cli\x7F  }\x7F  // \u547D\u4EE4\u63A5\u53E3\x7F  Command(cmds []interface{}, callback RedisResponseCallback) error\x7F  // Lua\u811A\u672C\u63A5\u53E3\x7F  Eval(script string, numkeys int, keys, args []interface{}, callback RedisResponseCallback) error\x7F\x7F  // \u4EE5\u4E0B\u662F Redis \u5404\u79CD\u547D\u4EE4\u63A5\u53E3\x7F  // Key\x7F  Del(key string, callback RedisResponseCallback) error\x7F  Exists(key string, callback RedisResponseCallback) error\x7F  Expire(key string, ttl int, callback RedisResponseCallback) error\x7F  Persist(key string, callback RedisResponseCallback) error\x7F    ...\x7F}\x7F\x7F// RedisClusterClient, Redis \u8C03\u7528\u63A5\u53E3\u5177\u4F53\u5B9E\u73B0\x7Ftype RedisClusterClient[C Cluster] struct {\x7F  cluster C\x7F}\x7F\x7Ffunc RedisInit(cluster Cluster, username, password string, timeout uint32) error {\x7F  return proxywasm.RedisInit(cluster.ClusterName(), username, password, timeout)\x7F}\x7F// \u771F\u6B63\u8C03\u7528 Redis \u7684\u51FD\u6570\x7Ffunc RedisCall(cluster Cluster, respQuery []byte, callback RedisResponseCallback) error {\x7F  requestID := uuid.New().String()\x7F  _, err := proxywasm.DispatchRedisCall(\x7F    cluster.ClusterName(),\x7F    respQuery,\x7F    func(status int, responseSize int) {\x7F      response, err := proxywasm.GetRedisCallResponse(0, responseSize)\x7F      var responseValue resp.Value\x7F      // \u83B7\u53D6 Redis \u56DE\u8C03\u7ED3\u679C responseValue\x7F      ...\x7F      if callback != nil {\x7F         // \u8C03\u7528\u56DE\u8C03\u51FD\u6570\x7F               callback(responseValue)\x7F      }\x7F    })\x7F  ...\x7F  return err\x7F}"><div></div></button></div></figure></div>
<p>\u6240\u6709\u8C03\u7528 Redis \u7684\u63A5\u53E3\uFF0C\u6700\u7EC8\u901A\u8FC7 RedisCall \u8C03\u7528 Redis\uFF0C \u540C\u65F6\u56DE\u8C03 RedisResponseCallback \u56DE\u8C03\u51FD\u6570\u3002</p>
<h2 id="2-\u4EE4\u724C\u6876\u9650\u6D41">2 \u4EE4\u724C\u6876\u9650\u6D41</h2>
<p>\u5E38\u89C1\u7684\u9650\u6D41\u7B97\u6CD5\u6709\u56FA\u5B9A\u7A97\u53E3\u9650\u6D41\u7B97\u6CD5\u3001\u6ED1\u52A8\u7A97\u53E3\u9650\u6D41\u7B97\u6CD5\u3001\u6F0F\u6876\u9650\u6D41\u7B97\u6CD5\u3001\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u7B49\u3002\u8FD9\u91CC\u4E3B\u8981\u4ECB\u7ECD\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u3002
\u4EE4\u724C\u6876\u7B97\u6CD5\u539F\u7406\uFF1A</p>
<ul>
<li>\u4EE4\u724C\u4EE5\u56FA\u5B9A\u7684\u9891\u7387\u88AB\u6DFB\u52A0\u5230\u4EE4\u724C\u6876\u4E2D\u3002</li>
<li>\u5982\u679C\u4EE4\u724C\u6570\u91CF\u6EE1\u4E86\uFF0C\u8D85\u8FC7\u4EE4\u724C\u6876\u5BB9\u91CF\u7684\u9650\u5236\uFF0C\u90A3\u5C31\u4E22\u5F03\u3002</li>
<li>\u7CFB\u7EDF\u5728\u63A5\u53D7\u5230\u4E00\u4E2A\u7528\u6237\u8BF7\u6C42\u65F6\uFF0C\u90FD\u4F1A\u5148\u53BB\u4EE4\u724C\u6876\u8981\u4E00\u4E2A\u4EE4\u724C\u3002\u5982\u679C\u62FF\u5230\u4EE4\u724C\uFF0C\u90A3\u4E48\u5C31\u5904\u7406\u8FD9\u4E2A\u8BF7\u6C42\u7684\u4E1A\u52A1\u903B\u8F91\u3002</li>
<li>\u5982\u679C\u62FF\u4E0D\u5230\u4EE4\u724C\uFF0C\u5C31\u76F4\u63A5\u62D2\u7EDD\u8FD9\u4E2A\u8BF7\u6C42\u3002</li>
</ul>
<p>\u4EE4\u724C\u6876\u7B97\u6CD5\u5141\u8BB8\u4E00\u5B9A\u91CF\u7684\u7A81\u53D1\u8BF7\u6C42\uFF0C\u56E0\u4E3A\u6876\u53EF\u4EE5\u5B58\u50A8\u4E00\u5B9A\u6570\u91CF\u7684\u4EE4\u724C\uFF0C\u4ECE\u800C\u5728\u77ED\u671F\u5185\u5904\u7406\u66F4\u591A\u7684\u8BF7\u6C42\u3002\u5177\u4F53\u539F\u7406\u89C1\u4E0B\u56FE\uFF1A
<img src="https://img.alicdn.com/imgextra/i2/O1CN018T2vsi1bbGU9PeVx6_!!6000000003483-0-tps-902-922.jpg" alt="img" referrerpolicy="no-referrer"></p>
<p>\u5173\u4E8E QPS \u9650\u6D41\u7B97\u6CD5\u548C\u4EE4\u724C\u6876\u7B97\u6CD5\u4E24\u79CD\u9650\u6D41\u7B97\u6CD5\u4F18\u7F3A\u70B9\uFF0C\u53EF\u4EE5\u53C2\u8003\uFF1A<a href="https://help.aliyun.com/document_detail/149952.html" referrerpolicy="unsafe-url" rel="nofollow" target="_blank">\u9650\u6D41\u7B97\u6CD5\u9009\u62E9</a>\u3002</p>
<h2 id="3-\u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA">3 \u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA</h2>
<h3 id="31--\u521D\u59CB\u5316\u5DE5\u7A0B\u76EE\u5F55">3.1  \u521D\u59CB\u5316\u5DE5\u7A0B\u76EE\u5F55</h3>
<ol>
<li>\u65B0\u5EFA\u4E00\u4E2A\u5DE5\u7A0B\u76EE\u5F55\u6587\u4EF6 cluster-bucket-limit\u3002</li>
</ol>
<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#B392F0">mkdir</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">cluster-bucket-limit</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="mkdir cluster-bucket-limit"><div></div></button></div></figure></div>
<ol start="2">
<li>\u5728\u6240\u5EFA\u76EE\u5F55\u4E0B\u6267\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF0C\u521D\u59CB\u5316 Go \u5DE5\u7A0B\u3002</li>
</ol>
<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#B392F0">go</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">mod</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">init</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">cluster-bucket-limit</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="go mod init cluster-bucket-limit"><div></div></button></div></figure></div>
<p>\u66F4\u8BE6\u7EC6\u4FE1\u606F\u53C2\u8003\u7B2C\u5341\u56DB\u7AE0 Wasm \u63D2\u4EF6\u4ECB\u7ECD\u548C\u5F00\u53D1\u81EA\u5B9A\u4E49\u63D2\u4EF6\u3002</p>
<h3 id="32--makefiledockerfiledocker-composeyamlenvoyyaml-\u6587\u4EF6">3.2  Makefile\u3001Dockerfile\u3001docker-compose.yaml\u3001envoy.yaml \u6587\u4EF6</h3>
<ol>
<li>Makefile\u3001Dockerfile</li>
</ol>
<p>Makefile\u3001Dockerfile \u6587\u4EF6\u53C2\u8003\u7B2C\u5341\u56DB\u7AE0 Wasm \u63D2\u4EF6\u4ECB\u7ECD\u548C\u5F00\u53D1\u81EA\u5B9A\u4E49\u63D2\u4EF6\u3002</p>
<ol start="2">
<li>docker-compose.yaml</li>
</ol>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#85E89D">version</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">'3.9'</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">services</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">envoy</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">image</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/gateway:v1.4.1</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">entrypoint</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">/usr/local/bin/envoy</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6"># \u6CE8\u610F\u8FD9\u91CC\u5BF9wasm\u5F00\u542F\u4E86debug\u7EA7\u522B\u65E5\u5FD7\uFF0C\u6B63\u5F0F\u90E8\u7F72\u65F6\u5219\u9ED8\u8BA4info\u7EA7\u522B</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">command</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">-c /etc/envoy/envoy.yaml --log-level info --log-path /etc/envoy/envoy.log --component-log-level wasm:debug</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">depends_on</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">echo-server</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">networks</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">wasmtest</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">ports</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">"10000:10000"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">"9901:9901"</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">volumes</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">./envoy.yaml:/etc/envoy/envoy.yaml</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">./build/plugin.wasm:/etc/envoy/plugin.wasm</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">./envoy.log:/etc/envoy/envoy.log</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">echo-server</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">image</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/echo-server:1.3.0</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">networks</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">wasmtest</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">ports</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">"3000:3000"</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">redis</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">image</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">registry.cn-hangzhou.aliyuncs.com/2456868764/redis:latest</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">environment</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">ALLOW_EMPTY_PASSWORD=yes</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">networks</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">wasmtest</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">ipv4_address</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">172.20.0.100</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">ports</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#9ECBFF">"6379:6379"</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">networks</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">wasmtest</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">ipam</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">        </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">subnet</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">172.20.0.0/24</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="version: &#x27;3.9&#x27;\x7Fservices:\x7F  envoy:\x7F    image: higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/gateway:v1.4.1\x7F    entrypoint: /usr/local/bin/envoy\x7F    # \u6CE8\u610F\u8FD9\u91CC\u5BF9wasm\u5F00\u542F\u4E86debug\u7EA7\u522B\u65E5\u5FD7\uFF0C\u6B63\u5F0F\u90E8\u7F72\u65F6\u5219\u9ED8\u8BA4info\u7EA7\u522B\x7F    command: -c /etc/envoy/envoy.yaml --log-level info --log-path /etc/envoy/envoy.log --component-log-level wasm:debug\x7F    depends_on:\x7F      - echo-server\x7F    networks:\x7F      - wasmtest\x7F    ports:\x7F      - &#x22;10000:10000&#x22;\x7F      - &#x22;9901:9901&#x22;\x7F    volumes:\x7F      - ./envoy.yaml:/etc/envoy/envoy.yaml\x7F      - ./build/plugin.wasm:/etc/envoy/plugin.wasm\x7F      - ./envoy.log:/etc/envoy/envoy.log\x7F  echo-server:\x7F    image: higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/echo-server:1.3.0\x7F    networks:\x7F      - wasmtest\x7F    ports:\x7F      - &#x22;3000:3000&#x22;\x7F  redis:\x7F    image: registry.cn-hangzhou.aliyuncs.com/2456868764/redis:latest\x7F    environment:\x7F      - ALLOW_EMPTY_PASSWORD=yes\x7F    networks:\x7F      wasmtest:\x7F        ipv4_address: 172.20.0.100\x7F    ports:\x7F      - &#x22;6379:6379&#x22;\x7Fnetworks:\x7F  wasmtest:\x7F    ipam:\x7F      config:\x7F        - subnet: 172.20.0.0/24"><div></div></button></div></figure></div>
<ol start="3">
<li>envoy.yaml \u6587\u4EF6</li>
</ol>
<p>envoy.yaml \u914D\u7F6E\u6587\u4EF6\u5982\u4E0B\uFF1A</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#85E89D">admin</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#85E89D">socket_address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">protocol</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">TCP</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">0.0.0.0</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">port_value</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">9901</span></div></div><div class="ec-line"><div class="code"><span style="--0:#85E89D">static_resources</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">listeners</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">listener_0</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">socket_address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">          </span><span style="--0:#85E89D">protocol</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">TCP</span></div></div><div class="ec-line"><div class="code"><span class="indent">          </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">0.0.0.0</span></div></div><div class="ec-line"><div class="code"><span class="indent">          </span><span style="--0:#85E89D">port_value</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">10000</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">filter_chains</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">        </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">filters</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">            </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">envoy.filters.network.http_connection_manager</span></div></div><div class="ec-line"><div class="code"><span class="indent">              </span><span style="--0:#85E89D">typed_config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                </span><span style="--0:#9ECBFF">"@type"</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span></div></div><div class="ec-line"><div class="code"><span class="indent">                </span><span style="--0:#85E89D">scheme_header_transformation</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                  </span><span style="--0:#85E89D">scheme_to_overwrite</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">https</span></div></div><div class="ec-line"><div class="code"><span class="indent">                </span><span style="--0:#85E89D">stat_prefix</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">ingress_http</span></div></div><div class="ec-line"><div class="code"><span class="indent">                </span><span style="--0:#85E89D">route_config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                  </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">local_route</span></div></div><div class="ec-line"><div class="code"><span class="indent">                  </span><span style="--0:#85E89D">virtual_hosts</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">                    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">local_service</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">domains</span><span style="--0:#E1E4E8">: [</span><span style="--0:#9ECBFF">"*"</span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">routes</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">                        </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">match</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#85E89D">prefix</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">"/"</span></div></div><div class="ec-line"><div class="code"><span class="indent">                          </span><span style="--0:#85E89D">route</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#85E89D">cluster</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">echo-server</span></div></div><div class="ec-line"><div class="code"><span class="indent">                </span><span style="--0:#85E89D">http_filters</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">                  </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">wasmdemo</span></div></div><div class="ec-line"><div class="code"><span class="indent">                    </span><span style="--0:#85E89D">typed_config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#9ECBFF">"@type"</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">type.googleapis.com/udpa.type.v1.TypedStruct</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">type_url</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">value</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                        </span><span style="--0:#85E89D">config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                          </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">wasmdemo</span></div></div><div class="ec-line"><div class="code"><span class="indent">                          </span><span style="--0:#85E89D">vm_config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#85E89D">runtime</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">envoy.wasm.runtime.v8</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#85E89D">code</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                              </span><span style="--0:#85E89D">local</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                                </span><span style="--0:#85E89D">filename</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">/etc/envoy/plugin.wasm</span></div></div><div class="ec-line"><div class="code"><span class="indent">                          </span><span style="--0:#85E89D">configuration</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#9ECBFF">"@type"</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">"type.googleapis.com/google.protobuf.StringValue"</span></div></div><div class="ec-line"><div class="code"><span class="indent">                            </span><span style="--0:#85E89D">value</span><span style="--0:#E1E4E8">: </span><span style="--0:#F97583">|-</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                              </span></span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"keys": [</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">"authorization"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">],</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"in_header": true,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"limits": [</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"name": "credential1",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"consumer": "Bearer credential1",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"rate": 2,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"capacity": 4</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">},</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"name": "all",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"consumer": "*",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"rate": 1,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                    </span></span><span style="--0:#9ECBFF">"capacity": 2</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">],</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"rejected_code": 429,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"rejected_msg": "Too Many Requests",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"show_limit_quota_header": true,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">"redis":{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">"service_name": "redis.static",</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">"service_port": 6379,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                  </span></span><span style="--0:#9ECBFF">"timeout": 2000</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                                </span></span><span style="--0:#9ECBFF">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#9ECBFF">                              </span></span><span style="--0:#9ECBFF">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">                  </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">envoy.filters.http.router</span></div></div><div class="ec-line"><div class="code"><span class="indent">                    </span><span style="--0:#85E89D">typed_config</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#9ECBFF">"@type"</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">type.googleapis.com/envoy.extensions.filters.http.router.v3.Router</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#85E89D">clusters</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">echo-server</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">connect_timeout</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">30s</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">type</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">LOGICAL_DNS</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6"># Comment out the following line to test on v6 networks</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">dns_lookup_family</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">V4_ONLY</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">lb_policy</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">ROUND_ROBIN</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">load_assignment</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">cluster_name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">echo-server</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">endpoints</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">          </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">lb_endpoints</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">              </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">endpoint</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                  </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                    </span><span style="--0:#85E89D">socket_address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">echo-server</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">port_value</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">3000</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">outbound|6379||redis.static</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">connect_timeout</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">30s</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">type</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">STATIC</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#85E89D">load_assignment</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">cluster_name</span><span style="--0:#E1E4E8">: </span><span style="--0:#9ECBFF">outbound|6379||redis.static</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#85E89D">endpoints</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">          </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">lb_endpoints</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">              </span></span><span style="--0:#E1E4E8">- </span><span style="--0:#85E89D">endpoint</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                  </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                    </span><span style="--0:#85E89D">socket_address</span><span style="--0:#E1E4E8">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">address</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">172.20.0.100</span></div></div><div class="ec-line"><div class="code"><span class="indent">                      </span><span style="--0:#85E89D">port_value</span><span style="--0:#E1E4E8">: </span><span style="--0:#79B8FF">6379</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="admin:\x7F  address:\x7F    socket_address:\x7F      protocol: TCP\x7F      address: 0.0.0.0\x7F      port_value: 9901\x7Fstatic_resources:\x7F  listeners:\x7F    - name: listener_0\x7F      address:\x7F        socket_address:\x7F          protocol: TCP\x7F          address: 0.0.0.0\x7F          port_value: 10000\x7F      filter_chains:\x7F        - filters:\x7F            - name: envoy.filters.network.http_connection_manager\x7F              typed_config:\x7F                &#x22;@type&#x22;: type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\x7F                scheme_header_transformation:\x7F                  scheme_to_overwrite: https\x7F                stat_prefix: ingress_http\x7F                route_config:\x7F                  name: local_route\x7F                  virtual_hosts:\x7F                    - name: local_service\x7F                      domains: [&#x22;*&#x22;]\x7F                      routes:\x7F                        - match:\x7F                            prefix: &#x22;/&#x22;\x7F                          route:\x7F                            cluster: echo-server\x7F                http_filters:\x7F                  - name: wasmdemo\x7F                    typed_config:\x7F                      &#x22;@type&#x22;: type.googleapis.com/udpa.type.v1.TypedStruct\x7F                      type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm\x7F                      value:\x7F                        config:\x7F                          name: wasmdemo\x7F                          vm_config:\x7F                            runtime: envoy.wasm.runtime.v8\x7F                            code:\x7F                              local:\x7F                                filename: /etc/envoy/plugin.wasm\x7F                          configuration:\x7F                            &#x22;@type&#x22;: &#x22;type.googleapis.com/google.protobuf.StringValue&#x22;\x7F                            value: |-\x7F                              {\x7F                                &#x22;keys&#x22;: [\x7F                                  &#x22;authorization&#x22;\x7F                                ],\x7F                                &#x22;in_header&#x22;: true,\x7F                                &#x22;limits&#x22;: [\x7F                                  {\x7F                                    &#x22;name&#x22;: &#x22;credential1&#x22;,\x7F                                    &#x22;consumer&#x22;: &#x22;Bearer credential1&#x22;,\x7F                                    &#x22;rate&#x22;: 2,\x7F                                    &#x22;capacity&#x22;: 4\x7F                                  },\x7F                                  {\x7F                                    &#x22;name&#x22;: &#x22;all&#x22;,\x7F                                    &#x22;consumer&#x22;: &#x22;*&#x22;,\x7F                                    &#x22;rate&#x22;: 1,\x7F                                    &#x22;capacity&#x22;: 2\x7F                                  }\x7F                                ],\x7F                                &#x22;rejected_code&#x22;: 429,\x7F                                &#x22;rejected_msg&#x22;: &#x22;Too Many Requests&#x22;,\x7F                                &#x22;show_limit_quota_header&#x22;: true,\x7F                                &#x22;redis&#x22;:{\x7F                                  &#x22;service_name&#x22;: &#x22;redis.static&#x22;,\x7F                                  &#x22;service_port&#x22;: 6379,\x7F                                  &#x22;timeout&#x22;: 2000\x7F                                }\x7F                              }\x7F                  - name: envoy.filters.http.router\x7F                    typed_config:\x7F                      &#x22;@type&#x22;: type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\x7F  clusters:\x7F    - name: echo-server\x7F      connect_timeout: 30s\x7F      type: LOGICAL_DNS\x7F      # Comment out the following line to test on v6 networks\x7F      dns_lookup_family: V4_ONLY\x7F      lb_policy: ROUND_ROBIN\x7F      load_assignment:\x7F        cluster_name: echo-server\x7F        endpoints:\x7F          - lb_endpoints:\x7F              - endpoint:\x7F                  address:\x7F                    socket_address:\x7F                      address: echo-server\x7F                      port_value: 3000\x7F    - name: outbound|6379||redis.static\x7F      connect_timeout: 30s\x7F      type: STATIC\x7F      load_assignment:\x7F        cluster_name: outbound|6379||redis.static\x7F        endpoints:\x7F          - lb_endpoints:\x7F              - endpoint:\x7F                  address:\x7F                    socket_address:\x7F                      address: 172.20.0.100\x7F                      port_value: 6379"><div></div></button></div></figure></div>
<p>envoy.yaml \u914D\u7F6E\u6587\u4EF6\u589E\u52A0\u4E86 <code dir="auto">outbound|6379||redis.static</code> \u96C6\u7FA4\uFF0C\u7528\u4E8E\u8FDE\u63A5 Redis \u670D\u52A1\u3002Redis \u8FDE\u63A5\u76EE\u524D\u4E0D\u652F\u6301 DNS \u57DF\u540D\u914D\u7F6E\uFF0C\u53EA\u652F\u6301 IP \u5730\u5740\u914D\u7F6E\u3002
\u56E0\u6B64\u8FD9\u91CC Redis \u7684 IP \u5730\u5740\u662F <code dir="auto">172.20.0.100</code>\u3002</p>
<h2 id="3-\u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u5F00\u53D1">3 \u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u5F00\u53D1</h2>
<h3 id="31-\u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790">3.1 \u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790</h3>
<p>\u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790\u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// LimitConfig \u5B9A\u4E49\u4E86\u9650\u6D41\u63D2\u4EF6\u7684\u914D\u7F6E\u7ED3\u6784\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitConfig</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">struct</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Keys                 []</span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8">            </span><span style="--0:#9ECBFF">\`yaml:"keys"\`</span><span style="--0:#E1E4E8">                    </span><span style="--0:#99A0A6">// \u5B9A\u4E49\u4E86\u7528\u4E8E\u63D0\u53D6\u9650\u6D41\u4FE1\u606F\u7684HTTP\u8BF7\u6C42\u5934\u5B57\u6BB5\u540D\u79F0\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">InQuery              </span><span style="--0:#F97583">bool</span><span style="--0:#E1E4E8">                </span><span style="--0:#9ECBFF">\`yaml:"in_query,omitempty"\`</span><span style="--0:#E1E4E8">      </span><span style="--0:#99A0A6">// \u6807\u8BC6\u662F\u5426\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">InHeader             </span><span style="--0:#F97583">bool</span><span style="--0:#E1E4E8">                </span><span style="--0:#9ECBFF">\`yaml:"in_header,omitempty"\`</span><span style="--0:#E1E4E8">     </span><span style="--0:#99A0A6">// \u6807\u8BC6\u662F\u5426\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Limits               []</span><span style="--0:#B392F0">LimitItem</span><span style="--0:#E1E4E8">         </span><span style="--0:#9ECBFF">\`yaml:"limits"\`</span><span style="--0:#E1E4E8">                  </span><span style="--0:#99A0A6">// \u5305\u542B\u5177\u4F53\u7684\u9650\u6D41\u89C4\u5219\u9879\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">RejectedCode         </span><span style="--0:#F97583">uint32</span><span style="--0:#E1E4E8">              </span><span style="--0:#9ECBFF">\`yaml:"rejected_code"\`</span><span style="--0:#E1E4E8">           </span><span style="--0:#99A0A6">// \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684 HTTP \u72B6\u6001\u7801\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">RejectedMsg          </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8">              </span><span style="--0:#9ECBFF">\`yaml:"rejected_msg"\`</span><span style="--0:#E1E4E8">            </span><span style="--0:#99A0A6">// \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684\u54CD\u5E94\u4F53\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">ShowLimitQuotaHeader </span><span style="--0:#F97583">bool</span><span style="--0:#E1E4E8">                </span><span style="--0:#9ECBFF">\`yaml:"show_limit_quota_header"\`</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u6807\u8BC6\u662F\u5426\u5728\u54CD\u5E94\u5934\u4E2D\u663E\u793A\u9650\u6D41\u914D\u989D\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">RedisInfo            </span><span style="--0:#B392F0">RedisInfo</span><span style="--0:#E1E4E8">           </span><span style="--0:#9ECBFF">\`yaml:"redis"\`</span><span style="--0:#E1E4E8">                   </span><span style="--0:#99A0A6">// \u5B9A\u4E49\u4E86\u4E0E Redis \u4EA4\u4E92\u6240\u9700\u7684\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">RedisClient          </span><span style="--0:#B392F0">wrapper</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">RedisClient</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// Redis\u5BA2\u6237\u7AEF\uFF0C\u7528\u4E8E\u6267\u884CRedis\u547D\u4EE4\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// LimitItem \u5B9A\u4E49\u4E86\u5177\u4F53\u7684\u9650\u6D41\u9879\uFF0C\u5305\u62EC\u9650\u6D41\u540D\u79F0\u3001\u6D88\u8D39\u8005\u6807\u8BC6\u3001\u8BF7\u6C42\u901F\u7387\u548C\u5BB9\u91CF\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitItem</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">struct</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Name     </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\`yaml:"name"\`</span><span style="--0:#E1E4E8">     </span><span style="--0:#99A0A6">// \u9650\u6D41\u9879\u7684\u540D\u79F0\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Consumer </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\`yaml:"consumer"\`</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u9650\u6D41\u9879\u5173\u8054\u7684\u6D88\u8D39\u8005\u6807\u8BC6\uFF0C\u7528\u4E8E\u5339\u914D\u7279\u5B9A\u7684\u8BF7\u6C42\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Rate     </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">    </span><span style="--0:#9ECBFF">\`yaml:"rate"\`</span><span style="--0:#E1E4E8">     </span><span style="--0:#99A0A6">// \u6BCF\u79D2\u653E\u5165\u6876\u5185\u7684\u4EE4\u724C\u6570\u91CF\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Capacity </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">    </span><span style="--0:#9ECBFF">\`yaml:"capacity"\`</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u9650\u6D41\u6876\u7684\u6700\u5927\u5BB9\u91CF\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// RedisInfo \u5B9A\u4E49\u4E86\u8FDE\u63A5Redis\u6240\u9700\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">RedisInfo</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">struct</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">ServiceName </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\`required:"true" yaml:"service_name" json:"service_name"\`</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// Redis \u670D\u52A1\u540D\u6216\u5730\u5740\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">ServicePort </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">    </span><span style="--0:#9ECBFF">\`yaml:"service_port" json:"service_port"\`</span><span style="--0:#E1E4E8">                 </span><span style="--0:#99A0A6">// Redis \u670D\u52A1\u7AEF\u53E3\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Username    </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\`yaml:"username" json:"username"\`</span><span style="--0:#E1E4E8">                         </span><span style="--0:#99A0A6">// \u8FDE\u63A5 Redis \u7684\u7528\u6237\u540D\uFF0C\u5982\u679C\u9700\u8981\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Password    </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">\`yaml:"password" json:"password"\`</span><span style="--0:#E1E4E8">                         </span><span style="--0:#99A0A6">// \u8FDE\u63A5 Redis \u7684\u5BC6\u7801\uFF0C\u5982\u679C\u9700\u8981\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Timeout     </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">    </span><span style="--0:#9ECBFF">\`yaml:"timeout" json:"timeout"\`</span><span style="--0:#E1E4E8">                           </span><span style="--0:#99A0A6">// \u8FDE\u63A5 Redis \u7684\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// LimitContext \u5B9A\u4E49\u4E86\u9650\u6D41\u4E0A\u4E0B\u6587\uFF0C\u5B58\u50A8\u4E86\u9650\u6D41\u76F8\u5173\u7684\u4FE1\u606F\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">type</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitContext</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">struct</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Allowed   </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u8868\u793A\u5F53\u524D\u8BF7\u6C42\u662F\u5426\u88AB\u5141\u8BB8\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Count     </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u9650\u6D41\u6876\u5F53\u524D\u7684\u8BA1\u6570\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Remaining </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u9650\u6D41\u6876\u5269\u4F59\u7684\u5BB9\u91CF\u3002</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">Reset     </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8"> </span><span style="--0:#99A0A6">// \u9650\u6D41\u6876\u91CD\u7F6E\u65F6\u95F4\uFF08\u79D2\uFF09\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// \u89E3\u6790\u914D\u7F6E\uFF0C\u8FD9\u91CC\u5FFD\u7565\u63D2\u4EF6\u914D\u7F6E\u89E3\u6790\u7684\u7EC6\u8282\u3002\u4E3B\u8981\u663E\u793A Redis \u90E8\u5206\u89E3\u6790\u914D\u7F6E\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">func</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">parseConfig</span><span style="--0:#E1E4E8">(</span><span style="--0:#FFAB70">json</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">gjson</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">Result</span><span style="--0:#E1E4E8">, </span><span style="--0:#FFAB70">config</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">*</span><span style="--0:#B392F0">LimitConfig</span><span style="--0:#E1E4E8">, </span><span style="--0:#FFAB70">log</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">wrapper</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">Log</span><span style="--0:#E1E4E8">) </span><span style="--0:#F97583">error</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// keys</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">names </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"keys"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// in_query and in_header</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">in_query </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"in_query"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">in_header </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"in_header"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">...</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// parse limit</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">limits </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"limits"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">...</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.ShowLimitQuotaHeader </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"show_limit_quota_header"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">Bool</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// parse redis</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">redisConfig </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> json.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"redis"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">!</span><span style="--0:#E1E4E8">redisConfig.</span><span style="--0:#B392F0">Exists</span><span style="--0:#E1E4E8">() {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> errors.</span><span style="--0:#B392F0">New</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"missing redis in config"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">serviceName </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> redisConfig.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"service_name"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">String</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> serviceName </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">""</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> errors.</span><span style="--0:#B392F0">New</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"redis service name must not be empty"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">servicePort </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">(redisConfig.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"service_port"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">Int</span><span style="--0:#E1E4E8">())</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> servicePort </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> strings.</span><span style="--0:#B392F0">HasSuffix</span><span style="--0:#E1E4E8">(serviceName, </span><span style="--0:#9ECBFF">".static"</span><span style="--0:#E1E4E8">) {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// use default logic port which is 80 for static service</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">servicePort </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">80</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">} </span><span style="--0:#F97583">else</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">servicePort </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">6379</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">username </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> redisConfig.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"username"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">String</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">password </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> redisConfig.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"password"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">String</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">timeout </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">int</span><span style="--0:#E1E4E8">(redisConfig.</span><span style="--0:#B392F0">Get</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"timeout"</span><span style="--0:#E1E4E8">).</span><span style="--0:#B392F0">Int</span><span style="--0:#E1E4E8">())</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> timeout </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">timeout </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1000</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisInfo.ServiceName </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> serviceName</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisInfo.ServicePort </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> servicePort</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisInfo.Username </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> username</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisInfo.Password </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> password</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisInfo.Timeout </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> timeout</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">config.RedisClient </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> wrapper.</span><span style="--0:#B392F0">NewRedisClusterClient</span><span style="--0:#E1E4E8">(</span><span style="--0:#B392F0">wrapper</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">FQDNCluster</span><span style="--0:#E1E4E8">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">FQDN: serviceName,</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">Port: </span><span style="--0:#F97583">int64</span><span style="--0:#E1E4E8">(servicePort),</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">})</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"parseConfig()+</span><span style="--0:#79B8FF">%+v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, config)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> config.RedisClient.</span><span style="--0:#B392F0">Init</span><span style="--0:#E1E4E8">(username, password, </span><span style="--0:#F97583">int64</span><span style="--0:#E1E4E8">(timeout))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="// LimitConfig \u5B9A\u4E49\u4E86\u9650\u6D41\u63D2\u4EF6\u7684\u914D\u7F6E\u7ED3\u6784\u3002\x7Ftype LimitConfig struct {\x7F  Keys                 []string            &#x60;yaml:&#x22;keys&#x22;&#x60;                    // \u5B9A\u4E49\u4E86\u7528\u4E8E\u63D0\u53D6\u9650\u6D41\u4FE1\u606F\u7684HTTP\u8BF7\u6C42\u5934\u5B57\u6BB5\u540D\u79F0\u3002\x7F  InQuery              bool                &#x60;yaml:&#x22;in_query,omitempty&#x22;&#x60;      // \u6807\u8BC6\u662F\u5426\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002\x7F  InHeader             bool                &#x60;yaml:&#x22;in_header,omitempty&#x22;&#x60;     // \u6807\u8BC6\u662F\u5426\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002\x7F  Limits               []LimitItem         &#x60;yaml:&#x22;limits&#x22;&#x60;                  // \u5305\u542B\u5177\u4F53\u7684\u9650\u6D41\u89C4\u5219\u9879\u3002\x7F  RejectedCode         uint32              &#x60;yaml:&#x22;rejected_code&#x22;&#x60;           // \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684 HTTP \u72B6\u6001\u7801\u3002\x7F  RejectedMsg          string              &#x60;yaml:&#x22;rejected_msg&#x22;&#x60;            // \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684\u54CD\u5E94\u4F53\u3002\x7F  ShowLimitQuotaHeader bool                &#x60;yaml:&#x22;show_limit_quota_header&#x22;&#x60; // \u6807\u8BC6\u662F\u5426\u5728\u54CD\u5E94\u5934\u4E2D\u663E\u793A\u9650\u6D41\u914D\u989D\u4FE1\u606F\u3002\x7F  RedisInfo            RedisInfo           &#x60;yaml:&#x22;redis&#x22;&#x60;                   // \u5B9A\u4E49\u4E86\u4E0E Redis \u4EA4\u4E92\u6240\u9700\u7684\u4FE1\u606F\u3002\x7F  RedisClient          wrapper.RedisClient // Redis\u5BA2\u6237\u7AEF\uFF0C\u7528\u4E8E\u6267\u884CRedis\u547D\u4EE4\u3002\x7F}\x7F\x7F// LimitItem \u5B9A\u4E49\u4E86\u5177\u4F53\u7684\u9650\u6D41\u9879\uFF0C\u5305\u62EC\u9650\u6D41\u540D\u79F0\u3001\u6D88\u8D39\u8005\u6807\u8BC6\u3001\u8BF7\u6C42\u901F\u7387\u548C\u5BB9\u91CF\u3002\x7Ftype LimitItem struct {\x7F  Name     string &#x60;yaml:&#x22;name&#x22;&#x60;     // \u9650\u6D41\u9879\u7684\u540D\u79F0\u3002\x7F  Consumer string &#x60;yaml:&#x22;consumer&#x22;&#x60; // \u9650\u6D41\u9879\u5173\u8054\u7684\u6D88\u8D39\u8005\u6807\u8BC6\uFF0C\u7528\u4E8E\u5339\u914D\u7279\u5B9A\u7684\u8BF7\u6C42\u3002\x7F  Rate     int    &#x60;yaml:&#x22;rate&#x22;&#x60;     // \u6BCF\u79D2\u653E\u5165\u6876\u5185\u7684\u4EE4\u724C\u6570\u91CF\u3002\x7F  Capacity int    &#x60;yaml:&#x22;capacity&#x22;&#x60; // \u9650\u6D41\u6876\u7684\u6700\u5927\u5BB9\u91CF\u3002\x7F}\x7F\x7F// RedisInfo \u5B9A\u4E49\u4E86\u8FDE\u63A5Redis\u6240\u9700\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002\x7Ftype RedisInfo struct {\x7F  ServiceName string &#x60;required:&#x22;true&#x22; yaml:&#x22;service_name&#x22; json:&#x22;service_name&#x22;&#x60; // Redis \u670D\u52A1\u540D\u6216\u5730\u5740\u3002\x7F  ServicePort int    &#x60;yaml:&#x22;service_port&#x22; json:&#x22;service_port&#x22;&#x60;                 // Redis \u670D\u52A1\u7AEF\u53E3\u3002\x7F  Username    string &#x60;yaml:&#x22;username&#x22; json:&#x22;username&#x22;&#x60;                         // \u8FDE\u63A5 Redis \u7684\u7528\u6237\u540D\uFF0C\u5982\u679C\u9700\u8981\u3002\x7F  Password    string &#x60;yaml:&#x22;password&#x22; json:&#x22;password&#x22;&#x60;                         // \u8FDE\u63A5 Redis \u7684\u5BC6\u7801\uFF0C\u5982\u679C\u9700\u8981\u3002\x7F  Timeout     int    &#x60;yaml:&#x22;timeout&#x22; json:&#x22;timeout&#x22;&#x60;                           // \u8FDE\u63A5 Redis \u7684\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\u3002\x7F}\x7F\x7F// LimitContext \u5B9A\u4E49\u4E86\u9650\u6D41\u4E0A\u4E0B\u6587\uFF0C\u5B58\u50A8\u4E86\u9650\u6D41\u76F8\u5173\u7684\u4FE1\u606F\u3002\x7Ftype LimitContext struct {\x7F  Allowed   int // \u8868\u793A\u5F53\u524D\u8BF7\u6C42\u662F\u5426\u88AB\u5141\u8BB8\u3002\x7F  Count     int // \u9650\u6D41\u6876\u5F53\u524D\u7684\u8BA1\u6570\u3002\x7F  Remaining int // \u9650\u6D41\u6876\u5269\u4F59\u7684\u5BB9\u91CF\u3002\x7F  Reset     int // \u9650\u6D41\u6876\u91CD\u7F6E\u65F6\u95F4\uFF08\u79D2\uFF09\u3002\x7F}\x7F\x7F// \u89E3\u6790\u914D\u7F6E\uFF0C\u8FD9\u91CC\u5FFD\u7565\u63D2\u4EF6\u914D\u7F6E\u89E3\u6790\u7684\u7EC6\u8282\u3002\u4E3B\u8981\u663E\u793A Redis \u90E8\u5206\u89E3\u6790\u914D\u7F6E\u3002\x7Ffunc parseConfig(json gjson.Result, config *LimitConfig, log wrapper.Log) error {\x7F  // keys\x7F  names := json.Get(&#x22;keys&#x22;)\x7F  ...\x7F  // in_query and in_header\x7F  in_query := json.Get(&#x22;in_query&#x22;)\x7F  in_header := json.Get(&#x22;in_header&#x22;)\x7F  ...\x7F  // parse limit\x7F  limits := json.Get(&#x22;limits&#x22;)\x7F  ...\x7F  config.ShowLimitQuotaHeader = json.Get(&#x22;show_limit_quota_header&#x22;).Bool()\x7F\x7F  // parse redis\x7F  redisConfig := json.Get(&#x22;redis&#x22;)\x7F  if !redisConfig.Exists() {\x7F    return errors.New(&#x22;missing redis in config&#x22;)\x7F  }\x7F  serviceName := redisConfig.Get(&#x22;service_name&#x22;).String()\x7F  if serviceName == &#x22;&#x22; {\x7F    return errors.New(&#x22;redis service name must not be empty&#x22;)\x7F  }\x7F  servicePort := int(redisConfig.Get(&#x22;service_port&#x22;).Int())\x7F  if servicePort == 0 {\x7F    if strings.HasSuffix(serviceName, &#x22;.static&#x22;) {\x7F      // use default logic port which is 80 for static service\x7F      servicePort = 80\x7F    } else {\x7F      servicePort = 6379\x7F    }\x7F  }\x7F  username := redisConfig.Get(&#x22;username&#x22;).String()\x7F  password := redisConfig.Get(&#x22;password&#x22;).String()\x7F  timeout := int(redisConfig.Get(&#x22;timeout&#x22;).Int())\x7F  if timeout == 0 {\x7F    timeout = 1000\x7F  }\x7F  config.RedisInfo.ServiceName = serviceName\x7F  config.RedisInfo.ServicePort = servicePort\x7F  config.RedisInfo.Username = username\x7F  config.RedisInfo.Password = password\x7F  config.RedisInfo.Timeout = timeout\x7F  config.RedisClient = wrapper.NewRedisClusterClient(wrapper.FQDNCluster{\x7F    FQDN: serviceName,\x7F    Port: int64(servicePort),\x7F  })\x7F  log.Debugf(&#x22;parseConfig()+%+v&#x22;, config)\x7F  return config.RedisClient.Init(username, password, int64(timeout))\x7F}"><div></div></button></div></figure></div>
<p>\u8FD9\u91CC\u5FFD\u7565\u63D2\u4EF6\u914D\u7F6E\u89E3\u6790\u7684\u7EC6\u8282\uFF0C\u4E3B\u8981\u663E\u793A Redis \u89E3\u6790\u914D\u7F6E\u3002\u53EF\u4EE5\u770B\u51FA\u8FD9\u91CC\u9700\u8981\u8C03\u7528 <code dir="auto">wrapper.NewRedisClusterClient</code> \u65B9\u6CD5\u521D\u59CB\u5316 RedisClient \u548C RedisClient <code dir="auto">Init</code> \u65B9\u6CD5\u521D\u59CB\u5316 Redis \u8FDE\u63A5\u3002</p>
<h3 id="32-\u63D2\u4EF6\u9650\u6D41-lua-\u811A\u672C">3.2 \u63D2\u4EF6\u9650\u6D41 Lua \u811A\u672C</h3>
<p>\u4EE4\u724C\u6876\u9650\u6D41\u7684 Lua \u811A\u672C\u5982\u4E0B\uFF1A</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> tokens_key </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> KEYS[</span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> timestamp_key </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> KEYS[</span><span style="--0:#79B8FF">2</span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "tokens_key " .. tokens_key)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> rate </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(ARGV[</span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8">])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> capacity </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(ARGV[</span><span style="--0:#79B8FF">2</span><span style="--0:#E1E4E8">])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> now </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(ARGV[</span><span style="--0:#79B8FF">3</span><span style="--0:#E1E4E8">])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> requested </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(ARGV[</span><span style="--0:#79B8FF">4</span><span style="--0:#E1E4E8">])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> unit </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(ARGV[</span><span style="--0:#79B8FF">5</span><span style="--0:#E1E4E8">])</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> fill_time </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> capacity</span><span style="--0:#F97583">/</span><span style="--0:#E1E4E8">rate</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> ttl </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">math.floor</span><span style="--0:#E1E4E8">(fill_time</span><span style="--0:#F97583">*</span><span style="--0:#79B8FF">2</span><span style="--0:#F97583">*</span><span style="--0:#E1E4E8">unit)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "rate " .. ARGV[1])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "capacity " .. ARGV[2])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "now " .. ARGV[3])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "requested " .. ARGV[4])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "filltime " .. fill_time)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "ttl " .. ttl)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> last_tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(redis.</span><span style="--0:#79B8FF">call</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"get"</span><span style="--0:#E1E4E8">, tokens_key))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> last_tokens </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">nil</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">then</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">last_tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> capacity</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">end</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "last_tokens " .. last_tokens)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> last_refreshed </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">tonumber</span><span style="--0:#E1E4E8">(redis.</span><span style="--0:#79B8FF">call</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"get"</span><span style="--0:#E1E4E8">, timestamp_key))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> last_refreshed </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">nil</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">then</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">last_refreshed </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">end</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "last_refreshed " .. last_refreshed)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> delta </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">math.max</span><span style="--0:#E1E4E8">(</span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8">, (now</span><span style="--0:#F97583">-</span><span style="--0:#E1E4E8">last_refreshed)</span><span style="--0:#F97583">/</span><span style="--0:#E1E4E8">unit)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> filled_tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">math.min</span><span style="--0:#E1E4E8">(capacity, last_tokens </span><span style="--0:#F97583">+</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">math.floor</span><span style="--0:#E1E4E8">(delta</span><span style="--0:#F97583">*</span><span style="--0:#E1E4E8">rate))</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> allowed </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> filled_tokens </span><span style="--0:#F97583">>=</span><span style="--0:#E1E4E8"> requested</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> new_tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> filled_tokens</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">local</span><span style="--0:#E1E4E8"> allowed_num </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> allowed </span><span style="--0:#F97583">then</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">new_tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> filled_tokens </span><span style="--0:#F97583">-</span><span style="--0:#E1E4E8"> requested</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">allowed_num </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">end</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "delta " .. delta)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "filled_tokens " .. filled_tokens)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "allowed_num " .. allowed_num)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">--redis.log(redis.LOG_WARNING, "new_tokens " .. new_tokens)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> ttl </span><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">then</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">redis.</span><span style="--0:#79B8FF">call</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"setex"</span><span style="--0:#E1E4E8">, tokens_key, ttl, new_tokens)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">redis.</span><span style="--0:#79B8FF">call</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"setex"</span><span style="--0:#E1E4E8">, timestamp_key, ttl, now)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">end</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> { allowed_num, new_tokens, capacity, ttl}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="local tokens_key = KEYS[1]\x7Flocal timestamp_key = KEYS[2]\x7F--redis.log(redis.LOG_WARNING, &#x22;tokens_key &#x22; .. tokens_key)\x7F\x7Flocal rate = tonumber(ARGV[1])\x7Flocal capacity = tonumber(ARGV[2])\x7Flocal now = tonumber(ARGV[3])\x7Flocal requested = tonumber(ARGV[4])\x7Flocal unit = tonumber(ARGV[5])\x7F\x7Flocal fill_time = capacity/rate\x7Flocal ttl = math.floor(fill_time*2*unit)\x7F\x7F--redis.log(redis.LOG_WARNING, &#x22;rate &#x22; .. ARGV[1])\x7F--redis.log(redis.LOG_WARNING, &#x22;capacity &#x22; .. ARGV[2])\x7F--redis.log(redis.LOG_WARNING, &#x22;now &#x22; .. ARGV[3])\x7F--redis.log(redis.LOG_WARNING, &#x22;requested &#x22; .. ARGV[4])\x7F--redis.log(redis.LOG_WARNING, &#x22;filltime &#x22; .. fill_time)\x7F--redis.log(redis.LOG_WARNING, &#x22;ttl &#x22; .. ttl)\x7F\x7Flocal last_tokens = tonumber(redis.call(&#x22;get&#x22;, tokens_key))\x7Fif last_tokens == nil then\x7F  last_tokens = capacity\x7Fend\x7F--redis.log(redis.LOG_WARNING, &#x22;last_tokens &#x22; .. last_tokens)\x7F\x7Flocal last_refreshed = tonumber(redis.call(&#x22;get&#x22;, timestamp_key))\x7Fif last_refreshed == nil then\x7F  last_refreshed = 0\x7Fend\x7F--redis.log(redis.LOG_WARNING, &#x22;last_refreshed &#x22; .. last_refreshed)\x7F\x7Flocal delta = math.max(0, (now-last_refreshed)/unit)\x7Flocal filled_tokens = math.min(capacity, last_tokens + math.floor(delta*rate))\x7Flocal allowed = filled_tokens >= requested\x7Flocal new_tokens = filled_tokens\x7Flocal allowed_num = 0\x7Fif allowed then\x7F  new_tokens = filled_tokens - requested\x7F  allowed_num = 1\x7Fend\x7F\x7F--redis.log(redis.LOG_WARNING, &#x22;delta &#x22; .. delta)\x7F--redis.log(redis.LOG_WARNING, &#x22;filled_tokens &#x22; .. filled_tokens)\x7F--redis.log(redis.LOG_WARNING, &#x22;allowed_num &#x22; .. allowed_num)\x7F--redis.log(redis.LOG_WARNING, &#x22;new_tokens &#x22; .. new_tokens)\x7F\x7Fif ttl > 0 then\x7F  redis.call(&#x22;setex&#x22;, tokens_key, ttl, new_tokens)\x7F  redis.call(&#x22;setex&#x22;, timestamp_key, ttl, now)\x7Fend\x7F\x7Freturn { allowed_num, new_tokens, capacity, ttl}"><div></div></button></div></figure></div>
<p>Lua \u811A\u672C\u662F\u5728 Redis \u4E2D\u6267\u884C\u7684\uFF0C\u7528\u4E8E\u5B9E\u73B0\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u3002\u4E0B\u9762\u662F\u5BF9\u811A\u672C\u53C2\u6570\u548C\u539F\u7406\u7684\u5206\u6790\uFF1A</p>
<ol>
<li>\u53C2\u6570\u89E3\u91CA\uFF1A</li>
</ol>
<ul>
<li>KEYS[1] \u548C KEYS[2]\uFF1A\u8FD9\u4E24\u4E2A\u53C2\u6570\u662F\u901A\u8FC7 Redis \u8C03\u7528\u4F20\u9012\u7684\u952E\uFF08keys\uFF09\uFF0C\u901A\u5E38\u7528\u4E8E\u5B58\u50A8\u4EE4\u724C\u6876\u7684\u5F53\u524D\u4EE4\u724C\u6570\uFF08tokens_key\uFF09\u548C\u6700\u540E\u5237\u65B0\u65F6\u95F4\uFF08timestamp_key\uFF09\u3002</li>
<li>ARGV[1] \u5230 ARGV[5]\uFF1A\u8FD9\u4E9B\u53C2\u6570\u662F\u901A\u8FC7 Redis \u8C03\u7528\u4F20\u9012\u7684\u53C2\u6570\uFF0C\u7528\u4E8E\u914D\u7F6E\u9650\u6D41\u7B56\u7565\u3002
<ul>
<li>rate\uFF1A\u5355\u4F4D\u65F6\u95F4\u5185\u751F\u6210\u7684\u4EE4\u724C\u6570\u91CF\u3002</li>
<li>capacity\uFF1A\u4EE4\u724C\u6876\u7684\u5BB9\u91CF\uFF0C\u5373\u6700\u591A\u53EF\u4EE5\u5BB9\u7EB3\u7684\u4EE4\u724C\u6570\u3002</li>
<li>now\uFF1A\u5F53\u524D\u65F6\u95F4\uFF0C\u901A\u5E38\u4EE5\u65F6\u95F4\u6233\u8868\u793A\uFF0C\u4EE5\u79D2\u5355\u4F4D\u3002</li>
<li>requested\uFF1A\u5F53\u524D\u8BF7\u6C42\u9700\u8981\u7684\u4EE4\u724C\u6570\u3002</li>
<li>unit\uFF1A\u4EE4\u724C\u751F\u6210\u7684\u65F6\u95F4\u5355\u4F4D\uFF0C1 \u8868\u793A\u79D2\uFF0C60 \u8868\u793A\u5206\u949F\uFF0C3600 \u8868\u793A\u5C0F\u65F6\u3002</li>
</ul>
</li>
</ul>
<ol start="2">
<li>\u811A\u672C\u539F\u7406\uFF1A</li>
</ol>
<ul>
<li>\u521D\u59CB\u5316\u53D8\u91CF\uFF1A\u6839\u636E\u4F20\u5165\u7684\u53C2\u6570\u521D\u59CB\u5316\u4EE4\u724C\u6876\u7684\u586B\u5145\u65F6\u95F4\u548C TTL\uFF08\u751F\u5B58\u65F6\u95F4\uFF09\u3002</li>
<li>\u83B7\u53D6\u5F53\u524D\u72B6\u6001\uFF1A\u4ECE Redis \u4E2D\u83B7\u53D6\u5F53\u524D\u7684\u4EE4\u724C\u6570\uFF08last_tokens\uFF09\u548C\u6700\u540E\u5237\u65B0\u65F6\u95F4\uFF08last_refreshed\uFF09\u3002\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u521D\u59CB\u5316\u4E3A\u4EE4\u724C\u6876\u7684\u5BB9\u91CF\u3002</li>
<li>\u8BA1\u7B97\u4EE4\u724C\u586B\u5145\uFF1A
<ul>
<li>delta\uFF1A\u81EA\u4E0A\u6B21\u5237\u65B0\u4EE5\u6765\u7ECF\u8FC7\u7684\u5355\u4F4D\u65F6\u95F4\u3002</li>
<li>filled_tokens\uFF1A\u6839\u636E delta \u548C rate \u8BA1\u7B97\u5E94\u8BE5\u586B\u5145\u7684\u4EE4\u724C\u6570\uFF0C\u4F46\u4E0D\u80FD\u8D85\u8FC7\u6876\u7684\u5BB9\u91CF\u3002</li>
</ul>
</li>
<li>\u5224\u65AD\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\uFF1A
<ul>
<li>allowed\uFF1A\u5982\u679C\u5F53\u524D\u4EE4\u724C\u6570\u52A0\u4E0A\u586B\u5145\u7684\u4EE4\u724C\u6570\u5927\u4E8E\u7B49\u4E8E\u8BF7\u6C42\u7684\u4EE4\u724C\u6570\uFF0C\u5219\u5141\u8BB8\u8BF7\u6C42\u3002</li>
</ul>
</li>
<li>\u66F4\u65B0\u4EE4\u724C\u6570\uFF1A
<ul>
<li>\u5982\u679C\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u4ECE\u5F53\u524D\u4EE4\u724C\u6570\u4E2D\u51CF\u53BB\u8BF7\u6C42\u7684\u4EE4\u724C\u6570\uFF0C\u66F4\u65B0 new_tokens\u3002</li>
</ul>
</li>
<li>\u8BBE\u7F6E\u65B0\u7684\u72B6\u6001\uFF1A
<ul>
<li>\u5982\u679C TTL \u5927\u4E8E 0\uFF0C\u5219\u66F4\u65B0 Redis \u4E2D\u7684\u4EE4\u724C\u6570\u548C\u65F6\u95F4\u6233\uFF0C\u8BBE\u7F6E\u65B0\u7684 TTL\u3002</li>
</ul>
</li>
<li>\u8FD4\u56DE\u7ED3\u679C\uFF1A
<ul>
<li>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u9650\u6D41\u7ED3\u679C\u7684\u6570\u7EC4\uFF0C\u5305\u62EC\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\u3001\u65B0\u7684\u4EE4\u724C\u6570\u3001\u6876\u5BB9\u91CF\u548C TTL\u3002</li>
</ul>
</li>
</ul>
<h3 id="33-\u63D2\u4EF6\u9650\u6D41\u5177\u4F53\u5B9E\u73B0">3.3 \u63D2\u4EF6\u9650\u6D41\u5177\u4F53\u5B9E\u73B0</h3>
<p>\u9650\u6D41\u4E3B\u8981\u5B9E\u73B0\u5728\u63D2\u4EF6 <code dir="auto">onHttpRequestHeaders</code> \u65B9\u6CD5\u4E2D\uFF0C\u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p>
<div class="expressive-code"><figure class="frame not-content"><figcaption class="header"></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// onHttpRequestHeaders \u51FD\u6570\u5728\u5904\u7406 HTTP \u8BF7\u6C42\u5934\u65F6\u88AB\u8C03\u7528\uFF0C\u7528\u4E8E\u6267\u884C\u9650\u6D41\u903B\u8F91\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">func</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">onHttpRequestHeaders</span><span style="--0:#E1E4E8">(</span><span style="--0:#FFAB70">ctx</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">wrapper</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">HttpContext</span><span style="--0:#E1E4E8">, </span><span style="--0:#FFAB70">config</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitConfig</span><span style="--0:#E1E4E8">, </span><span style="--0:#FFAB70">log</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">wrapper</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">Log</span><span style="--0:#E1E4E8">) </span><span style="--0:#B392F0">types</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">Action</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"onHttpRequestHeaders()"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u521D\u59CB\u5316 tokens \u5207\u7247\uFF0C\u7528\u4E8E\u5B58\u50A8\u4ECE\u8BF7\u6C42\u5934\u6216\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\u7684 tokens \u4FE1\u606F</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">var</span><span style="--0:#E1E4E8"> tokens []</span><span style="--0:#F97583">string</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> config.InHeader {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E\uFF08key\uFF09\uFF0C\u5C1D\u8BD5\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">for</span><span style="--0:#E1E4E8"> _, key </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">range</span><span style="--0:#E1E4E8"> config.Keys {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u4F7F\u7528 proxywasm \u5E93\u7684 GetHttpRequestHeader \u51FD\u6570\u83B7\u53D6\u8BF7\u6C42\u5934\u4E2D\u7684\u503C</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">value, err </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> proxywasm.</span><span style="--0:#B392F0">GetHttpRequestHeader</span><span style="--0:#E1E4E8">(key)</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u5982\u679C\u6CA1\u6709\u9519\u8BEF\u4E14\u503C\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> err </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">nil</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">&#x26;&#x26;</span><span style="--0:#E1E4E8"> value </span><span style="--0:#F97583">!=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">""</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">        </span></span><span style="--0:#E1E4E8">tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">append</span><span style="--0:#E1E4E8">(tokens, value)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">} </span><span style="--0:#F97583">else</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> config.InQuery {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u83B7\u53D6 ":path" \u8BF7\u6C42\u5934\u4EE5\u83B7\u53D6\u8BF7\u6C42 URL</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">requestUrl, _ </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> proxywasm.</span><span style="--0:#B392F0">GetHttpRequestHeader</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">":path"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u89E3\u6790 URL \u5E76\u83B7\u53D6\u67E5\u8BE2\u53C2\u6570</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">url, _ </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> url.</span><span style="--0:#B392F0">Parse</span><span style="--0:#E1E4E8">(requestUrl)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">queryValues </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> url.</span><span style="--0:#B392F0">Query</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">for</span><span style="--0:#E1E4E8"> _, key </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">range</span><span style="--0:#E1E4E8"> config.Keys {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">values, ok </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> queryValues[key]</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u5982\u679C\u67E5\u8BE2\u53C2\u6570\u5B58\u5728\u4E14\u6709\u503C\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> ok </span><span style="--0:#F97583">&#x26;&#x26;</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">len</span><span style="--0:#E1E4E8">(values) </span><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">        </span></span><span style="--0:#E1E4E8">tokens </span><span style="--0:#F97583">=</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">append</span><span style="--0:#E1E4E8">(tokens, values</span><span style="--0:#F97583">...</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5982\u679C\u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u4E86\u591A\u4E8E\u4E00\u4E2A\u7684 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">len</span><span style="--0:#E1E4E8">(tokens) </span><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">deniedMultiKeyAuthData</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">} </span><span style="--0:#F97583">else</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">len</span><span style="--0:#E1E4E8">(tokens) </span><span style="--0:#F97583">&#x3C;=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u5982\u679C\u6CA1\u6709\u63D0\u53D6\u5230 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">deniedNoKeyAuthData</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u63D0\u53D6\u7B2C\u4E00\u4E2A token \u4F5C\u4E3A\u4E3B\u8981\u7684\u4EE4\u724C\u4FE1\u606F</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">limitKey </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> strings.</span><span style="--0:#B392F0">Split</span><span style="--0:#E1E4E8">(tokens[</span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8">], </span><span style="--0:#9ECBFF">","</span><span style="--0:#E1E4E8">)[</span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"limitKey:</span><span style="--0:#79B8FF">%s</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, limitKey)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u6839\u636E\u63D0\u53D6\u7684 limitKey \u67E5\u627E\u5BF9\u5E94\u7684\u9650\u6D41\u9879</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">limitItem </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">findLimitItem</span><span style="--0:#E1E4E8">(config, limitKey)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"limitItem:</span><span style="--0:#79B8FF">%+v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, limitItem)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5982\u679C\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684\u9650\u6D41\u9879\uFF0C\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> limitItem.Consumer </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">""</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> types.ActionContinue</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u6784\u5EFA Redis \u811A\u672C\u9700\u8981\u7684\u952E\uFF0C\u7528\u4E8E\u64CD\u4F5C\u4EE4\u724C\u6876</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">tokenKey </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> fmt.</span><span style="--0:#B392F0">Sprintf</span><span style="--0:#E1E4E8">(ClusterRateLimitFormat, limitKey, </span><span style="--0:#9ECBFF">"token"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">expireKey </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> fmt.</span><span style="--0:#B392F0">Sprintf</span><span style="--0:#E1E4E8">(ClusterRateLimitFormat, limitKey, </span><span style="--0:#9ECBFF">"expire"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u83B7\u53D6\u5F53\u524D\u65F6\u95F4\uFF0C\u7528\u4E8E\u8BA1\u7B97\u4EE4\u724C\u6876\u7684\u586B\u5145\u72B6\u6001</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">now </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> time.</span><span style="--0:#B392F0">Now</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5C06\u5F53\u524D\u65F6\u95F4\u8F6C\u6362\u4E3A Unix \u65F6\u95F4\u6233\uFF08\u79D2\uFF09</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">unixTimestamp </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> now.</span><span style="--0:#B392F0">UnixNano</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">milliseconds </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> unixTimestamp </span><span style="--0:#F97583">/</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1</span><span style="--0:#F97583">e</span><span style="--0:#79B8FF">6</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">seconds </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> milliseconds </span><span style="--0:#F97583">/</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1000</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u6784\u5EFA\u8C03\u7528 Redis \u811A\u672C\u6240\u9700\u7684\u53C2\u6570</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">keys </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> []</span><span style="--0:#F97583">interface</span><span style="--0:#E1E4E8">{}{tokenKey, expireKey}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">args </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> []</span><span style="--0:#F97583">interface</span><span style="--0:#E1E4E8">{}{limitItem.Rate, limitItem.Capacity, seconds, </span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8">, </span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u8C03\u7528 Redis \u811A\u672C\u6267\u884C\u9650\u6D41\u903B\u8F91</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">err </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> config.RedisClient.</span><span style="--0:#B392F0">Eval</span><span style="--0:#E1E4E8">(BucketTokenScript, </span><span style="--0:#79B8FF">2</span><span style="--0:#E1E4E8">, keys, args, </span><span style="--0:#F97583">func</span><span style="--0:#E1E4E8">(</span><span style="--0:#FFAB70">response</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">resp</span><span style="--0:#E1E4E8">.</span><span style="--0:#B392F0">Value</span><span style="--0:#E1E4E8">) {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"RedisClient.Eval()\uFF0Ckeys:</span><span style="--0:#79B8FF">%+v</span><span style="--0:#9ECBFF">,args:</span><span style="--0:#79B8FF">%+v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, keys, args)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u68C0\u67E5\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u5426\u5305\u542B 4 \u4E2A\u5143\u7D20</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">resultArray </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> response.</span><span style="--0:#B392F0">Array</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">len</span><span style="--0:#E1E4E8">(resultArray) </span><span style="--0:#F97583">!=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">4</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Errorf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"redis response parse error, response: </span><span style="--0:#79B8FF">%v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, response)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">            </span></span><span style="--0:#E1E4E8">proxywasm.</span><span style="--0:#B392F0">ResumeHttpRequest</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">return</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u6839\u636E\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u521B\u5EFA LimitContext \u5BF9\u8C61</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">context </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitContext</span><span style="--0:#E1E4E8">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">Allowed:   resultArray[</span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8">].</span><span style="--0:#B392F0">Integer</span><span style="--0:#E1E4E8">(),</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">Remaining: resultArray[</span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8">].</span><span style="--0:#B392F0">Integer</span><span style="--0:#E1E4E8">(),</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">Count:     resultArray[</span><span style="--0:#79B8FF">2</span><span style="--0:#E1E4E8">].</span><span style="--0:#B392F0">Integer</span><span style="--0:#E1E4E8">(),</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">Reset:     resultArray[</span><span style="--0:#79B8FF">3</span><span style="--0:#E1E4E8">].</span><span style="--0:#B392F0">Integer</span><span style="--0:#E1E4E8">(),</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"context:</span><span style="--0:#79B8FF">%+v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, context)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u5982\u679C\u8BF7\u6C42\u672A\u88AB\u5141\u8BB8\uFF08Allowed &#x3C;= 0\uFF09\uFF0C\u89E6\u53D1\u9650\u6D41\u903B\u8F91</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> context.Allowed </span><span style="--0:#F97583">&#x3C;=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">0</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Debugf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"request rejected"</span><span style="--0:#E1E4E8">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#B392F0">rejected</span><span style="--0:#E1E4E8">(config, context)</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">return</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">} </span><span style="--0:#F97583">else</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u5C06\u9650\u6D41\u4E0A\u4E0B\u6587\u5B58\u50A8\u5728 HttpContext \u4E2D\uFF0C\u4F9B\u540E\u7EED\u5904\u7406\u4F7F\u7528</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">      </span></span><span style="--0:#E1E4E8">ctx.</span><span style="--0:#B392F0">SetContext</span><span style="--0:#E1E4E8">(LimitContextKey, context)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u6062\u590D HTTP \u8BF7\u6C42\u5904\u7406</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">proxywasm.</span><span style="--0:#B392F0">ResumeHttpRequest</span><span style="--0:#E1E4E8">()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">})</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5982\u679C\u8C03\u7528 Redis \u811A\u672C\u65F6\u51FA\u73B0\u9519\u8BEF\uFF0C\u8BB0\u5F55\u9519\u8BEF\u5E76\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> err </span><span style="--0:#F97583">!=</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">nil</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">log.</span><span style="--0:#B392F0">Errorf</span><span style="--0:#E1E4E8">(</span><span style="--0:#9ECBFF">"redis call failed: </span><span style="--0:#79B8FF">%v</span><span style="--0:#9ECBFF">"</span><span style="--0:#E1E4E8">, err)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> types.ActionContinue</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u6682\u505C\u5904\u7406\u5F53\u524D\u8BF7\u6C42\u5934\uFF0C\u7B49\u5F85 Redis \u811A\u672C\u8C03\u7528\u5B8C\u6210</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> types.HeaderStopAllIterationAndWatermark</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#99A0A6">// findLimitItem \u51FD\u6570\u7528\u4E8E\u5728\u7ED9\u5B9A\u7684\u914D\u7F6E\u4E2D\u67E5\u627E\u4E0E\u7279\u5B9A\u6D88\u8D39\u8005\u5339\u914D\u7684\u9650\u6D41\u9879\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u5177\u4F53\u7684\u5339\u914D\u9879\uFF0C\u5B83\u5C06\u8FD4\u56DE\u4E00\u4E2A\u9ED8\u8BA4\u7684 LimitItem \u7ED3\u6784\u3002</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">func</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">findLimitItem</span><span style="--0:#E1E4E8">(</span><span style="--0:#FFAB70">config</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitConfig</span><span style="--0:#E1E4E8">, </span><span style="--0:#FFAB70">key</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">string</span><span style="--0:#E1E4E8">) </span><span style="--0:#B392F0">LimitItem</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">for</span><span style="--0:#E1E4E8"> _, limitItem </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">range</span><span style="--0:#E1E4E8"> config.Limits {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#99A0A6">// \u68C0\u67E5\u5F53\u524D\u9650\u6D41\u9879\u7684\u6D88\u8D39\u8005\u5B57\u6BB5\u662F\u5426\u4E0E\u63D0\u4F9B\u7684 key \u5339\u914D\uFF0C\u4E14\u6D88\u8D39\u8005\u4E0D\u662F\u901A\u914D\u7B26"*"</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> limitItem.Consumer </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> key </span><span style="--0:#F97583">&#x26;&#x26;</span><span style="--0:#E1E4E8"> limitItem.Consumer </span><span style="--0:#F97583">!=</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"*"</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u5982\u679C\u627E\u5230\u5339\u914D\u7684\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> limitItem</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u518D\u6B21\u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879\uFF0C\u8FD9\u6B21\u662F\u4E3A\u4E86\u67E5\u627E\u901A\u914D\u7B26"*"\u7684\u6D88\u8D39\u8005</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u901A\u914D\u7B26"*"\u8868\u793A\u8FD9\u4E2A\u9650\u6D41\u9879\u9002\u7528\u4E8E\u6240\u6709\u6D88\u8D39\u8005</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">for</span><span style="--0:#E1E4E8"> _, limitItem </span><span style="--0:#F97583">:=</span><span style="--0:#E1E4E8"> </span><span style="--0:#F97583">range</span><span style="--0:#E1E4E8"> config.Limits {</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#F97583">if</span><span style="--0:#E1E4E8"> limitItem.Consumer </span><span style="--0:#F97583">==</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"*"</span><span style="--0:#E1E4E8"> {</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#99A0A6">// \u5982\u679C\u627E\u5230\u901A\u914D\u7B26\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879</span></div></div><div class="ec-line"><div class="code"><span class="indent">      </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> limitItem</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">    </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">}</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#99A0A6">// \u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684 LimitItem \u7ED3\u6784\uFF0C\u8868\u793A\u6CA1\u6709\u627E\u5230\u4EFB\u4F55\u9002\u7528\u7684\u9650\u6D41\u89C4\u5219</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#F97583">return</span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">LimitItem</span><span style="--0:#E1E4E8">{}</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="// onHttpRequestHeaders \u51FD\u6570\u5728\u5904\u7406 HTTP \u8BF7\u6C42\u5934\u65F6\u88AB\u8C03\u7528\uFF0C\u7528\u4E8E\u6267\u884C\u9650\u6D41\u903B\u8F91\u3002\x7Ffunc onHttpRequestHeaders(ctx wrapper.HttpContext, config LimitConfig, log wrapper.Log) types.Action {\x7F  log.Debugf(&#x22;onHttpRequestHeaders()&#x22;)\x7F  // \u521D\u59CB\u5316 tokens \u5207\u7247\uFF0C\u7528\u4E8E\u5B58\u50A8\u4ECE\u8BF7\u6C42\u5934\u6216\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\u7684 tokens \u4FE1\u606F\x7F  var tokens []string\x7F\x7F  // \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F\x7F  if config.InHeader {\x7F    // \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E\uFF08key\uFF09\uFF0C\u5C1D\u8BD5\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C\x7F    for _, key := range config.Keys {\x7F      // \u4F7F\u7528 proxywasm \u5E93\u7684 GetHttpRequestHeader \u51FD\u6570\u83B7\u53D6\u8BF7\u6C42\u5934\u4E2D\u7684\u503C\x7F      value, err := proxywasm.GetHttpRequestHeader(key)\x7F      // \u5982\u679C\u6CA1\u6709\u9519\u8BEF\u4E14\u503C\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D\x7F      if err == nil &#x26;&#x26; value != &#x22;&#x22; {\x7F        tokens = append(tokens, value)\x7F      }\x7F    }\x7F  } else if config.InQuery {\x7F    // \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F\x7F    // \u83B7\u53D6 &#x22;:path&#x22; \u8BF7\u6C42\u5934\u4EE5\u83B7\u53D6\u8BF7\u6C42 URL\x7F    requestUrl, _ := proxywasm.GetHttpRequestHeader(&#x22;:path&#x22;)\x7F    // \u89E3\u6790 URL \u5E76\u83B7\u53D6\u67E5\u8BE2\u53C2\u6570\x7F    url, _ := url.Parse(requestUrl)\x7F    queryValues := url.Query()\x7F\x7F    // \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E\x7F    for _, key := range config.Keys {\x7F      // \u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C\x7F      values, ok := queryValues[key]\x7F      // \u5982\u679C\u67E5\u8BE2\u53C2\u6570\u5B58\u5728\u4E14\u6709\u503C\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D\x7F      if ok &#x26;&#x26; len(values) > 0 {\x7F        tokens = append(tokens, values...)\x7F      }\x7F    }\x7F  }\x7F\x7F  // \u5982\u679C\u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u4E86\u591A\u4E8E\u4E00\u4E2A\u7684 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406\x7F  if len(tokens) > 1 {\x7F    return deniedMultiKeyAuthData()\x7F  } else if len(tokens) <= 0 {\x7F    // \u5982\u679C\u6CA1\u6709\u63D0\u53D6\u5230 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406\x7F    return deniedNoKeyAuthData()\x7F  }\x7F\x7F  // \u63D0\u53D6\u7B2C\u4E00\u4E2A token \u4F5C\u4E3A\u4E3B\u8981\u7684\u4EE4\u724C\u4FE1\u606F\x7F  limitKey := strings.Split(tokens[0], &#x22;,&#x22;)[0]\x7F  log.Debugf(&#x22;limitKey:%s&#x22;, limitKey)\x7F\x7F  // \u6839\u636E\u63D0\u53D6\u7684 limitKey \u67E5\u627E\u5BF9\u5E94\u7684\u9650\u6D41\u9879\x7F  limitItem := findLimitItem(config, limitKey)\x7F  log.Debugf(&#x22;limitItem:%+v&#x22;, limitItem)\x7F\x7F  // \u5982\u679C\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684\u9650\u6D41\u9879\uFF0C\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42\x7F  if limitItem.Consumer == &#x22;&#x22; {\x7F    return types.ActionContinue\x7F  }\x7F\x7F  // \u6784\u5EFA Redis \u811A\u672C\u9700\u8981\u7684\u952E\uFF0C\u7528\u4E8E\u64CD\u4F5C\u4EE4\u724C\u6876\x7F  tokenKey := fmt.Sprintf(ClusterRateLimitFormat, limitKey, &#x22;token&#x22;)\x7F  expireKey := fmt.Sprintf(ClusterRateLimitFormat, limitKey, &#x22;expire&#x22;)\x7F\x7F  // \u83B7\u53D6\u5F53\u524D\u65F6\u95F4\uFF0C\u7528\u4E8E\u8BA1\u7B97\u4EE4\u724C\u6876\u7684\u586B\u5145\u72B6\u6001\x7F  now := time.Now()\x7F  // \u5C06\u5F53\u524D\u65F6\u95F4\u8F6C\u6362\u4E3A Unix \u65F6\u95F4\u6233\uFF08\u79D2\uFF09\x7F  unixTimestamp := now.UnixNano()\x7F  milliseconds := unixTimestamp / 1e6\x7F  seconds := milliseconds / 1000\x7F\x7F  // \u6784\u5EFA\u8C03\u7528 Redis \u811A\u672C\u6240\u9700\u7684\u53C2\u6570\x7F  keys := []interface{}{tokenKey, expireKey}\x7F  args := []interface{}{limitItem.Rate, limitItem.Capacity, seconds, 1, 1}\x7F\x7F  // \u8C03\u7528 Redis \u811A\u672C\u6267\u884C\u9650\u6D41\u903B\u8F91\x7F  err := config.RedisClient.Eval(BucketTokenScript, 2, keys, args, func(response resp.Value) {\x7F    log.Debugf(&#x22;RedisClient.Eval()\uFF0Ckeys:%+v,args:%+v&#x22;, keys, args)\x7F    // \u68C0\u67E5\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u5426\u5305\u542B 4 \u4E2A\u5143\u7D20\x7F    resultArray := response.Array()\x7F    if len(resultArray) != 4 {\x7F      log.Errorf(&#x22;redis response parse error, response: %v&#x22;, response)\x7F            proxywasm.ResumeHttpRequest()\x7F      return\x7F    }\x7F    // \u6839\u636E\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u521B\u5EFA LimitContext \u5BF9\u8C61\x7F    context := LimitContext{\x7F      Allowed:   resultArray[0].Integer(),\x7F      Remaining: resultArray[1].Integer(),\x7F      Count:     resultArray[2].Integer(),\x7F      Reset:     resultArray[3].Integer(),\x7F    }\x7F    log.Debugf(&#x22;context:%+v&#x22;, context)\x7F    // \u5982\u679C\u8BF7\u6C42\u672A\u88AB\u5141\u8BB8\uFF08Allowed <= 0\uFF09\uFF0C\u89E6\u53D1\u9650\u6D41\u903B\u8F91\x7F    if context.Allowed <= 0 {\x7F      log.Debugf(&#x22;request rejected&#x22;)\x7F      rejected(config, context)\x7F      return\x7F    } else {\x7F      // \u5C06\u9650\u6D41\u4E0A\u4E0B\u6587\u5B58\u50A8\u5728 HttpContext \u4E2D\uFF0C\u4F9B\u540E\u7EED\u5904\u7406\u4F7F\u7528\x7F      ctx.SetContext(LimitContextKey, context)\x7F    }\x7F    // \u6062\u590D HTTP \u8BF7\u6C42\u5904\u7406\x7F    proxywasm.ResumeHttpRequest()\x7F  })\x7F  // \u5982\u679C\u8C03\u7528 Redis \u811A\u672C\u65F6\u51FA\u73B0\u9519\u8BEF\uFF0C\u8BB0\u5F55\u9519\u8BEF\u5E76\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42\x7F  if err != nil {\x7F    log.Errorf(&#x22;redis call failed: %v&#x22;, err)\x7F    return types.ActionContinue\x7F  }\x7F  // \u6682\u505C\u5904\u7406\u5F53\u524D\u8BF7\u6C42\u5934\uFF0C\u7B49\u5F85 Redis \u811A\u672C\u8C03\u7528\u5B8C\u6210\x7F  return types.HeaderStopAllIterationAndWatermark\x7F}\x7F\x7F// findLimitItem \u51FD\u6570\u7528\u4E8E\u5728\u7ED9\u5B9A\u7684\u914D\u7F6E\u4E2D\u67E5\u627E\u4E0E\u7279\u5B9A\u6D88\u8D39\u8005\u5339\u914D\u7684\u9650\u6D41\u9879\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u5177\u4F53\u7684\u5339\u914D\u9879\uFF0C\u5B83\u5C06\u8FD4\u56DE\u4E00\u4E2A\u9ED8\u8BA4\u7684 LimitItem \u7ED3\u6784\u3002\x7Ffunc findLimitItem(config LimitConfig, key string) LimitItem {\x7F  // \u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879\x7F  for _, limitItem := range config.Limits {\x7F    // \u68C0\u67E5\u5F53\u524D\u9650\u6D41\u9879\u7684\u6D88\u8D39\u8005\u5B57\u6BB5\u662F\u5426\u4E0E\u63D0\u4F9B\u7684 key \u5339\u914D\uFF0C\u4E14\u6D88\u8D39\u8005\u4E0D\u662F\u901A\u914D\u7B26&#x22;*&#x22;\x7F    if limitItem.Consumer == key &#x26;&#x26; limitItem.Consumer != &#x22;*&#x22; {\x7F      // \u5982\u679C\u627E\u5230\u5339\u914D\u7684\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879\x7F      return limitItem\x7F    }\x7F  }\x7F  // \u518D\u6B21\u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879\uFF0C\u8FD9\u6B21\u662F\u4E3A\u4E86\u67E5\u627E\u901A\u914D\u7B26&#x22;*&#x22;\u7684\u6D88\u8D39\u8005\x7F  // \u901A\u914D\u7B26&#x22;*&#x22;\u8868\u793A\u8FD9\u4E2A\u9650\u6D41\u9879\u9002\u7528\u4E8E\u6240\u6709\u6D88\u8D39\u8005\x7F  for _, limitItem := range config.Limits {\x7F    if limitItem.Consumer == &#x22;*&#x22; {\x7F      // \u5982\u679C\u627E\u5230\u901A\u914D\u7B26\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879\x7F      return limitItem\x7F    }\x7F  }\x7F  // \u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684 LimitItem \u7ED3\u6784\uFF0C\u8868\u793A\u6CA1\u6709\u627E\u5230\u4EFB\u4F55\u9002\u7528\u7684\u9650\u6D41\u89C4\u5219\x7F  return LimitItem{}\x7F}"><div></div></button></div></figure></div>
<p>onHttpRequestHeaders \u51FD\u6570\u7684\u6838\u5FC3\u903B\u8F91\u53EF\u4EE5\u6982\u62EC\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A</p>
<ul>
<li>\u83B7\u53D6 Tokens\uFF1A\u6839\u636E\u914D\u7F6E\uFF08config.InHeader \u6216 config.InQuery\uFF09\uFF0C\u4ECE\u8BF7\u6C42\u5934\u6216\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\u7528\u4E8E\u9650\u6D41\u7684 tokens \u4FE1\u606F\u3002</li>
<li>\u9A8C\u8BC1 Tokens\uFF1A\u68C0\u67E5\u63D0\u53D6\u7684 tokens \u662F\u5426\u5B58\u5728\u4E14\u6570\u91CF\u5408\u7406\uFF08\u4E0D\u80FD\u591A\u4E8E\u4E00\u4E2A\uFF09\uFF0C\u5982\u679C\u4E0D\u7B26\u5408\u8981\u6C42\uFF0C\u8FD4\u56DE\u76F8\u5E94\u7684\u9519\u8BEF\u5904\u7406\u3002</li>
<li>\u67E5\u627E\u9650\u6D41\u9879\uFF1A\u4F7F\u7528\u63D0\u53D6\u7684 tokens \u67E5\u627E\u914D\u7F6E\u4E2D\u7684\u9650\u6D41\u89C4\u5219\uFF08LimitItem\uFF09\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u9002\u7528\u7684\u9650\u6D41\u89C4\u5219\uFF0C\u5219\u5141\u8BB8\u8BF7\u6C42\u7EE7\u7EED\u3002</li>
<li>\u6267\u884C\u9650\u6D41\u903B\u8F91\uFF1A\u5982\u679C\u627E\u5230\u9650\u6D41\u89C4\u5219\uFF0C\u6784\u5EFA Redis \u811A\u672C\u9700\u8981\u7684\u952E\u548C\u53C2\u6570\uFF0C\u7136\u540E\u8C03\u7528 Redis \u811A\u672C\u6267\u884C\u9650\u6D41\u7B97\u6CD5\u3002</li>
<li>\u5904\u7406 Redis \u811A\u672C\u7ED3\u679C\uFF1A\u6839\u636E Redis \u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u521B\u5EFA LimitContext \u5BF9\u8C61\u5E76\u6839\u636E\u7B97\u6CD5\u7ED3\u679C\u51B3\u5B9A\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\u7EE7\u7EED\uFF1A
<ul>
<li>\u5982\u679C\u8BF7\u6C42\u88AB\u62D2\u7EDD\uFF08context.Allowed &#x3C;= 0\uFF09\uFF0C\u6267\u884C\u9650\u6D41\u903B\u8F91\u5E76\u901A\u77E5\u5BA2\u6237\u7AEF\u3002</li>
<li>\u5982\u679C\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u5C06 LimitContext \u5BF9\u8C61\u5B58\u50A8\u5728 HttpContext \u4E2D\uFF0C\u4F9B\u540E\u7EED\u5904\u7406\u4F7F\u7528\u3002</li>
</ul>
</li>
</ul>
<h2 id="4-\u6D4B\u8BD5\u548C\u9A8C\u8BC1">4 \u6D4B\u8BD5\u548C\u9A8C\u8BC1</h2>
<ol>
<li>\u6B63\u5E38\u6D41\u91CF</li>
</ol>
<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#B392F0">curl</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">-X</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">POST</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">-v</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">http://127.0.0.1:10000/hello</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'Authorization: Bearer credential1'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'Content-type: application/json'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'host:foo.com'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-d</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'{"username":["unamexxxx"],"password":["pswdxxxx"]}'</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">*</span><span style="--0:#E1E4E8">   Trying 127.0.0.1:10000...</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">*</span><span style="--0:#E1E4E8"> Connected to 127.0.0.1 (</span><span style="--0:#B392F0">127.0.0.1</span><span style="--0:#E1E4E8">) port 10000 (#0)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> </span><span style="--0:#B392F0">POST</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">/hello</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">HTTP/1.1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Host:foo.com</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> User-Agent: curl/8.1.2</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Accept: </span><span style="--0:#F97583">*</span><span style="--0:#E1E4E8">/</span><span style="--0:#F97583">*</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Authorization: Bearer credential1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Content-type: application/json</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Content-Length: 50</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> HTTP/1.1 200 OK</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> content-type: application/json</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-content-type-options: nosniff</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> date: Tue, 20 Aug 2024 08:55:13 GMT</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> content-length: 692</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> req-cost-time: 42</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> req-arrive-time: 1724144113842</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> resp-start-time: 1724144113885</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-envoy-upstream-service-time: 8</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-limit: 4</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-remaining: 3</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> server: envoy</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#E1E4E8">{</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"path"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"/hello",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"host"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"foo.com",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"method"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"POST",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"proto"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"HTTP/1.1",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"headers"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Accept"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"*/*"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Authorization"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"Bearer credential1"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Content-Length"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"50"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Content-Type"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"application/json"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Original-Host"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"foo.com"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"Req-Start-Time"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"1724144113842"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"User-Agent"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"curl/8.1.2"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"X-Envoy-Expected-Rq-Timeout-Ms"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"15000"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"X-Forwarded-Proto"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"https"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"X-Request-Id"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"b40e9ebb-f36c-4e22-b8fc-2559c9495f43"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8"> </span></span><span style="--0:#E1E4E8">},</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"namespace"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"ingress"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"service"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"pod"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">"",</span></div></div><div class="ec-line"><div class="code"><span class="indent"> </span><span style="--0:#B392F0">"body"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">{</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"password"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"pswdxxxx"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">],</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">"username"</span><span style="--0:#79B8FF">:</span><span style="--0:#E1E4E8"> [</span></div></div><div class="ec-line"><div class="code"><span class="indent">   </span><span style="--0:#B392F0">"unamexxxx"</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8">  </span></span><span style="--0:#E1E4E8">]</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#E1E4E8"> </span></span><span style="--0:#E1E4E8">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="curl -X POST -v http://127.0.0.1:10000/hello \\\x7F    -H &#x27;Authorization: Bearer credential1&#x27; \\\x7F    -H &#x27;Content-type: application/json&#x27; \\\x7F    -H &#x27;host:foo.com&#x27; \\\x7F    -d &#x27;{&#x22;username&#x22;:[&#x22;unamexxxx&#x22;],&#x22;password&#x22;:[&#x22;pswdxxxx&#x22;]}&#x27;\x7F\x7F*   Trying 127.0.0.1:10000...\x7F* Connected to 127.0.0.1 (127.0.0.1) port 10000 (#0)\x7F> POST /hello HTTP/1.1\x7F> Host:foo.com\x7F> User-Agent: curl/8.1.2\x7F> Accept: */*\x7F> Authorization: Bearer credential1\x7F> Content-type: application/json\x7F> Content-Length: 50\x7F>\x7F< HTTP/1.1 200 OK\x7F< content-type: application/json\x7F< x-content-type-options: nosniff\x7F< date: Tue, 20 Aug 2024 08:55:13 GMT\x7F< content-length: 692\x7F< req-cost-time: 42\x7F< req-arrive-time: 1724144113842\x7F< resp-start-time: 1724144113885\x7F< x-envoy-upstream-service-time: 8\x7F< x-ratelimit-limit: 4\x7F< x-ratelimit-remaining: 3\x7F< server: envoy\x7F<\x7F{\x7F &#x22;path&#x22;: &#x22;/hello&#x22;,\x7F &#x22;host&#x22;: &#x22;foo.com&#x22;,\x7F &#x22;method&#x22;: &#x22;POST&#x22;,\x7F &#x22;proto&#x22;: &#x22;HTTP/1.1&#x22;,\x7F &#x22;headers&#x22;: {\x7F  &#x22;Accept&#x22;: [\x7F   &#x22;*/*&#x22;\x7F  ],\x7F  &#x22;Authorization&#x22;: [\x7F   &#x22;Bearer credential1&#x22;\x7F  ],\x7F  &#x22;Content-Length&#x22;: [\x7F   &#x22;50&#x22;\x7F  ],\x7F  &#x22;Content-Type&#x22;: [\x7F   &#x22;application/json&#x22;\x7F  ],\x7F  &#x22;Original-Host&#x22;: [\x7F   &#x22;foo.com&#x22;\x7F  ],\x7F  &#x22;Req-Start-Time&#x22;: [\x7F   &#x22;1724144113842&#x22;\x7F  ],\x7F  &#x22;User-Agent&#x22;: [\x7F   &#x22;curl/8.1.2&#x22;\x7F  ],\x7F  &#x22;X-Envoy-Expected-Rq-Timeout-Ms&#x22;: [\x7F   &#x22;15000&#x22;\x7F  ],\x7F  &#x22;X-Forwarded-Proto&#x22;: [\x7F   &#x22;https&#x22;\x7F  ],\x7F  &#x22;X-Request-Id&#x22;: [\x7F   &#x22;b40e9ebb-f36c-4e22-b8fc-2559c9495f43&#x22;\x7F  ]\x7F },\x7F &#x22;namespace&#x22;: &#x22;&#x22;,\x7F &#x22;ingress&#x22;: &#x22;&#x22;,\x7F &#x22;service&#x22;: &#x22;&#x22;,\x7F &#x22;pod&#x22;: &#x22;&#x22;,\x7F &#x22;body&#x22;: {\x7F  &#x22;password&#x22;: [\x7F   &#x22;pswdxxxx&#x22;\x7F  ],\x7F  &#x22;username&#x22;: [\x7F   &#x22;unamexxxx&#x22;\x7F  ]\x7F }"><div></div></button></div></figure></div>
<p>\u53EF\u4EE5\u770B\u5230\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E86\u76F8\u5E94\u7684\u54CD\u5E94\u3002</p>
<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-limit: 4</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-remaining: 3</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="< x-ratelimit-limit: 4\x7F< x-ratelimit-remaining: 3"><div></div></button></div></figure></div>
<ol start="2">
<li>\u89E6\u53D1\u6D41\u63A7</li>
</ol>
<div class="expressive-code"><figure class="frame is-terminal not-content"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre tabindex="0"><code><div class="ec-line"><div class="code"><span style="--0:#F97583">for</span><span style="--0:#E1E4E8"> i </span><span style="--0:#F97583">in</span><span style="--0:#E1E4E8"> $(</span><span style="--0:#B392F0">seq</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">1</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">10</span><span style="--0:#E1E4E8">); </span><span style="--0:#F97583">do</span></div></div><div class="ec-line"><div class="code"><span class="indent">  </span><span style="--0:#B392F0">curl</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">-X</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">POST</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">-v</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">http://127.0.0.1:10000/hello</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'Authorization: Bearer credential1'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'Content-type: application/json'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-H</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'host:foo.com'</span><span style="--0:#E1E4E8"> </span><span style="--0:#79B8FF">\\</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#79B8FF">-d</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">'{"username":["unamexxxx"],"password":["pswdxxxx"]}'</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">done</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> POST /hello HTTP/1.1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Host:foo.com</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> User-Agent: curl/8.1.2</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Accept: </span><span style="--0:#F97583">*</span><span style="--0:#E1E4E8">/</span><span style="--0:#F97583">*</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Authorization: Bearer credential1</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Content-type: application/json</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span><span style="--0:#E1E4E8"> Content-Length: 50</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">></span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> HTTP/1.1 429 Too Many Requests</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-limit: 4</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-remaining: 0</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> x-ratelimit-reset: 4</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> content-length: 17</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> content-type: text/plain</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> date: Tue, 20 Aug 2024 08:56:57 GMT</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span><span style="--0:#E1E4E8"> server: envoy</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">&#x3C;</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F97583">*</span><span style="--0:#E1E4E8"> Connection </span><span style="--0:#99A0A6">#0 to host 127.0.0.1 left intact</span></div></div><div class="ec-line"><div class="code"><span style="--0:#B392F0">Too</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Many</span><span style="--0:#E1E4E8"> </span><span style="--0:#9ECBFF">Requests%</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="for i in $(seq 1 10); do\x7F  curl -X POST -v http://127.0.0.1:10000/hello \\\x7F    -H &#x27;Authorization: Bearer credential1&#x27; \\\x7F    -H &#x27;Content-type: application/json&#x27; \\\x7F    -H &#x27;host:foo.com&#x27; \\\x7F    -d &#x27;{&#x22;username&#x22;:[&#x22;unamexxxx&#x22;],&#x22;password&#x22;:[&#x22;pswdxxxx&#x22;]}&#x27;\x7Fdone\x7F\x7F> POST /hello HTTP/1.1\x7F> Host:foo.com\x7F> User-Agent: curl/8.1.2\x7F> Accept: */*\x7F> Authorization: Bearer credential1\x7F> Content-type: application/json\x7F> Content-Length: 50\x7F>\x7F< HTTP/1.1 429 Too Many Requests\x7F< x-ratelimit-limit: 4\x7F< x-ratelimit-remaining: 0\x7F< x-ratelimit-reset: 4\x7F< content-length: 17\x7F< content-type: text/plain\x7F< date: Tue, 20 Aug 2024 08:56:57 GMT\x7F< server: envoy\x7F<\x7F* Connection #0 to host 127.0.0.1 left intact\x7FToo Many Requests%"><div></div></button></div></figure></div>
<h2 id="\u53C2\u8003">\u53C2\u8003</h2>
<ul>
<li>[1] <a href="https://help.aliyun.com/document_detail/149952.html" referrerpolicy="unsafe-url" rel="nofollow" target="_blank">\u9650\u6D41\u7B97\u6CD5\u9009\u62E9</a></li>
</ul>`,e={title:"Redis \u8C03\u7528",keywords:["Higress"]},a="/home/runner/work/higress-group.github.io/higress-group.github.io/src/content/docs/ebook/en/wasm18.md",p=void 0,d=function(){return`
# Redis \u8C03\u7528

\u672C\u7AE0\u4ECB\u7ECD\u5982\u4F55\u5728\u63D2\u4EF6\u4E2D\u8C03\u7528 Redis\u3001\u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA\u3001\u4EE5\u53CA\u5F00\u53D1\u57FA\u4E8E\u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u3002

## 1 Redis \u8C03\u7528

Higress \u63D2\u4EF6\u7684 Go SDK \u4E2D redis_wrapper.go \u5C01\u88C5 Redis \u8C03\u7528\uFF0C \u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A

\`\`\`shell
// Redis \u56DE\u8C03\u51FD\u6570
type RedisResponseCallback func(response resp.Value)

// Redis \u8C03\u7528\u63A5\u53E3
type RedisClient interface {
	// \u521D\u59CB\u5316\u63A5\u53E3
	Init(username, password string, timeout int64) error
	// with this function, you can call redis as if you are using redis-cli
	}
	// \u547D\u4EE4\u63A5\u53E3
	Command(cmds []interface{}, callback RedisResponseCallback) error
	// Lua\u811A\u672C\u63A5\u53E3
	Eval(script string, numkeys int, keys, args []interface{}, callback RedisResponseCallback) error

	// \u4EE5\u4E0B\u662F Redis \u5404\u79CD\u547D\u4EE4\u63A5\u53E3
	// Key
	Del(key string, callback RedisResponseCallback) error
	Exists(key string, callback RedisResponseCallback) error
	Expire(key string, ttl int, callback RedisResponseCallback) error
	Persist(key string, callback RedisResponseCallback) error
    ...
}

// RedisClusterClient, Redis \u8C03\u7528\u63A5\u53E3\u5177\u4F53\u5B9E\u73B0
type RedisClusterClient[C Cluster] struct {
	cluster C
}

func RedisInit(cluster Cluster, username, password string, timeout uint32) error {
	return proxywasm.RedisInit(cluster.ClusterName(), username, password, timeout)
}
// \u771F\u6B63\u8C03\u7528 Redis \u7684\u51FD\u6570
func RedisCall(cluster Cluster, respQuery []byte, callback RedisResponseCallback) error {
	requestID := uuid.New().String()
	_, err := proxywasm.DispatchRedisCall(
		cluster.ClusterName(),
		respQuery,
		func(status int, responseSize int) {
			response, err := proxywasm.GetRedisCallResponse(0, responseSize)
			var responseValue resp.Value
			// \u83B7\u53D6 Redis \u56DE\u8C03\u7ED3\u679C responseValue 
			...
			if callback != nil {
			   // \u8C03\u7528\u56DE\u8C03\u51FD\u6570
               callback(responseValue)
			}
		})
	...
	return err
}
\`\`\`

\u6240\u6709\u8C03\u7528 Redis \u7684\u63A5\u53E3\uFF0C\u6700\u7EC8\u901A\u8FC7 RedisCall \u8C03\u7528 Redis\uFF0C \u540C\u65F6\u56DE\u8C03 RedisResponseCallback \u56DE\u8C03\u51FD\u6570\u3002

## 2 \u4EE4\u724C\u6876\u9650\u6D41

\u5E38\u89C1\u7684\u9650\u6D41\u7B97\u6CD5\u6709\u56FA\u5B9A\u7A97\u53E3\u9650\u6D41\u7B97\u6CD5\u3001\u6ED1\u52A8\u7A97\u53E3\u9650\u6D41\u7B97\u6CD5\u3001\u6F0F\u6876\u9650\u6D41\u7B97\u6CD5\u3001\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u7B49\u3002\u8FD9\u91CC\u4E3B\u8981\u4ECB\u7ECD\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u3002
\u4EE4\u724C\u6876\u7B97\u6CD5\u539F\u7406\uFF1A
- \u4EE4\u724C\u4EE5\u56FA\u5B9A\u7684\u9891\u7387\u88AB\u6DFB\u52A0\u5230\u4EE4\u724C\u6876\u4E2D\u3002
- \u5982\u679C\u4EE4\u724C\u6570\u91CF\u6EE1\u4E86\uFF0C\u8D85\u8FC7\u4EE4\u724C\u6876\u5BB9\u91CF\u7684\u9650\u5236\uFF0C\u90A3\u5C31\u4E22\u5F03\u3002
- \u7CFB\u7EDF\u5728\u63A5\u53D7\u5230\u4E00\u4E2A\u7528\u6237\u8BF7\u6C42\u65F6\uFF0C\u90FD\u4F1A\u5148\u53BB\u4EE4\u724C\u6876\u8981\u4E00\u4E2A\u4EE4\u724C\u3002\u5982\u679C\u62FF\u5230\u4EE4\u724C\uFF0C\u90A3\u4E48\u5C31\u5904\u7406\u8FD9\u4E2A\u8BF7\u6C42\u7684\u4E1A\u52A1\u903B\u8F91\u3002
- \u5982\u679C\u62FF\u4E0D\u5230\u4EE4\u724C\uFF0C\u5C31\u76F4\u63A5\u62D2\u7EDD\u8FD9\u4E2A\u8BF7\u6C42\u3002

\u4EE4\u724C\u6876\u7B97\u6CD5\u5141\u8BB8\u4E00\u5B9A\u91CF\u7684\u7A81\u53D1\u8BF7\u6C42\uFF0C\u56E0\u4E3A\u6876\u53EF\u4EE5\u5B58\u50A8\u4E00\u5B9A\u6570\u91CF\u7684\u4EE4\u724C\uFF0C\u4ECE\u800C\u5728\u77ED\u671F\u5185\u5904\u7406\u66F4\u591A\u7684\u8BF7\u6C42\u3002\u5177\u4F53\u539F\u7406\u89C1\u4E0B\u56FE\uFF1A
![img](https://img.alicdn.com/imgextra/i2/O1CN018T2vsi1bbGU9PeVx6_!!6000000003483-0-tps-902-922.jpg)

\u5173\u4E8E QPS \u9650\u6D41\u7B97\u6CD5\u548C\u4EE4\u724C\u6876\u7B97\u6CD5\u4E24\u79CD\u9650\u6D41\u7B97\u6CD5\u4F18\u7F3A\u70B9\uFF0C\u53EF\u4EE5\u53C2\u8003\uFF1A[\u9650\u6D41\u7B97\u6CD5\u9009\u62E9](https://help.aliyun.com/document_detail/149952.html)\u3002

## 3 \u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA

### 3.1  \u521D\u59CB\u5316\u5DE5\u7A0B\u76EE\u5F55

1. \u65B0\u5EFA\u4E00\u4E2A\u5DE5\u7A0B\u76EE\u5F55\u6587\u4EF6 cluster-bucket-limit\u3002

\`\`\`shell
mkdir cluster-bucket-limit
\`\`\`
2. \u5728\u6240\u5EFA\u76EE\u5F55\u4E0B\u6267\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF0C\u521D\u59CB\u5316 Go \u5DE5\u7A0B\u3002

\`\`\`shell
go mod init cluster-bucket-limit
\`\`\`
\u66F4\u8BE6\u7EC6\u4FE1\u606F\u53C2\u8003\u7B2C\u5341\u56DB\u7AE0 Wasm \u63D2\u4EF6\u4ECB\u7ECD\u548C\u5F00\u53D1\u81EA\u5B9A\u4E49\u63D2\u4EF6\u3002

### 3.2  Makefile\u3001Dockerfile\u3001docker-compose.yaml\u3001envoy.yaml \u6587\u4EF6

1. Makefile\u3001Dockerfile

Makefile\u3001Dockerfile \u6587\u4EF6\u53C2\u8003\u7B2C\u5341\u56DB\u7AE0 Wasm \u63D2\u4EF6\u4ECB\u7ECD\u548C\u5F00\u53D1\u81EA\u5B9A\u4E49\u63D2\u4EF6\u3002

2. docker-compose.yaml

\`\`\`yaml
version: '3.9'
services:
  envoy:
    image: higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/gateway:v1.4.1
    entrypoint: /usr/local/bin/envoy
    # \u6CE8\u610F\u8FD9\u91CC\u5BF9wasm\u5F00\u542F\u4E86debug\u7EA7\u522B\u65E5\u5FD7\uFF0C\u6B63\u5F0F\u90E8\u7F72\u65F6\u5219\u9ED8\u8BA4info\u7EA7\u522B
    command: -c /etc/envoy/envoy.yaml --log-level info --log-path /etc/envoy/envoy.log --component-log-level wasm:debug
    depends_on:
      - echo-server
    networks:
      - wasmtest
    ports:
      - "10000:10000"
      - "9901:9901"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
      - ./build/plugin.wasm:/etc/envoy/plugin.wasm
      - ./envoy.log:/etc/envoy/envoy.log
  echo-server:
    image: higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/echo-server:1.3.0
    networks:
      - wasmtest
    ports:
      - "3000:3000"
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/2456868764/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      wasmtest:
        ipv4_address: 172.20.0.100
    ports:
      - "6379:6379"
networks:
  wasmtest:
    ipam:
      config:
        - subnet: 172.20.0.0/24

\`\`\`

3. envoy.yaml \u6587\u4EF6

envoy.yaml \u914D\u7F6E\u6587\u4EF6\u5982\u4E0B\uFF1A
\`\`\`yaml
admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                scheme_header_transformation:
                  scheme_to_overwrite: https
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: echo-server
                http_filters:
                  - name: wasmdemo
                    typed_config:
                      "@type": type.googleapis.com/udpa.type.v1.TypedStruct
                      type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      value:
                        config:
                          name: wasmdemo
                          vm_config:
                            runtime: envoy.wasm.runtime.v8
                            code:
                              local:
                                filename: /etc/envoy/plugin.wasm
                          configuration:
                            "@type": "type.googleapis.com/google.protobuf.StringValue"
                            value: |-
                              {
                                "keys": [
                                  "authorization"
                                ],
                                "in_header": true,
                                "limits": [
                                  {
                                    "name": "credential1",
                                    "consumer": "Bearer credential1",
                                    "rate": 2,
                                    "capacity": 4
                                  },
                                  {
                                    "name": "all",
                                    "consumer": "*",
                                    "rate": 1,
                                    "capacity": 2
                                  }
                                ],
                                "rejected_code": 429,
                                "rejected_msg": "Too Many Requests",
                                "show_limit_quota_header": true,
                                "redis":{
                                  "service_name": "redis.static",
                                  "service_port": 6379,
                                  "timeout": 2000
                                }
                              }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: echo-server
      connect_timeout: 30s
      type: LOGICAL_DNS
      # Comment out the following line to test on v6 networks
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: echo-server
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: echo-server
                      port_value: 3000
    - name: outbound|6379||redis.static
      connect_timeout: 30s
      type: STATIC
      load_assignment:
        cluster_name: outbound|6379||redis.static
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.20.0.100
                      port_value: 6379
\`\`\`
envoy.yaml \u914D\u7F6E\u6587\u4EF6\u589E\u52A0\u4E86 \`outbound|6379||redis.static\` \u96C6\u7FA4\uFF0C\u7528\u4E8E\u8FDE\u63A5 Redis \u670D\u52A1\u3002Redis \u8FDE\u63A5\u76EE\u524D\u4E0D\u652F\u6301 DNS \u57DF\u540D\u914D\u7F6E\uFF0C\u53EA\u652F\u6301 IP \u5730\u5740\u914D\u7F6E\u3002
\u56E0\u6B64\u8FD9\u91CC Redis \u7684 IP \u5730\u5740\u662F \`172.20.0.100\`\u3002

## 3 \u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u5F00\u53D1

### 3.1 \u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790

\u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790\u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A
\`\`\`go
// LimitConfig \u5B9A\u4E49\u4E86\u9650\u6D41\u63D2\u4EF6\u7684\u914D\u7F6E\u7ED3\u6784\u3002
type LimitConfig struct {
	Keys                 []string            \`yaml:"keys"\`                    // \u5B9A\u4E49\u4E86\u7528\u4E8E\u63D0\u53D6\u9650\u6D41\u4FE1\u606F\u7684HTTP\u8BF7\u6C42\u5934\u5B57\u6BB5\u540D\u79F0\u3002
	InQuery              bool                \`yaml:"in_query,omitempty"\`      // \u6807\u8BC6\u662F\u5426\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002
	InHeader             bool                \`yaml:"in_header,omitempty"\`     // \u6807\u8BC6\u662F\u5426\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u9650\u6D41\u4FE1\u606F\u3002
	Limits               []LimitItem         \`yaml:"limits"\`                  // \u5305\u542B\u5177\u4F53\u7684\u9650\u6D41\u89C4\u5219\u9879\u3002
	RejectedCode         uint32              \`yaml:"rejected_code"\`           // \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684 HTTP \u72B6\u6001\u7801\u3002
	RejectedMsg          string              \`yaml:"rejected_msg"\`            // \u8BF7\u6C42\u8D85\u8FC7\u9608\u503C\u88AB\u62D2\u7EDD\u65F6\u8FD4\u56DE\u7684\u54CD\u5E94\u4F53\u3002
	ShowLimitQuotaHeader bool                \`yaml:"show_limit_quota_header"\` // \u6807\u8BC6\u662F\u5426\u5728\u54CD\u5E94\u5934\u4E2D\u663E\u793A\u9650\u6D41\u914D\u989D\u4FE1\u606F\u3002
	RedisInfo            RedisInfo           \`yaml:"redis"\`                   // \u5B9A\u4E49\u4E86\u4E0E Redis \u4EA4\u4E92\u6240\u9700\u7684\u4FE1\u606F\u3002
	RedisClient          wrapper.RedisClient // Redis\u5BA2\u6237\u7AEF\uFF0C\u7528\u4E8E\u6267\u884CRedis\u547D\u4EE4\u3002
}

// LimitItem \u5B9A\u4E49\u4E86\u5177\u4F53\u7684\u9650\u6D41\u9879\uFF0C\u5305\u62EC\u9650\u6D41\u540D\u79F0\u3001\u6D88\u8D39\u8005\u6807\u8BC6\u3001\u8BF7\u6C42\u901F\u7387\u548C\u5BB9\u91CF\u3002
type LimitItem struct {
	Name     string \`yaml:"name"\`     // \u9650\u6D41\u9879\u7684\u540D\u79F0\u3002
	Consumer string \`yaml:"consumer"\` // \u9650\u6D41\u9879\u5173\u8054\u7684\u6D88\u8D39\u8005\u6807\u8BC6\uFF0C\u7528\u4E8E\u5339\u914D\u7279\u5B9A\u7684\u8BF7\u6C42\u3002
	Rate     int    \`yaml:"rate"\`     // \u6BCF\u79D2\u653E\u5165\u6876\u5185\u7684\u4EE4\u724C\u6570\u91CF\u3002
	Capacity int    \`yaml:"capacity"\` // \u9650\u6D41\u6876\u7684\u6700\u5927\u5BB9\u91CF\u3002
}

// RedisInfo \u5B9A\u4E49\u4E86\u8FDE\u63A5Redis\u6240\u9700\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002
type RedisInfo struct {
	ServiceName string \`required:"true" yaml:"service_name" json:"service_name"\` // Redis \u670D\u52A1\u540D\u6216\u5730\u5740\u3002
	ServicePort int    \`yaml:"service_port" json:"service_port"\`                 // Redis \u670D\u52A1\u7AEF\u53E3\u3002
	Username    string \`yaml:"username" json:"username"\`                         // \u8FDE\u63A5 Redis \u7684\u7528\u6237\u540D\uFF0C\u5982\u679C\u9700\u8981\u3002
	Password    string \`yaml:"password" json:"password"\`                         // \u8FDE\u63A5 Redis \u7684\u5BC6\u7801\uFF0C\u5982\u679C\u9700\u8981\u3002
	Timeout     int    \`yaml:"timeout" json:"timeout"\`                           // \u8FDE\u63A5 Redis \u7684\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\u3002
}

// LimitContext \u5B9A\u4E49\u4E86\u9650\u6D41\u4E0A\u4E0B\u6587\uFF0C\u5B58\u50A8\u4E86\u9650\u6D41\u76F8\u5173\u7684\u4FE1\u606F\u3002
type LimitContext struct {
	Allowed   int // \u8868\u793A\u5F53\u524D\u8BF7\u6C42\u662F\u5426\u88AB\u5141\u8BB8\u3002
	Count     int // \u9650\u6D41\u6876\u5F53\u524D\u7684\u8BA1\u6570\u3002
	Remaining int // \u9650\u6D41\u6876\u5269\u4F59\u7684\u5BB9\u91CF\u3002
	Reset     int // \u9650\u6D41\u6876\u91CD\u7F6E\u65F6\u95F4\uFF08\u79D2\uFF09\u3002
}

// \u89E3\u6790\u914D\u7F6E\uFF0C\u8FD9\u91CC\u5FFD\u7565\u63D2\u4EF6\u914D\u7F6E\u89E3\u6790\u7684\u7EC6\u8282\u3002\u4E3B\u8981\u663E\u793A Redis \u90E8\u5206\u89E3\u6790\u914D\u7F6E\u3002
func parseConfig(json gjson.Result, config *LimitConfig, log wrapper.Log) error {
	// keys
	names := json.Get("keys")
	...
	// in_query and in_header
	in_query := json.Get("in_query")
	in_header := json.Get("in_header")
	...
	// parse limit
	limits := json.Get("limits")
	...
	config.ShowLimitQuotaHeader = json.Get("show_limit_quota_header").Bool()
	
	// parse redis
	redisConfig := json.Get("redis")
	if !redisConfig.Exists() {
		return errors.New("missing redis in config")
	}
	serviceName := redisConfig.Get("service_name").String()
	if serviceName == "" {
		return errors.New("redis service name must not be empty")
	}
	servicePort := int(redisConfig.Get("service_port").Int())
	if servicePort == 0 {
		if strings.HasSuffix(serviceName, ".static") {
			// use default logic port which is 80 for static service
			servicePort = 80
		} else {
			servicePort = 6379
		}
	}
	username := redisConfig.Get("username").String()
	password := redisConfig.Get("password").String()
	timeout := int(redisConfig.Get("timeout").Int())
	if timeout == 0 {
		timeout = 1000
	}
	config.RedisInfo.ServiceName = serviceName
	config.RedisInfo.ServicePort = servicePort
	config.RedisInfo.Username = username
	config.RedisInfo.Password = password
	config.RedisInfo.Timeout = timeout
	config.RedisClient = wrapper.NewRedisClusterClient(wrapper.FQDNCluster{
		FQDN: serviceName,
		Port: int64(servicePort),
	})
	log.Debugf("parseConfig()+%+v", config)
	return config.RedisClient.Init(username, password, int64(timeout))
}
\`\`\`

\u8FD9\u91CC\u5FFD\u7565\u63D2\u4EF6\u914D\u7F6E\u89E3\u6790\u7684\u7EC6\u8282\uFF0C\u4E3B\u8981\u663E\u793A Redis \u89E3\u6790\u914D\u7F6E\u3002\u53EF\u4EE5\u770B\u51FA\u8FD9\u91CC\u9700\u8981\u8C03\u7528 \`wrapper.NewRedisClusterClient\` \u65B9\u6CD5\u521D\u59CB\u5316 RedisClient \u548C RedisClient \`Init\` \u65B9\u6CD5\u521D\u59CB\u5316 Redis \u8FDE\u63A5\u3002

### 3.2 \u63D2\u4EF6\u9650\u6D41 Lua \u811A\u672C
\u4EE4\u724C\u6876\u9650\u6D41\u7684 Lua \u811A\u672C\u5982\u4E0B\uFF1A
\`\`\`lua
local tokens_key = KEYS[1]
local timestamp_key = KEYS[2]
--redis.log(redis.LOG_WARNING, "tokens_key " .. tokens_key)

local rate = tonumber(ARGV[1])
local capacity = tonumber(ARGV[2])
local now = tonumber(ARGV[3])
local requested = tonumber(ARGV[4])
local unit = tonumber(ARGV[5])

local fill_time = capacity/rate
local ttl = math.floor(fill_time*2*unit)

--redis.log(redis.LOG_WARNING, "rate " .. ARGV[1])
--redis.log(redis.LOG_WARNING, "capacity " .. ARGV[2])
--redis.log(redis.LOG_WARNING, "now " .. ARGV[3])
--redis.log(redis.LOG_WARNING, "requested " .. ARGV[4])
--redis.log(redis.LOG_WARNING, "filltime " .. fill_time)
--redis.log(redis.LOG_WARNING, "ttl " .. ttl)

local last_tokens = tonumber(redis.call("get", tokens_key))
if last_tokens == nil then
  last_tokens = capacity
end
--redis.log(redis.LOG_WARNING, "last_tokens " .. last_tokens)

local last_refreshed = tonumber(redis.call("get", timestamp_key))
if last_refreshed == nil then
  last_refreshed = 0
end
--redis.log(redis.LOG_WARNING, "last_refreshed " .. last_refreshed)

local delta = math.max(0, (now-last_refreshed)/unit)
local filled_tokens = math.min(capacity, last_tokens + math.floor(delta*rate))
local allowed = filled_tokens >= requested
local new_tokens = filled_tokens
local allowed_num = 0
if allowed then
  new_tokens = filled_tokens - requested
  allowed_num = 1
end

--redis.log(redis.LOG_WARNING, "delta " .. delta)
--redis.log(redis.LOG_WARNING, "filled_tokens " .. filled_tokens)
--redis.log(redis.LOG_WARNING, "allowed_num " .. allowed_num)
--redis.log(redis.LOG_WARNING, "new_tokens " .. new_tokens)

if ttl > 0 then
  redis.call("setex", tokens_key, ttl, new_tokens)
  redis.call("setex", timestamp_key, ttl, now)
end

return { allowed_num, new_tokens, capacity, ttl}
\`\`\`
Lua \u811A\u672C\u662F\u5728 Redis \u4E2D\u6267\u884C\u7684\uFF0C\u7528\u4E8E\u5B9E\u73B0\u4EE4\u724C\u6876\u9650\u6D41\u7B97\u6CD5\u3002\u4E0B\u9762\u662F\u5BF9\u811A\u672C\u53C2\u6570\u548C\u539F\u7406\u7684\u5206\u6790\uFF1A

1. \u53C2\u6570\u89E3\u91CA\uFF1A
- KEYS[1] \u548C KEYS[2]\uFF1A\u8FD9\u4E24\u4E2A\u53C2\u6570\u662F\u901A\u8FC7 Redis \u8C03\u7528\u4F20\u9012\u7684\u952E\uFF08keys\uFF09\uFF0C\u901A\u5E38\u7528\u4E8E\u5B58\u50A8\u4EE4\u724C\u6876\u7684\u5F53\u524D\u4EE4\u724C\u6570\uFF08tokens_key\uFF09\u548C\u6700\u540E\u5237\u65B0\u65F6\u95F4\uFF08timestamp_key\uFF09\u3002
- ARGV[1] \u5230 ARGV[5]\uFF1A\u8FD9\u4E9B\u53C2\u6570\u662F\u901A\u8FC7 Redis \u8C03\u7528\u4F20\u9012\u7684\u53C2\u6570\uFF0C\u7528\u4E8E\u914D\u7F6E\u9650\u6D41\u7B56\u7565\u3002
  - rate\uFF1A\u5355\u4F4D\u65F6\u95F4\u5185\u751F\u6210\u7684\u4EE4\u724C\u6570\u91CF\u3002
  - capacity\uFF1A\u4EE4\u724C\u6876\u7684\u5BB9\u91CF\uFF0C\u5373\u6700\u591A\u53EF\u4EE5\u5BB9\u7EB3\u7684\u4EE4\u724C\u6570\u3002
  - now\uFF1A\u5F53\u524D\u65F6\u95F4\uFF0C\u901A\u5E38\u4EE5\u65F6\u95F4\u6233\u8868\u793A\uFF0C\u4EE5\u79D2\u5355\u4F4D\u3002
  - requested\uFF1A\u5F53\u524D\u8BF7\u6C42\u9700\u8981\u7684\u4EE4\u724C\u6570\u3002
  - unit\uFF1A\u4EE4\u724C\u751F\u6210\u7684\u65F6\u95F4\u5355\u4F4D\uFF0C1 \u8868\u793A\u79D2\uFF0C60 \u8868\u793A\u5206\u949F\uFF0C3600 \u8868\u793A\u5C0F\u65F6\u3002
2. \u811A\u672C\u539F\u7406\uFF1A
- \u521D\u59CB\u5316\u53D8\u91CF\uFF1A\u6839\u636E\u4F20\u5165\u7684\u53C2\u6570\u521D\u59CB\u5316\u4EE4\u724C\u6876\u7684\u586B\u5145\u65F6\u95F4\u548C TTL\uFF08\u751F\u5B58\u65F6\u95F4\uFF09\u3002
- \u83B7\u53D6\u5F53\u524D\u72B6\u6001\uFF1A\u4ECE Redis \u4E2D\u83B7\u53D6\u5F53\u524D\u7684\u4EE4\u724C\u6570\uFF08last_tokens\uFF09\u548C\u6700\u540E\u5237\u65B0\u65F6\u95F4\uFF08last_refreshed\uFF09\u3002\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u521D\u59CB\u5316\u4E3A\u4EE4\u724C\u6876\u7684\u5BB9\u91CF\u3002
- \u8BA1\u7B97\u4EE4\u724C\u586B\u5145\uFF1A
  - delta\uFF1A\u81EA\u4E0A\u6B21\u5237\u65B0\u4EE5\u6765\u7ECF\u8FC7\u7684\u5355\u4F4D\u65F6\u95F4\u3002
  - filled_tokens\uFF1A\u6839\u636E delta \u548C rate \u8BA1\u7B97\u5E94\u8BE5\u586B\u5145\u7684\u4EE4\u724C\u6570\uFF0C\u4F46\u4E0D\u80FD\u8D85\u8FC7\u6876\u7684\u5BB9\u91CF\u3002
- \u5224\u65AD\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\uFF1A
  - allowed\uFF1A\u5982\u679C\u5F53\u524D\u4EE4\u724C\u6570\u52A0\u4E0A\u586B\u5145\u7684\u4EE4\u724C\u6570\u5927\u4E8E\u7B49\u4E8E\u8BF7\u6C42\u7684\u4EE4\u724C\u6570\uFF0C\u5219\u5141\u8BB8\u8BF7\u6C42\u3002
- \u66F4\u65B0\u4EE4\u724C\u6570\uFF1A
  - \u5982\u679C\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u4ECE\u5F53\u524D\u4EE4\u724C\u6570\u4E2D\u51CF\u53BB\u8BF7\u6C42\u7684\u4EE4\u724C\u6570\uFF0C\u66F4\u65B0 new_tokens\u3002
- \u8BBE\u7F6E\u65B0\u7684\u72B6\u6001\uFF1A
  - \u5982\u679C TTL \u5927\u4E8E 0\uFF0C\u5219\u66F4\u65B0 Redis \u4E2D\u7684\u4EE4\u724C\u6570\u548C\u65F6\u95F4\u6233\uFF0C\u8BBE\u7F6E\u65B0\u7684 TTL\u3002
- \u8FD4\u56DE\u7ED3\u679C\uFF1A
  - \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u9650\u6D41\u7ED3\u679C\u7684\u6570\u7EC4\uFF0C\u5305\u62EC\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\u3001\u65B0\u7684\u4EE4\u724C\u6570\u3001\u6876\u5BB9\u91CF\u548C TTL\u3002

### 3.3 \u63D2\u4EF6\u9650\u6D41\u5177\u4F53\u5B9E\u73B0

\u9650\u6D41\u4E3B\u8981\u5B9E\u73B0\u5728\u63D2\u4EF6 \`onHttpRequestHeaders\` \u65B9\u6CD5\u4E2D\uFF0C\u90E8\u5206\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A

\`\`\`go
// onHttpRequestHeaders \u51FD\u6570\u5728\u5904\u7406 HTTP \u8BF7\u6C42\u5934\u65F6\u88AB\u8C03\u7528\uFF0C\u7528\u4E8E\u6267\u884C\u9650\u6D41\u903B\u8F91\u3002
func onHttpRequestHeaders(ctx wrapper.HttpContext, config LimitConfig, log wrapper.Log) types.Action {
	log.Debugf("onHttpRequestHeaders()")
	// \u521D\u59CB\u5316 tokens \u5207\u7247\uFF0C\u7528\u4E8E\u5B58\u50A8\u4ECE\u8BF7\u6C42\u5934\u6216\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\u7684 tokens \u4FE1\u606F
	var tokens []string

	// \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F
	if config.InHeader {
		// \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E\uFF08key\uFF09\uFF0C\u5C1D\u8BD5\u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C
		for _, key := range config.Keys {
			// \u4F7F\u7528 proxywasm \u5E93\u7684 GetHttpRequestHeader \u51FD\u6570\u83B7\u53D6\u8BF7\u6C42\u5934\u4E2D\u7684\u503C
			value, err := proxywasm.GetHttpRequestHeader(key)
			// \u5982\u679C\u6CA1\u6709\u9519\u8BEF\u4E14\u503C\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D
			if err == nil && value != "" {
				tokens = append(tokens, value)
			}
		}
	} else if config.InQuery {
		// \u5982\u679C\u914D\u7F6E\u6307\u5B9A\u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6 tokens \u4FE1\u606F
		// \u83B7\u53D6 ":path" \u8BF7\u6C42\u5934\u4EE5\u83B7\u53D6\u8BF7\u6C42 URL
		requestUrl, _ := proxywasm.GetHttpRequestHeader(":path")
		// \u89E3\u6790 URL \u5E76\u83B7\u53D6\u67E5\u8BE2\u53C2\u6570
		url, _ := url.Parse(requestUrl)
		queryValues := url.Query()

		// \u904D\u5386\u914D\u7F6E\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u952E
		for _, key := range config.Keys {
			// \u4ECE\u67E5\u8BE2\u53C2\u6570\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u952E\u7684\u503C
			values, ok := queryValues[key]
			// \u5982\u679C\u67E5\u8BE2\u53C2\u6570\u5B58\u5728\u4E14\u6709\u503C\uFF0C\u5219\u5C06\u503C\u6DFB\u52A0\u5230 tokens \u5207\u7247\u4E2D
			if ok && len(values) > 0 {
				tokens = append(tokens, values...)
			}
		}
	}

	// \u5982\u679C\u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u4E86\u591A\u4E8E\u4E00\u4E2A\u7684 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406
	if len(tokens) > 1 {
		return deniedMultiKeyAuthData()
	} else if len(tokens) <= 0 {
		// \u5982\u679C\u6CA1\u6709\u63D0\u53D6\u5230 tokens\uFF0C\u8FD4\u56DE\u9519\u8BEF\u5904\u7406
		return deniedNoKeyAuthData()
	}

	// \u63D0\u53D6\u7B2C\u4E00\u4E2A token \u4F5C\u4E3A\u4E3B\u8981\u7684\u4EE4\u724C\u4FE1\u606F
	limitKey := strings.Split(tokens[0], ",")[0]
	log.Debugf("limitKey:%s", limitKey)

	// \u6839\u636E\u63D0\u53D6\u7684 limitKey \u67E5\u627E\u5BF9\u5E94\u7684\u9650\u6D41\u9879
	limitItem := findLimitItem(config, limitKey)
	log.Debugf("limitItem:%+v", limitItem)

	// \u5982\u679C\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684\u9650\u6D41\u9879\uFF0C\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42
	if limitItem.Consumer == "" {
		return types.ActionContinue
	}

	// \u6784\u5EFA Redis \u811A\u672C\u9700\u8981\u7684\u952E\uFF0C\u7528\u4E8E\u64CD\u4F5C\u4EE4\u724C\u6876
	tokenKey := fmt.Sprintf(ClusterRateLimitFormat, limitKey, "token")
	expireKey := fmt.Sprintf(ClusterRateLimitFormat, limitKey, "expire")

	// \u83B7\u53D6\u5F53\u524D\u65F6\u95F4\uFF0C\u7528\u4E8E\u8BA1\u7B97\u4EE4\u724C\u6876\u7684\u586B\u5145\u72B6\u6001
	now := time.Now()
	// \u5C06\u5F53\u524D\u65F6\u95F4\u8F6C\u6362\u4E3A Unix \u65F6\u95F4\u6233\uFF08\u79D2\uFF09
	unixTimestamp := now.UnixNano()
	milliseconds := unixTimestamp / 1e6
	seconds := milliseconds / 1000

	// \u6784\u5EFA\u8C03\u7528 Redis \u811A\u672C\u6240\u9700\u7684\u53C2\u6570
	keys := []interface{}{tokenKey, expireKey}
	args := []interface{}{limitItem.Rate, limitItem.Capacity, seconds, 1, 1}

	// \u8C03\u7528 Redis \u811A\u672C\u6267\u884C\u9650\u6D41\u903B\u8F91
	err := config.RedisClient.Eval(BucketTokenScript, 2, keys, args, func(response resp.Value) {
		log.Debugf("RedisClient.Eval()\uFF0Ckeys:%+v,args:%+v", keys, args)
		// \u68C0\u67E5\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u5426\u5305\u542B 4 \u4E2A\u5143\u7D20
		resultArray := response.Array()
		if len(resultArray) != 4 {
			log.Errorf("redis response parse error, response: %v", response)
            proxywasm.ResumeHttpRequest()
			return
		}
		// \u6839\u636E\u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\u521B\u5EFA LimitContext \u5BF9\u8C61
		context := LimitContext{
			Allowed:   resultArray[0].Integer(),
			Remaining: resultArray[1].Integer(),
			Count:     resultArray[2].Integer(),
			Reset:     resultArray[3].Integer(),
		}
		log.Debugf("context:%+v", context)
		// \u5982\u679C\u8BF7\u6C42\u672A\u88AB\u5141\u8BB8\uFF08Allowed <= 0\uFF09\uFF0C\u89E6\u53D1\u9650\u6D41\u903B\u8F91
		if context.Allowed <= 0 {
			log.Debugf("request rejected")
			rejected(config, context)
			return
		} else {
			// \u5C06\u9650\u6D41\u4E0A\u4E0B\u6587\u5B58\u50A8\u5728 HttpContext \u4E2D\uFF0C\u4F9B\u540E\u7EED\u5904\u7406\u4F7F\u7528
			ctx.SetContext(LimitContextKey, context)
		}
		// \u6062\u590D HTTP \u8BF7\u6C42\u5904\u7406
		proxywasm.ResumeHttpRequest()
	})
	// \u5982\u679C\u8C03\u7528 Redis \u811A\u672C\u65F6\u51FA\u73B0\u9519\u8BEF\uFF0C\u8BB0\u5F55\u9519\u8BEF\u5E76\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42
	if err != nil {
		log.Errorf("redis call failed: %v", err)
		return types.ActionContinue
	}
	// \u6682\u505C\u5904\u7406\u5F53\u524D\u8BF7\u6C42\u5934\uFF0C\u7B49\u5F85 Redis \u811A\u672C\u8C03\u7528\u5B8C\u6210
	return types.HeaderStopAllIterationAndWatermark
}

// findLimitItem \u51FD\u6570\u7528\u4E8E\u5728\u7ED9\u5B9A\u7684\u914D\u7F6E\u4E2D\u67E5\u627E\u4E0E\u7279\u5B9A\u6D88\u8D39\u8005\u5339\u914D\u7684\u9650\u6D41\u9879\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u5177\u4F53\u7684\u5339\u914D\u9879\uFF0C\u5B83\u5C06\u8FD4\u56DE\u4E00\u4E2A\u9ED8\u8BA4\u7684 LimitItem \u7ED3\u6784\u3002
func findLimitItem(config LimitConfig, key string) LimitItem {
	// \u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879
	for _, limitItem := range config.Limits {
		// \u68C0\u67E5\u5F53\u524D\u9650\u6D41\u9879\u7684\u6D88\u8D39\u8005\u5B57\u6BB5\u662F\u5426\u4E0E\u63D0\u4F9B\u7684 key \u5339\u914D\uFF0C\u4E14\u6D88\u8D39\u8005\u4E0D\u662F\u901A\u914D\u7B26"*"
		if limitItem.Consumer == key && limitItem.Consumer != "*" {
			// \u5982\u679C\u627E\u5230\u5339\u914D\u7684\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879
			return limitItem
		}
	}
	// \u518D\u6B21\u904D\u5386\u914D\u7F6E\u4E2D\u7684\u6240\u6709\u9650\u6D41\u9879\uFF0C\u8FD9\u6B21\u662F\u4E3A\u4E86\u67E5\u627E\u901A\u914D\u7B26"*"\u7684\u6D88\u8D39\u8005
	// \u901A\u914D\u7B26"*"\u8868\u793A\u8FD9\u4E2A\u9650\u6D41\u9879\u9002\u7528\u4E8E\u6240\u6709\u6D88\u8D39\u8005
	for _, limitItem := range config.Limits {
		if limitItem.Consumer == "*" {
			// \u5982\u679C\u627E\u5230\u901A\u914D\u7B26\u9650\u6D41\u9879\uFF0C\u8FD4\u56DE\u8FD9\u4E2A\u9650\u6D41\u9879
			return limitItem
		}
	}
	// \u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684 LimitItem \u7ED3\u6784\uFF0C\u8868\u793A\u6CA1\u6709\u627E\u5230\u4EFB\u4F55\u9002\u7528\u7684\u9650\u6D41\u89C4\u5219
	return LimitItem{}
}
\`\`\`
onHttpRequestHeaders \u51FD\u6570\u7684\u6838\u5FC3\u903B\u8F91\u53EF\u4EE5\u6982\u62EC\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A
- \u83B7\u53D6 Tokens\uFF1A\u6839\u636E\u914D\u7F6E\uFF08config.InHeader \u6216 config.InQuery\uFF09\uFF0C\u4ECE\u8BF7\u6C42\u5934\u6216\u67E5\u8BE2\u53C2\u6570\u4E2D\u63D0\u53D6\u7528\u4E8E\u9650\u6D41\u7684 tokens \u4FE1\u606F\u3002
- \u9A8C\u8BC1 Tokens\uFF1A\u68C0\u67E5\u63D0\u53D6\u7684 tokens \u662F\u5426\u5B58\u5728\u4E14\u6570\u91CF\u5408\u7406\uFF08\u4E0D\u80FD\u591A\u4E8E\u4E00\u4E2A\uFF09\uFF0C\u5982\u679C\u4E0D\u7B26\u5408\u8981\u6C42\uFF0C\u8FD4\u56DE\u76F8\u5E94\u7684\u9519\u8BEF\u5904\u7406\u3002
- \u67E5\u627E\u9650\u6D41\u9879\uFF1A\u4F7F\u7528\u63D0\u53D6\u7684 tokens \u67E5\u627E\u914D\u7F6E\u4E2D\u7684\u9650\u6D41\u89C4\u5219\uFF08LimitItem\uFF09\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u9002\u7528\u7684\u9650\u6D41\u89C4\u5219\uFF0C\u5219\u5141\u8BB8\u8BF7\u6C42\u7EE7\u7EED\u3002
- \u6267\u884C\u9650\u6D41\u903B\u8F91\uFF1A\u5982\u679C\u627E\u5230\u9650\u6D41\u89C4\u5219\uFF0C\u6784\u5EFA Redis \u811A\u672C\u9700\u8981\u7684\u952E\u548C\u53C2\u6570\uFF0C\u7136\u540E\u8C03\u7528 Redis \u811A\u672C\u6267\u884C\u9650\u6D41\u7B97\u6CD5\u3002
- \u5904\u7406 Redis \u811A\u672C\u7ED3\u679C\uFF1A\u6839\u636E Redis \u811A\u672C\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u521B\u5EFA LimitContext \u5BF9\u8C61\u5E76\u6839\u636E\u7B97\u6CD5\u7ED3\u679C\u51B3\u5B9A\u662F\u5426\u5141\u8BB8\u8BF7\u6C42\u7EE7\u7EED\uFF1A
  - \u5982\u679C\u8BF7\u6C42\u88AB\u62D2\u7EDD\uFF08context.Allowed \\<= 0\uFF09\uFF0C\u6267\u884C\u9650\u6D41\u903B\u8F91\u5E76\u901A\u77E5\u5BA2\u6237\u7AEF\u3002
  - \u5982\u679C\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u5C06 LimitContext \u5BF9\u8C61\u5B58\u50A8\u5728 HttpContext \u4E2D\uFF0C\u4F9B\u540E\u7EED\u5904\u7406\u4F7F\u7528\u3002


## 4 \u6D4B\u8BD5\u548C\u9A8C\u8BC1

1. \u6B63\u5E38\u6D41\u91CF
\`\`\`shell
curl -X POST -v http://127.0.0.1:10000/hello \\
    -H 'Authorization: Bearer credential1' \\
    -H 'Content-type: application/json' \\
    -H 'host:foo.com' \\
    -d '{"username":["unamexxxx"],"password":["pswdxxxx"]}'

*   Trying 127.0.0.1:10000...
* Connected to 127.0.0.1 (127.0.0.1) port 10000 (#0)
> POST /hello HTTP/1.1
> Host:foo.com
> User-Agent: curl/8.1.2
> Accept: */*
> Authorization: Bearer credential1
> Content-type: application/json
> Content-Length: 50
>
< HTTP/1.1 200 OK
< content-type: application/json
< x-content-type-options: nosniff
< date: Tue, 20 Aug 2024 08:55:13 GMT
< content-length: 692
< req-cost-time: 42
< req-arrive-time: 1724144113842
< resp-start-time: 1724144113885
< x-envoy-upstream-service-time: 8
< x-ratelimit-limit: 4
< x-ratelimit-remaining: 3
< server: envoy
<
{
 "path": "/hello",
 "host": "foo.com",
 "method": "POST",
 "proto": "HTTP/1.1",
 "headers": {
  "Accept": [
   "*/*"
  ],
  "Authorization": [
   "Bearer credential1"
  ],
  "Content-Length": [
   "50"
  ],
  "Content-Type": [
   "application/json"
  ],
  "Original-Host": [
   "foo.com"
  ],
  "Req-Start-Time": [
   "1724144113842"
  ],
  "User-Agent": [
   "curl/8.1.2"
  ],
  "X-Envoy-Expected-Rq-Timeout-Ms": [
   "15000"
  ],
  "X-Forwarded-Proto": [
   "https"
  ],
  "X-Request-Id": [
   "b40e9ebb-f36c-4e22-b8fc-2559c9495f43"
  ]
 },
 "namespace": "",
 "ingress": "",
 "service": "",
 "pod": "",
 "body": {
  "password": [
   "pswdxxxx"
  ],
  "username": [
   "unamexxxx"
  ]
 }
\`\`\`
\u53EF\u4EE5\u770B\u5230\u8BF7\u6C42\u88AB\u5141\u8BB8\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E86\u76F8\u5E94\u7684\u54CD\u5E94\u3002 
\`\`\`shell
< x-ratelimit-limit: 4
< x-ratelimit-remaining: 3
\`\`\`

2. \u89E6\u53D1\u6D41\u63A7

\`\`\`shell
for i in $(seq 1 10); do
  curl -X POST -v http://127.0.0.1:10000/hello \\
    -H 'Authorization: Bearer credential1' \\
    -H 'Content-type: application/json' \\
    -H 'host:foo.com' \\
    -d '{"username":["unamexxxx"],"password":["pswdxxxx"]}'
done

> POST /hello HTTP/1.1
> Host:foo.com
> User-Agent: curl/8.1.2
> Accept: */*
> Authorization: Bearer credential1
> Content-type: application/json
> Content-Length: 50
>
< HTTP/1.1 429 Too Many Requests
< x-ratelimit-limit: 4
< x-ratelimit-remaining: 0
< x-ratelimit-reset: 4
< content-length: 17
< content-type: text/plain
< date: Tue, 20 Aug 2024 08:56:57 GMT
< server: envoy
<
* Connection #0 to host 127.0.0.1 left intact
Too Many Requests%
\`\`\`

## \u53C2\u8003
- [1] [\u9650\u6D41\u7B97\u6CD5\u9009\u62E9](https://help.aliyun.com/document_detail/149952.html)








`},i=function(){return s},t=function(){return[{depth:2,slug:"1-redis-\u8C03\u7528",text:"1 Redis \u8C03\u7528"},{depth:2,slug:"2-\u4EE4\u724C\u6876\u9650\u6D41",text:"2 \u4EE4\u724C\u6876\u9650\u6D41"},{depth:2,slug:"3-\u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA",text:"3 \u672C\u5730\u5F00\u53D1\u73AF\u5883\u642D\u5EFA"},{depth:3,slug:"31--\u521D\u59CB\u5316\u5DE5\u7A0B\u76EE\u5F55",text:"3.1  \u521D\u59CB\u5316\u5DE5\u7A0B\u76EE\u5F55"},{depth:3,slug:"32--makefiledockerfiledocker-composeyamlenvoyyaml-\u6587\u4EF6",text:"3.2  Makefile\u3001Dockerfile\u3001docker-compose.yaml\u3001envoy.yaml \u6587\u4EF6"},{depth:2,slug:"3-\u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u5F00\u53D1",text:"3 \u4EE4\u724C\u6876\u9650\u6D41\u63D2\u4EF6\u5F00\u53D1"},{depth:3,slug:"31-\u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790",text:"3.1 \u63D2\u4EF6\u914D\u7F6E\u548C\u914D\u7F6E\u89E3\u6790"},{depth:3,slug:"32-\u63D2\u4EF6\u9650\u6D41-lua-\u811A\u672C",text:"3.2 \u63D2\u4EF6\u9650\u6D41 Lua \u811A\u672C"},{depth:3,slug:"33-\u63D2\u4EF6\u9650\u6D41\u5177\u4F53\u5B9E\u73B0",text:"3.3 \u63D2\u4EF6\u9650\u6D41\u5177\u4F53\u5B9E\u73B0"},{depth:2,slug:"4-\u6D4B\u8BD5\u548C\u9A8C\u8BC1",text:"4 \u6D4B\u8BD5\u548C\u9A8C\u8BC1"},{depth:2,slug:"\u53C2\u8003",text:"\u53C2\u8003"}]},n=c((f,m,u)=>{const{layout:g,...l}=e;return l.file=a,l.url=p,y`${o()}${v(s)}`})});export{n as Content,x as __tla,i as compiledContent,n as default,a as file,e as frontmatter,t as getHeadings,d as rawContent,p as url};
