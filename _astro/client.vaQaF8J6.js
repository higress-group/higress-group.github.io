const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/signals.module.By3rUS0y.js","_astro/preact.module.CgDnIUX3.js","_astro/hooks.module.HQXUcZE8.js"])))=>i.map(i=>d[i]);
import{_ as w,__tla as A}from"./astro/assets-service.DmDXK_Mj.js";import{_ as c,B as y,D as E}from"./preact.module.CgDnIUX3.js";let g,O=Promise.all([(()=>{try{return A}catch{}})()]).then(async()=>{const m=({value:t,name:i,hydrate:e=!0})=>t?c(e?"astro-slot":"astro-static-slot",{name:i,dangerouslySetInnerHTML:{__html:t}}):null;m.shouldComponentUpdate=()=>!1;var d=m;const s=new Map;g=t=>async(i,e,{default:f,...h},{client:v})=>{if(t.hasAttribute("ssr")){for(const[n,u]of Object.entries(h))e[n]=c(d,{value:u,name:n});if(t.dataset.preactSignals){const{signal:n}=await w(async()=>{const{signal:a}=await import("./signals.module.By3rUS0y.js");return{signal:a}},__vite__mapDeps([0,1,2]));let u=JSON.parse(t.dataset.preactSignals);for(const[a,r]of Object.entries(u))if(Array.isArray(r))r.forEach(([l,o])=>{const _=e[a][o];let p=_;if(typeof o!="string"&&(p=_[0],o=_[1]),!s.has(l)){const b=n(p);s.set(l,b)}e[a][o]=s.get(l)});else{if(!s.has(r)){const l=n(e[a]);s.set(r,l)}e[a]=s.get(r)}}(v!=="only"?E:y)(c(i,e,f!=null?c(d,{value:f}):f),t),t.addEventListener("astro:unmount",()=>y(null,t),{once:!0})}}});export{O as __tla,g as default};
