const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/index.Bltn--Ds.js","_astro/_commonjsHelpers.BosuxZz1.js","_astro/index.DHTSJoOL.js","_astro/bundle-mjs.B-0Su4QS.js","_astro/preact.module.CgDnIUX3.js","_astro/hooks.module.HQXUcZE8.js","_astro/tailwind.Bou2P1xi.css","_astro/style.DrAKQua4.css"])))=>i.map(i=>d[i]);
var ye=Object.defineProperty;var we=(f,l,p)=>l in f?ye(f,l,{enumerable:!0,configurable:!0,writable:!0,value:p}):f[l]=p;var w=(f,l,p)=>we(f,typeof l!="symbol"?l+"":l,p);let u,q,k,_,F,z,D,L,H,G,B,V,J,S,b,Q,X,Y,K,Z,ee,be=(async()=>{let f,l,p,I,M,j,N,E,O;f="modulepreload",l=function(e){return"/"+e},p={},L=function(e,t,i){let r=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),n=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));r=Promise.allSettled(t.map(a=>{if(a=l(a),a in p)return;p[a]=!0;const h=a.endsWith(".css"),$=h?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${a}"]${$}`))return;const m=document.createElement("link");if(m.rel=h?"stylesheet":f,h||(m.as="script"),m.crossOrigin="",m.href=a,n&&m.setAttribute("nonce",n),document.head.appendChild(m),h)return new Promise((g,y)=>{m.addEventListener("load",g),m.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${a}`)))})}))}function s(o){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=o,window.dispatchEvent(n),!n.defaultPrevented)throw o}return r.then(o=>{for(const n of o||[])n.status==="rejected"&&s(n.reason);return e().catch(s)})},z={name:"MissingMediaQueryDirective",title:"Missing value for `client:media` directive.",message:'Media query not provided for `client:media` directive. A media query similar to `client:media="(max-width: 600px)"` must be provided'},B={name:"NoMatchingRenderer",title:"No matching renderer found.",message:(e,t,i,r)=>`Unable to render \`${e}\`.

${r>0?`There ${i?"are":"is"} ${r} renderer${i?"s":""} configured in your \`astro.config.mjs\` file,
but ${i?"none were":"it was not"} able to server-side render \`${e}\`.`:`No valid renderer was found ${t?`for the \`.${t}\` file extension.`:"for this file extension."}`}`,hint:e=>`Did you mean to enable the ${e} integration?

See https://docs.astro.build/en/guides/framework-components/ for more information on how to install and configure integrations.`},J={name:"NoClientEntrypoint",title:"No client entrypoint specified in renderer.",message:(e,t,i)=>`\`${e}\` component has a \`client:${t}\` directive, but no client entrypoint was provided by \`${i}\`.`,hint:"See https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option for more information on how to configure your renderer."},V={name:"NoClientOnlyHint",title:"Missing hint on client:only directive.",message:e=>`Unable to render \`${e}\`. When using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.`,hint:e=>`Did you mean to pass \`client:only="${e}"\`? See https://docs.astro.build/en/reference/directives-reference/#clientonly for more information on client:only`},D={name:"NoMatchingImport",title:"No import found for component.",message:e=>`Could not render \`${e}\`. No matching import has been found for \`${e}\`.`,hint:"Please make sure the component is properly imported."},F={name:"InvalidComponentArgs",title:"Invalid component arguments.",message:e=>`Invalid arguments passed to${e?` <${e}>`:""} component.`,hint:"Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."},K={name:"ImageMissingAlt",title:'Image missing required "alt" property.',message:'Image missing "alt" property. "alt" text is required to describe important images on the page.',hint:'Use an empty string ("") for decorative images.'},Y={name:"InvalidImageService",title:"Error while loading image service.",message:"There was an error loading the configured image service. Please see the stack trace for more information."},I={name:"MissingImageDimension",title:"Missing image dimensions",message:(e,t)=>`Missing ${e==="both"?"width and height attributes":`${e} attribute`} for ${t}. When using remote images, both dimensions are required unless in order to avoid CLS.`,hint:"If your image is inside your `src` folder, you probably meant to import it instead. See [the Imports guide for more information](https://docs.astro.build/en/guides/imports/#other-assets). You can also use `inferSize={true}` for remote images to get the original dimensions."},_={name:"FailedToFetchRemoteImageDimensions",title:"Failed to retrieve remote image dimensions",message:e=>`Failed to get the dimensions for ${e}.`,hint:"Verify your remote image URL is accurate, and that you are not using `inferSize` with a file located in your `public/` folder."},M={name:"UnsupportedImageFormat",title:"Unsupported image format",message:(e,t,i)=>`Received unsupported format \`${e}\` from \`${t}\`. Currently only ${i.join(", ")} are supported by our image services.`,hint:"Using an `img` tag directly instead of the `Image` component might be what you're looking for."},j={name:"UnsupportedImageConversion",title:"Unsupported image conversion",message:"Converting between vector (such as SVGs) and raster (such as PNGs and JPEGs) images is not currently supported."},S={name:"ExpectedImage",title:"Expected src to be an image.",message:(e,t,i)=>`Expected \`src\` property for \`getImage\` or \`<Image />\` to be either an ESM imported image or a string with the path of a remote image. Received \`${e}\` (type: \`${t}\`).

Full serialized options received: \`${i}\`.`,hint:"This error can often happen because of a wrong path. Make sure the path to your image is correct. If you're passing an async function, make sure to call and await it."},k={name:"ExpectedImageOptions",title:"Expected image options.",message:e=>`Expected getImage() parameter to be an object. Received \`${e}\`.`},N={name:"IncompatibleDescriptorOptions",title:"Cannot set both `densities` and `widths`",message:"Only one of `densities` or `widths` can be specified. In most cases, you'll probably want to use only `widths` if you require specific widths.",hint:"Those attributes are used to construct a `srcset` attribute, which cannot have both `x` and `w` descriptors."},E={name:"LocalImageUsedWrongly",title:"Local images must be imported.",message:e=>`\`Image\`'s and \`getImage\`'s \`src\` parameter must be an imported image or an URL, it cannot be a string filepath. Received \`${e}\`.`,hint:"If you want to use an image from your `src` folder, you need to either import it or if the image is coming from a content collection, use the [image() schema helper](https://docs.astro.build/en/guides/images/#images-in-content-collections). See https://docs.astro.build/en/guides/images/#src-required for more information on the `src` property."},H={name:"AstroGlobUsedOutside",title:"Astro.glob() used outside of an Astro file.",message:e=>`\`Astro.glob(${e})\` can only be used in \`.astro\` files. \`import.meta.glob(${e})\` can be used instead to achieve a similar result.`,hint:"See Vite's documentation on `import.meta.glob` for more information: https://vitejs.dev/guide/features.html#glob-import"},G={name:"AstroGlobNoMatch",title:"Astro.glob() did not match any files.",message:e=>`\`Astro.glob(${e})\` did not return any matching files.`,hint:"Check the pattern for typos."},O={name:"MissingSharp",title:"Could not find Sharp.",message:"Could not find Sharp. Please install Sharp (`sharp`) manually into your project or migrate to another image service.",hint:"See Sharp's installation instructions for more information: https://sharp.pixelplumbing.com/install. If you are not relying on `astro:assets` to optimize, transform, or process any images, you can configure a passthrough image service instead of installing Sharp. See https://docs.astro.build/en/reference/errors/missing-sharp for more information.\n\nSee https://docs.astro.build/en/guides/images/#default-image-service for more information on how to migrate to another image service."};function te(e){return e.replace(/\r\n|\r(?!\n)|\n/g,`
`)}function ie(e,t){if(!t||t.line===void 0||t.column===void 0)return"";const i=te(e).split(`
`).map(n=>n.replace(/\t/g,"  ")),r=[];for(let n=-2;n<=2;n++)i[t.line+n]&&r.push(t.line+n);let s=0;for(const n of r){let a=`> ${n}`;a.length>s&&(s=a.length)}let o="";for(const n of r){const a=n===t.line-1;o+=a?"> ":"  ",o+=`${n+1} | ${i[n]}
`,a&&(o+=`${Array.from({length:s}).join(" ")}  | ${Array.from({length:t.column}).join(" ")}^
`)}return o}u=class extends Error{constructor(t,i){const{name:r,title:s,message:o,stack:n,location:a,hint:h,frame:$}=t;super(o,i);w(this,"loc");w(this,"title");w(this,"hint");w(this,"frame");w(this,"type","AstroError");this.title=s,this.name=r,o&&(this.message=o),this.stack=n||this.stack,this.loc=a,this.hint=h,this.frame=$}setLocation(t){this.loc=t}setName(t){this.name=t}setMessage(t){this.message=t}setHint(t){this.hint=t}setFrame(t,i){this.frame=ie(t,i)}static is(t){return t.type==="AstroError"}};function re(e){return e.endsWith("/")?e.slice(0,e.length-1):e}function ne(e){return e.startsWith("/")?e.substring(1):e}function se(e){return e.replace(/^\/|\/$/g,"")}function oe(e){return typeof e=="string"||e instanceof String}function ae(...e){return e.filter(oe).map((t,i)=>i===0?re(t):i===e.length-1?ne(t):se(t)).join("/")}function R(e){return/^(?:http|ftp|https|ws):?\/\//.test(e)||e.startsWith("data:")}let W,A;W=["jpeg","jpg","png","tiff","webp","gif","svg","avif"],A="webp",q=["src","width","height","format","quality"],b=function(e){return typeof e=="object"},X=function(e){return typeof e=="string"},Z=async function(e){var t;return typeof e=="object"&&"then"in e?(t=(await e).default)!=null?t:await e:e};function ce(e,t){return me(e,t.protocol)&&C(e,t.hostname,!0)&&he(e,t.port)&&de(e,t.pathname)}function he(e,t){return!t||t===e.port}function me(e,t){return!t||t===e.protocol.slice(0,-1)}function C(e,t,i){if(t){if(!i||!t.startsWith("*"))return t===e.hostname;if(t.startsWith("**.")){const r=t.slice(2);return r!==e.hostname&&e.hostname.endsWith(r)}else if(t.startsWith("*.")){const r=t.slice(1);return e.hostname.replace(r,"").split(".").filter(Boolean).length===1}}else return!0;return!1}function de(e,t,i){if(t)if(t.endsWith("*")){if(t.endsWith("/**")){const r=t.slice(0,-2);return r!==e.pathname&&e.pathname.startsWith(r)}else if(t.endsWith("/*")){const r=t.slice(0,-1);return e.pathname.replace(r,"").split("/").filter(Boolean).length===1}}else return t===e.pathname;else return!0;return!1}function le(e,{domains:t=[],remotePatterns:i=[]}){if(!R(e))return!1;const r=new URL(e);return t.some(s=>C(r,s))||i.some(s=>ce(r,s))}Q=function(e){return e?"transform"in e:!1};function ge(e){let t=parseInt(e);return Number.isNaN(t)?e:t}const v={propertiesToHash:q,validateOptions(e){if(!e.src||typeof e.src!="string"&&typeof e.src!="object")throw new u({...S,message:S.message(JSON.stringify(e.src),typeof e.src,JSON.stringify(e,(t,i)=>i===void 0?null:i))});if(b(e.src)){if(!W.includes(e.src.format))throw new u({...M,message:M.message(e.src.format,e.src.src,W)});if(e.widths&&e.densities)throw new u(N);if(e.src.format==="svg"&&(e.format="svg"),e.src.format==="svg"&&e.format!=="svg"||e.src.format!=="svg"&&e.format==="svg")throw new u(j)}else{if(e.src.startsWith("/@fs/")||!R(e.src)&&!e.src.startsWith("/"))throw new u({...E,message:E.message(e.src)});let t;if(!e.width&&!e.height?t="both":!e.width&&e.height?t="width":e.width&&!e.height&&(t="height"),t)throw new u({...I,message:I.message(t,e.src)})}return e.format||(e.format=A),e.width&&(e.width=Math.round(e.width)),e.height&&(e.height=Math.round(e.height)),e},getHTMLAttributes(e){var y,d;const{targetWidth:t,targetHeight:i}=P(e),{src:r,width:s,height:o,format:n,quality:a,densities:h,widths:$,formats:m,...g}=e;return{...g,width:t,height:i,loading:(y=g.loading)!=null?y:"lazy",decoding:(d=g.decoding)!=null?d:"async"}},getSrcSet(e){var y;const t=[],{targetWidth:i}=P(e),{widths:r,densities:s}=e,o=(y=e.format)!=null?y:A;let n=e.width,a=1/0;b(e.src)&&(n=e.src.width,a=n);const{width:h,height:$,...m}=e,g=[];if(s){const d=s.map(c=>typeof c=="number"?c:parseFloat(c)),U=d.sort().map(c=>Math.round(i*c));g.push(...U.map((c,pe)=>({maxTargetWidth:Math.min(c,a),descriptor:`${d[pe]}x`})))}else r&&g.push(...r.map(d=>({maxTargetWidth:Math.min(d,a),descriptor:`${d}w`})));for(const{maxTargetWidth:d,descriptor:U}of g){const c={...m};d!==n?c.width=d:e.width&&e.height&&(c.width=e.width,c.height=e.height),t.push({transform:c,descriptor:U,attributes:{type:`image/${o}`}})}return t},getURL(e,t){const i=new URLSearchParams;if(b(e.src))i.append("href",e.src.src);else if(le(e.src,t))i.append("href",e.src);else return e.src;return Object.entries({w:"width",h:"height",q:"quality",f:"format"}).forEach(([r,s])=>{e[s]&&i.append(r,e[s].toString())}),`${ae("/","/_image")}?${i}`},parseURL(e){const t=e.searchParams;return t.has("href")?{src:t.get("href"),width:t.has("w")?parseInt(t.get("w")):void 0,height:t.has("h")?parseInt(t.get("h")):void 0,format:t.get("f"),quality:t.get("q")}:void 0}};function P(e){let t=e.width,i=e.height;if(b(e.src)){const r=e.src.width/e.src.height;i&&!t?t=Math.round(i*r):t&&!i?i=Math.round(t/r):!t&&!i&&(t=e.src.width,i=e.src.height)}return{targetWidth:t,targetHeight:i}}let x;const T={low:25,mid:50,high:80,max:100};async function ue(){let e;try{e=(await L(async()=>{const{default:t}=await import("../index.Bltn--Ds.js").then(i=>i.i);return{default:t}},__vite__mapDeps([0,1,2,3,4,5,6,7]))).default}catch{throw new u(O)}return e.cache(!1),e}var fe={validateOptions:v.validateOptions,getURL:v.getURL,parseURL:v.parseURL,getHTMLAttributes:v.getHTMLAttributes,getSrcSet:v.getSrcSet,async transform(e,t,i){x||(x=await ue());const r=t;if(r.format==="svg")return{data:e,format:"svg"};const s=x(e,{failOnError:!1,pages:-1,limitInputPixels:i.service.config.limitInputPixels});if(s.rotate(),r.height&&!r.width?s.resize({height:Math.round(r.height)}):r.width&&s.resize({width:Math.round(r.width)}),r.format){let a;if(r.quality){const h=ge(r.quality);typeof h=="number"?a=h:a=r.quality in T?T[r.quality]:void 0}s.toFormat(r.format,{quality:a})}const{data:o,info:n}=await s.toBuffer({resolveWithObject:!0});return{data:o,format:n.format}}};ee=Object.freeze(Object.defineProperty({__proto__:null,default:fe},Symbol.toStringTag,{value:"Module"}))})();export{u as A,q as D,k as E,_ as F,F as I,z as M,D as N,L as _,be as __tla,H as a,G as b,B as c,V as d,J as e,S as f,b as g,Q as h,X as i,Y as j,K as k,Z as r,ee as s};
